{"version":3,"file":"poreprober.min.js","sources":["../node_modules/crystcif-parse/lib/tokens.js","../node_modules/crystcif-parse/lib/parse.js","../node_modules/numeric/numeric-1.2.6.js","../node_modules/mendeleev/lib/Compound.js","../node_modules/mendeleev/lib/PeriodicTable.js","../node_modules/mendeleev/lib/Utility.js","../node_modules/mendeleev/index.js","../node_modules/crystcif-parse/lib/utils.js","../node_modules/crystcif-parse/lib/symmetry.js","../node_modules/crystcif-parse/lib/cryst.js","../node_modules/crystcif-parse/index.js","../node_modules/mathjs/es/core/config.js","../node_modules/mathjs/es/utils/is.js","../node_modules/mathjs/es/utils/object.js","../node_modules/mathjs/es/core/function/config.js","../node_modules/mathjs/es/entry/configReadonly.js","../node_modules/typed-function/typed-function.js","../node_modules/mathjs/es/utils/number.js","../node_modules/mathjs/es/utils/bignumber/formatter.js","../node_modules/mathjs/es/utils/string.js","../node_modules/mathjs/es/error/DimensionError.js","../node_modules/mathjs/es/error/IndexError.js","../node_modules/mathjs/es/utils/array.js","../node_modules/mathjs/es/utils/factory.js","../node_modules/mathjs/es/core/function/typed.js","../node_modules/decimal.js/decimal.js","../node_modules/mathjs/es/type/bignumber/BigNumber.js","../node_modules/complex.js/complex.js","../node_modules/mathjs/es/type/complex/Complex.js","../node_modules/fraction.js/fraction.js","../node_modules/mathjs/es/type/fraction/Fraction.js","../node_modules/mathjs/es/type/matrix/Matrix.js","../node_modules/mathjs/es/type/matrix/DenseMatrix.js","../node_modules/mathjs/es/utils/collection.js","../node_modules/mathjs/es/plain/number/arithmetic.js","../node_modules/mathjs/es/utils/bignumber/nearlyEqual.js","../node_modules/mathjs/es/utils/complex.js","../node_modules/mathjs/es/function/relational/equalScalar.js","../node_modules/mathjs/es/type/matrix/SparseMatrix.js","../node_modules/mathjs/es/type/number.js","../node_modules/mathjs/es/type/bignumber/function/bignumber.js","../node_modules/mathjs/es/type/fraction/function/fraction.js","../node_modules/mathjs/es/type/matrix/function/matrix.js","../node_modules/mathjs/es/function/arithmetic/unaryMinus.js","../node_modules/mathjs/es/function/arithmetic/abs.js","../node_modules/mathjs/es/function/arithmetic/addScalar.js","../node_modules/mathjs/es/type/matrix/utils/algorithm01.js","../node_modules/mathjs/es/type/matrix/utils/algorithm10.js","../node_modules/mathjs/es/type/matrix/utils/algorithm13.js","../node_modules/mathjs/es/type/matrix/utils/algorithm14.js","../node_modules/mathjs/es/type/matrix/utils/algorithm11.js","../node_modules/mathjs/es/type/matrix/utils/algorithm03.js","../node_modules/mathjs/es/type/matrix/utils/algorithm05.js","../node_modules/mathjs/es/function/arithmetic/multiplyScalar.js","../node_modules/mathjs/es/function/arithmetic/multiply.js","../node_modules/mathjs/es/function/arithmetic/sqrt.js","../node_modules/mathjs/es/function/arithmetic/subtract.js","../node_modules/mathjs/es/function/complex/conj.js","../node_modules/mathjs/es/function/matrix/cross.js","../node_modules/mathjs/es/utils/noop.js","../node_modules/mathjs/es/function/matrix/size.js","../node_modules/mathjs/es/function/utils/numeric.js","../node_modules/mathjs/es/function/arithmetic/divideScalar.js","../node_modules/mathjs/es/function/matrix/dot.js","../node_modules/mathjs/es/function/geometry/distance.js","../node_modules/mathjs/es/entry/pureFunctionsAny.generated.js","../src/data/atomicMasses.js","../src/data/uffRadii.js","../src/data/covalentRadii.js","../src/utils.js","../src/osa/osa.js","../src/porousmaterial.js"],"sourcesContent":["'use strict';\n\n/* Rules taken from the technical specification for CIF 1.1 as seen at:\n\n    https://www.iucr.org/resources/cif/spec/version1.1/cifsyntax\n*/\n\n/* CIF format standard tokens in RegExp form\n\nThese Regular Expressions are meant to embody the standard syntax of CIF\nfiles as found at the URL above. However, they will not all be used in\npractice, as some needed features (especially the look-behind assertions) are\nrelatively new and may not be supported for all users.\n\n*/\n\n\nvar sp = ' ';\nvar ht = '\\\\t';\nvar eol = '\\\\n'; // Carriage return missing for now; need to figure out how to make it work...\n\n/*\n\n<OrdinaryChar>:\n\n{ '!' | '%' | '&' | '(' | ')' | '*' | '+' | ',' | '-' | '.' | '/' | '0' | '1' \n| '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | ':' | '<' | '=' | '>' | '?' \n| '@' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' \n| 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' \n| 'Z' | '\\' | '^' | '`' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' \n| 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' \n| 'w' | 'x' | 'y' | 'z' | '{' | '|' | '}' | '~' }\n */\nvar ordinary_char = \"a-zA-Z0-9!%&\\(\\)*+,\\-.\\\\/:<=>\\?@\\\\^`\\{\\Â¦\\}~\";\nmodule.exports.ordinary_char = \"[\" + ordinary_char + \"]\";\n/*\n\n<NonBlankChar>:\n\n<OrdinaryChar> | <double_quote> | '#' | '$' | <single_quote> | '_' |';' | '[' \n| ']' \n */\nvar nonblank_char = ordinary_char + \"\\\"#$'_;\\\\[\\\\]\";\nmodule.exports.nonblank_char = \"[\" + nonblank_char + \"]\";\n// These variations are useful for strings with quotes\nvar nonblank_char_nosingle = ordinary_char + \"\\\"#$_;\\\\[\\\\]\";\nvar nonblank_char_nodouble = ordinary_char + \"#$'_;\\\\[\\\\]\";\n/*\n\n<TextLeadChar>:\n\n<OrdinaryChar> | <double_quote> | '#' | '$' | <single_quote> | '_' | <SP> | \n<HT> |'[' | ']' \n */\nvar textlead_char = ordinary_char + \"\\\"#$'_\\\\[\\\\]\" + sp + ht;\nmodule.exports.textlead_char = \"[\" + textlead_char + \"]\";\n/*\n\n<AnyPrintChar>:\n\n<OrdinaryChar> | <double_quote> | '#' | '$' | <single_quote> | '_' | <SP> |\n<HT> | ';' | '[' | ']'  \n */\nvar anyprint_char = nonblank_char + sp + ht;\nmodule.exports.anyprint_char = \"[\" + anyprint_char + \"]\";\n/*\n\n<Digit>\n\n{ '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' }\n */\nvar digit = '0-9';\nmodule.exports.digit = \"[\" + digit + \"]\";\n/*\n\n<Comments>\n\n{ '#' {<AnyPrintChar>}* <eol>}+ \n */\nvar comments = \"(?:#[\" + anyprint_char + \"]*\" + eol + \")+\";\nmodule.exports.comments = comments;\n/*\n\n<TokenizedComments>\n\n{ <SP> | <HT> | <eol> |}+ <Comments>    \n */\nvar tok_comments = \"[\" + sp + ht + eol + \"]+\" + comments;\nmodule.exports.tok_comments = tok_comments;\n/*\n\n<WhiteSpace>\n\n{ <SP> | <HT> | <eol> | <TokenizedComments>}+   \n */\nvar whitespace = \"(?:\" + tok_comments + \"|\" + sp + \"|\" + ht + \"|\" + eol +\n    \")+\";\nmodule.exports.whitespace = whitespace;\n/*\n\n<SemiColonTextField>\n\n';' { {<AnyPrintChar>}* <eol>\n{{<TextLeadChar> {<AnyPrintChar>}*}? <eol>}*\n} ';'\n */\nvar semicolontext = \";[\" + anyprint_char + \"]*\" + eol +\n    \"(?:(?:[\" + textlead_char + \"][\" + anyprint_char + \"]*)?\" + eol + \")*;\";\nmodule.exports.semicolontext = semicolontext;\n/*\n\n<SingleQuotedString>\n\n<single_quote>{<AnyPrintChar>}* <single_quote>\n */\nvar squotestring = \"'[\" + nonblank_char_nosingle + sp + ht + \"]*'\";\nmodule.exports.squotestring = squotestring;\n/*\n\n<DoubleQuotedString>\n\n<double_quote>{<AnyPrintChar>}* <double_quote>\n */\nvar dquotestring = '\"[' + nonblank_char_nodouble + sp + ht + ']*\"';\nmodule.exports.dquotestring = dquotestring;\n/* \n\n<UnquotedString>\n\n<eol><OrdinaryChar> {<NonBlankChar>}*   \nor \n<eol><OrdinaryChar> {<NonBlankChar>}*   \n<noteol>{<OrdinaryChar>|';'} {<NonBlankChar>}\n\nNOTE: this is troublesome because in theory it requires lookbehinds.\nWe will try not to use it in practice. This is an approximation\n**/\nvar uquotestring = \"[\" + eol + sp + ht + \"][\" + ordinary_char + \"][\" +\n    nonblank_char + \"]*\";\nmodule.exports.uquotestring = uquotestring;\n/*\n\n<QuotedString> \n\n<SingleQuotedString> | <DoubleQuotedString>\n*/\nvar quotestring = \"(?:\" + squotestring + \"|\" + dquotestring + \")\";\nmodule.exports.quotestring = quotestring;\n/*\n\n<CharString>\n\n<UnquotedString> | <SingleQuotedString> | <DoubleQuotedString>  \n */\nvar chrstring = \"(?:\" + squotestring + \"|\" + dquotestring + \"|\" +\n    uquotestring + \")\";\nmodule.exports.chrstring = chrstring;\n/*\n\n<UnsignedInteger>\n\n{ <Digit> }+\n */\nvar unsigned_int = \"[\" + digit + \"]+\";\nmodule.exports.unsigned_int = unsigned_int;\n/*\n\n<Integer>\n\n{ '+' | '-' }? <UnsignedInteger>\n */\nvar integer = \"[+\\-]?\" + unsigned_int;\nmodule.exports.integer = integer;\n/*\n\n<Exponent>\n\n{ {'e' | 'E' } | {'e' | 'E' } { '+' | '- ' } } <UnsignedInteger>\n */\nvar exponent = \"[eE]\" + integer;\nmodule.exports.exponent = exponent;\n/*\n\n<Float>\n\n{ <Integer><Exponent> | { {'+'|'-'} ? { {<Digit>} * '.' <UnsignedInteger> } |\n{ <Digit>} + '.' } } {<Exponent>} ? } }\n */\nvar float = \"(?:(?:[+\\-]?(?:[\" + digit + \"]*\\\\.\" + unsigned_int +\n    \"|[\" + digit + \"]+\\\\.)(?:\" + exponent + \")?)|(?:\" + integer +\n    exponent + \"))\";\nmodule.exports.float = float;\n/*\n\n<Number>\n\n{<Integer> | <Float> }\n */\nvar number = \"(?:\" + float + \"|\" + integer + \")\";\nmodule.exports.number = number;\n/*\n\n<Numeric>\n\n{ <Number> | <Number> '(' <UnsignedInteger> ')' }\n */\nvar numeric = \"(?:(\" + number + \")\\\\((\" + unsigned_int + \")\\\\)|(\" + number +\n    \"))\";\nmodule.exports.numeric = numeric;\n/*\n\n<Tag>\n\n'_'{ <NonBlankChar>}+\n */\nvar tag = \"_[\" + nonblank_char + \"]+\";\nmodule.exports.tag = tag;\n/*\n\n<Value> \n\n{ '.' | '?' | <Numeric> | <CharString> | <TextField> }\n */\nvar value = \"(\\\\.|\\\\?|\" + numeric + \"|\" + chrstring + \"|\" + semicolontext +\n    \")\";\nmodule.exports.value = value;\n/*\n\n<LOOP_>\n\n*/\nvar loop_kw = \"[Ll][Oo][Oo][Pp]_\";\nmodule.exports.loop_kw = loop_kw;\n/*\n\n<LoopHeader>\n\n<LOOP_> {<WhiteSpace> <Tag>}+\n */\nvar loop_header = loop_kw + \"(\" + whitespace + tag + \")+\";\nmodule.exports.loop_header = loop_header;\n/*\n\n<LoopBody>\n\n<Value> { <WhiteSpace> <Value> }*   \n */\nvar loop_body = value + \"(\" + whitespace + value + \")*\";\nmodule.exports.loop_body = loop_body;\n/*\n\n<DataHeader>\n\n<DATA_> { <NonBlankChar> }+\n*/\nvar data_header = \"[Dd][Aa][Tt][Aa]_[\" + nonblank_char + \"]+\";\nmodule.exports.data_header = data_header;\n/*\n\n<DataItem>\n\n<Tag> <WhiteSpace> <Value> | <LoopHeader> <LoopBody>\n */\nvar data_item = \"(?:(\" + tag + \")\" + whitespace + value + \"|\" + loop_header +\n    loop_body + \")\";\nmodule.exports.data_item = data_item;\n// Reserved keywords\nmodule.exports.reserved = \"(data|loop|global|save|stop)\";\n\n// Utility function to get ready regular expressions\nmodule.exports.tokenRegex = function(tname, start, end, flags) {\n    var flags = flags || 'g';\n    if (tname == 'reserved') {\n        flags = 'gi';\n    }\n    var restr = module.exports[tname];\n    if (start) {\n        restr = '^' + restr;\n    }\n    if (end) {\n        restr = restr + '$';\n    }\n    return RegExp(restr, flags);\n}","'use strict';\n\nvar tokens = require('./tokens.js');\n\n/** Represents a single value (string or numerical) in a CIF file.\n *  @class\n *  @param  {string}    type      Type of the value (int, float, string, mstring,\n *                                N/A or ?)\n *  @param  {*}         pvalue]   Parsed value itself (should be appropriate to\n *                                type, unnecessary for N/A and ?)\n *  @param  {int}       [prec]    Precision number (only for numerals)\n */\nvar CifValue = function(type, value, prec) {\n    /** @member {string} */\n    this.type = type;\n    /** @member {int} */\n    this.prec = prec;\n\n    switch (type) {\n        case 'int':\n        case 'float':\n            /** @member {number} */\n            this.num = value;\n            break;\n        case 'string':\n        case 'mstring':\n            /** @member {string} */\n            this.text = value;\n            break;\n        default:\n            break;\n    }\n}\n\nCifValue.prototype = {\n    get_value: function() {\n        return (this.num !== undefined) ? this.num : this.text; // Universal function\n    }\n}\n\n/**\n *  Split a text CIF file into elementary tokens for further processing.\n *  @param  {string} cif    CIF file in text string format\n *  @return {Array}         Array of parsed tokens\n */\nfunction tokenize(cif) {\n    /* Split into tokens (separated by non-blank characters except for the\n       quoted strings and semicolon text )\n    */\n\n    // Grab a bunch of regular expressions\n    var all_re = [tokens.tokenRegex('whitespace', false, false),\n        tokens.tokenRegex('quotestring', true),\n        tokens.tokenRegex('semicolontext', true),\n        tokens.tokenRegex('tag', true),\n        tokens.tokenRegex('data_header', true),\n        tokens.tokenRegex('loop_kw', true)\n    ];\n    // Now create fake matches for each of them\n    var all_m = [];\n    for (var i = 0; i < all_re.length; ++i) {\n        all_m.push({ 'index': -1 });\n    }\n\n    var tokenized = [];\n    var cifsl = cif.slice();\n    while (cifsl.length > 0) {\n\n        // First, try to see if it's any of the various non-whitespace types\n        var m_type = 1;\n        var m = null;\n        for (; m_type < all_re.length; ++m_type) {\n            m = cifsl.match(all_re[m_type]);\n            if (m)\n                break;\n        }\n        if (m) {\n            tokenized.push({\n                'val': m[0],\n                'type': ['quotestring', 'semicolontext', 'tag',\n                    'data_headers', 'loop_kw'\n                ][m_type - 1]\n            });\n            cifsl = cifsl.slice(m[0].length);\n            continue;\n        }\n\n        // Now check for whitespace\n        all_re[0].lastIndex = 0;\n        var w = all_re[0].exec(cifsl);\n        if (w) {\n            if (w.index == 0) {\n                // Trim\n                cifsl = cifsl.slice(w[0].length);\n            } else {\n                // Capture an unknown\n                // A regular value/string\n                tokenized.push({\n                    'val': cifsl.slice(0, w.index),\n                    'type': 'unknown'\n                });\n                cifsl = cifsl.slice(w.index + w[0].length);\n            }\n            continue;\n        }\n\n        // Ran out of string to parse\n        if (cifsl.length > 0) {\n            tokenized.push({\n                'val': cifsl,\n                'type': 'unknown'\n            });\n            break;\n        }\n    }\n\n    return tokenized;\n}\nmodule.exports.tokenize = tokenize;\n\n/**\n *  Parse a single token as a value.\n *  @param  {Object} tok    Token to parse (must not be a reserved keyword\n *                          like a data_ or loop_ token)\n *  @return {CifValue}      Parsed value\n */\nfunction parseValue(tok) {\n\n    // If it's a string, easy one\n    if (tok.type == 'quotestring') {\n        return new CifValue('string', tok.val.slice(1, tok.val.length - 1));\n    }\n    if (tok.type == 'semicolontext') {\n        return new CifValue('mstring', tok.val.slice(1, tok.val.length - 1));\n    }\n\n    if (tok.type != 'unknown') {\n        // Something's wrong\n        return null;\n    }\n\n    // We now know it's unknown, so...\n    var strval = tok.val;\n\n    // First, check for special types\n    if (strval.trim() == '.') {\n        return new CifValue('N/A');\n    } else if (strval.trim() == '?') {\n        return new CifValue('?');\n    }\n\n    var type;\n    // It can be a numeric value\n    var m = tokens.tokenRegex('numeric', true, true).exec(strval.trim());\n    if (m) {\n        // Does it have a precision?\n        var prec = null;\n        var strnum = m[3]; // Will be undefined if there's a precision\n        if (strnum === undefined) {\n            prec = parseInt(m[2]);\n            strnum = m[1];\n        }\n        // Integer or float?\n        var num;\n        if (strnum.match(tokens.tokenRegex('float', true, true))) {\n            num = parseFloat(strnum);\n            type = 'float';\n        } else {\n            num = parseInt(strnum);\n            type = 'int';\n        }\n\n        return new CifValue(type, num, prec);\n    }\n\n    // Or it's just an unquoted string\n    return new CifValue('string', strval);\n}\nmodule.exports.parseValue = parseValue;\n\n/**\n * Finds and splits the data blocks from a tokenized CIF file.\n * @param  {Array}   ciftokens   Array of tokens contained in the file\n * @return {Array}               Array of data blocks in the form \n *                               [name, [tokens]]\n */\nfunction parseDataBlocks(ciftokens) {\n    // Identify all data blocks\n\n    var tagre = tokens.tokenRegex('tag');\n    var data_headers = [];\n    for (var i = 0; i < ciftokens.length; ++i) {\n        var tok = ciftokens[i];\n        if (tok.type == 'data_headers') {\n            var name = tok.val.match(tagre);\n            if (name.length != 1) {\n                throw 'Invalid data header ' + tok.val;\n            }\n            data_headers.push([i, name[0].slice(1)]);\n        }\n    }\n\n    // Now gather the blocks\n    var data_blocks = [];\n    for (var i = 0; i < data_headers.length; ++i) {\n        var dh = data_headers[i];\n        var end = ((i < data_headers.length - 1) ? data_headers[i + 1][0] :\n            ciftokens.length);\n        var db = [dh[1], ciftokens.slice(dh[0] + 1, end)];\n        data_blocks.push(db);\n    }\n\n    return data_blocks;\n}\nmodule.exports.parseDataBlocks = parseDataBlocks;\n\n/**\n * Parses a series of tokens defining a data block into data items.\n * @param  {Array}  blocktokens  Array of tokens defining the block\n * @return {Array}               Array of parsed tata items\n */\nfunction parseDataItems(blocktokens) {\n    // Parse the data items inside a data block\n\n    var data_items = [];\n\n    /* There are two possible structures here:\n    1) alternating series of tag - value\n    2) loop with series of tags, then corresponding series of values  \n    */\n\n    // Acceptable value token types\n    var vtypes = ['quotestring', 'semicolontext', 'unknown'];\n\n    data_items = [];\n\n    var btokens = blocktokens.slice();\n    while (btokens.length > 0) {\n        var btok = btokens.shift();\n        // What type is it?\n        if (btok === undefined) {\n            break;\n        }\n        switch (btok.type) {\n            case 'tag':\n                var valtok = btokens.shift();\n                if (valtok == null || !vtypes.includes(valtok.type)) {\n                    throw 'Invalid or missing value for tag ' + btok.val;\n                }\n                data_items.push({\n                    'tag': btok.val,\n                    'type': 'single',\n                    'value': parseValue(valtok)\n                });\n                break;\n            case 'loop_kw':\n                // Start by parsing the header\n                var header = [];\n                var ltok = btokens.shift();\n                while (ltok !== undefined && ltok.type == 'tag') {\n                    header.push(ltok.val);\n                    ltok = btokens.shift();\n                }\n                var body = [];\n                while (ltok !== undefined && vtypes.includes(ltok.type)) {\n                    body.push(parseValue(ltok));\n                    ltok = btokens.shift();\n                }\n                // Put back that last one...\n                btokens.unshift(ltok);\n\n                // Check if the loop is correct\n                if (body.length % header.length != 0) {\n                    throw 'Invalid loop - values must be a multiple of tags';\n                }\n                var tagn = header.length;\n                var loopn = body.length / header.length;\n\n                for (var i = 0; i < header.length; ++i) {\n                    var di = {\n                        'tag': header[i],\n                        'type': 'loop',\n                        'value': [],\n                    }\n                    for (var j = 0; j < loopn; ++j) {\n                        di.value.push(body[j * tagn + i]);\n                    }\n                    data_items.push(di);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    return data_items;\n}\nmodule.exports.parseDataItems = parseDataItems;\n\n/**\n * Parses a cif file returning the data blocks and items (not interpreted).\n * @param  {string} ciftext CIF file as a string\n * @return {Object}         Parsed CIF file as data structure\n */\nmodule.exports.parseCif = function parseCif(ciftext) {\n\n    // First, extract the tokens\n    var tk = tokenize(ciftext);\n    // Then the blocks\n    var db = parseDataBlocks(tk);\n    // Now on to the items for each block\n    var cifdict = {};\n    for (var i = 0; i < db.length; ++i) {\n        var block = db[i];\n        cifdict[block[0]] = {};\n        // SAVE frames are not supported for now, so we only look \n        // for data items\n        var items = parseDataItems(block[1]);\n        for (var j = 0; j < items.length; ++j) {\n            cifdict[block[0]][items[j].tag] = items[j];\n        }\n    }\n\n    return cifdict;\n}","\"use strict\";\n\nvar numeric = (typeof exports === \"undefined\")?(function numeric() {}):(exports);\nif(typeof global !== \"undefined\") { global.numeric = numeric; }\n\nnumeric.version = \"1.2.6\";\n\n// 1. Utility functions\nnumeric.bench = function bench (f,interval) {\n    var t1,t2,n,i;\n    if(typeof interval === \"undefined\") { interval = 15; }\n    n = 0.5;\n    t1 = new Date();\n    while(1) {\n        n*=2;\n        for(i=n;i>3;i-=4) { f(); f(); f(); f(); }\n        while(i>0) { f(); i--; }\n        t2 = new Date();\n        if(t2-t1 > interval) break;\n    }\n    for(i=n;i>3;i-=4) { f(); f(); f(); f(); }\n    while(i>0) { f(); i--; }\n    t2 = new Date();\n    return 1000*(3*n-1)/(t2-t1);\n}\n\nnumeric._myIndexOf = (function _myIndexOf(w) {\n    var n = this.length,k;\n    for(k=0;k<n;++k) if(this[k]===w) return k;\n    return -1;\n});\nnumeric.myIndexOf = (Array.prototype.indexOf)?Array.prototype.indexOf:numeric._myIndexOf;\n\nnumeric.Function = Function;\nnumeric.precision = 4;\nnumeric.largeArray = 50;\n\nnumeric.prettyPrint = function prettyPrint(x) {\n    function fmtnum(x) {\n        if(x === 0) { return '0'; }\n        if(isNaN(x)) { return 'NaN'; }\n        if(x<0) { return '-'+fmtnum(-x); }\n        if(isFinite(x)) {\n            var scale = Math.floor(Math.log(x) / Math.log(10));\n            var normalized = x / Math.pow(10,scale);\n            var basic = normalized.toPrecision(numeric.precision);\n            if(parseFloat(basic) === 10) { scale++; normalized = 1; basic = normalized.toPrecision(numeric.precision); }\n            return parseFloat(basic).toString()+'e'+scale.toString();\n        }\n        return 'Infinity';\n    }\n    var ret = [];\n    function foo(x) {\n        var k;\n        if(typeof x === \"undefined\") { ret.push(Array(numeric.precision+8).join(' ')); return false; }\n        if(typeof x === \"string\") { ret.push('\"'+x+'\"'); return false; }\n        if(typeof x === \"boolean\") { ret.push(x.toString()); return false; }\n        if(typeof x === \"number\") {\n            var a = fmtnum(x);\n            var b = x.toPrecision(numeric.precision);\n            var c = parseFloat(x.toString()).toString();\n            var d = [a,b,c,parseFloat(b).toString(),parseFloat(c).toString()];\n            for(k=1;k<d.length;k++) { if(d[k].length < a.length) a = d[k]; }\n            ret.push(Array(numeric.precision+8-a.length).join(' ')+a);\n            return false;\n        }\n        if(x === null) { ret.push(\"null\"); return false; }\n        if(typeof x === \"function\") { \n            ret.push(x.toString());\n            var flag = false;\n            for(k in x) { if(x.hasOwnProperty(k)) { \n                if(flag) ret.push(',\\n');\n                else ret.push('\\n{');\n                flag = true; \n                ret.push(k); \n                ret.push(': \\n'); \n                foo(x[k]); \n            } }\n            if(flag) ret.push('}\\n');\n            return true;\n        }\n        if(x instanceof Array) {\n            if(x.length > numeric.largeArray) { ret.push('...Large Array...'); return true; }\n            var flag = false;\n            ret.push('[');\n            for(k=0;k<x.length;k++) { if(k>0) { ret.push(','); if(flag) ret.push('\\n '); } flag = foo(x[k]); }\n            ret.push(']');\n            return true;\n        }\n        ret.push('{');\n        var flag = false;\n        for(k in x) { if(x.hasOwnProperty(k)) { if(flag) ret.push(',\\n'); flag = true; ret.push(k); ret.push(': \\n'); foo(x[k]); } }\n        ret.push('}');\n        return true;\n    }\n    foo(x);\n    return ret.join('');\n}\n\nnumeric.parseDate = function parseDate(d) {\n    function foo(d) {\n        if(typeof d === 'string') { return Date.parse(d.replace(/-/g,'/')); }\n        if(!(d instanceof Array)) { throw new Error(\"parseDate: parameter must be arrays of strings\"); }\n        var ret = [],k;\n        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }\n        return ret;\n    }\n    return foo(d);\n}\n\nnumeric.parseFloat = function parseFloat_(d) {\n    function foo(d) {\n        if(typeof d === 'string') { return parseFloat(d); }\n        if(!(d instanceof Array)) { throw new Error(\"parseFloat: parameter must be arrays of strings\"); }\n        var ret = [],k;\n        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }\n        return ret;\n    }\n    return foo(d);\n}\n\nnumeric.parseCSV = function parseCSV(t) {\n    var foo = t.split('\\n');\n    var j,k;\n    var ret = [];\n    var pat = /(([^'\",]*)|('[^']*')|(\"[^\"]*\")),/g;\n    var patnum = /^\\s*(([+-]?[0-9]+(\\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\\.[0-9]+)?(e[+-]?[0-9]+)?))\\s*$/;\n    var stripper = function(n) { return n.substr(0,n.length-1); }\n    var count = 0;\n    for(k=0;k<foo.length;k++) {\n      var bar = (foo[k]+\",\").match(pat),baz;\n      if(bar.length>0) {\n          ret[count] = [];\n          for(j=0;j<bar.length;j++) {\n              baz = stripper(bar[j]);\n              if(patnum.test(baz)) { ret[count][j] = parseFloat(baz); }\n              else ret[count][j] = baz;\n          }\n          count++;\n      }\n    }\n    return ret;\n}\n\nnumeric.toCSV = function toCSV(A) {\n    var s = numeric.dim(A);\n    var i,j,m,n,row,ret;\n    m = s[0];\n    n = s[1];\n    ret = [];\n    for(i=0;i<m;i++) {\n        row = [];\n        for(j=0;j<m;j++) { row[j] = A[i][j].toString(); }\n        ret[i] = row.join(', ');\n    }\n    return ret.join('\\n')+'\\n';\n}\n\nnumeric.getURL = function getURL(url) {\n    var client = new XMLHttpRequest();\n    client.open(\"GET\",url,false);\n    client.send();\n    return client;\n}\n\nnumeric.imageURL = function imageURL(img) {\n    function base64(A) {\n        var n = A.length, i,x,y,z,p,q,r,s;\n        var key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        var ret = \"\";\n        for(i=0;i<n;i+=3) {\n            x = A[i];\n            y = A[i+1];\n            z = A[i+2];\n            p = x >> 2;\n            q = ((x & 3) << 4) + (y >> 4);\n            r = ((y & 15) << 2) + (z >> 6);\n            s = z & 63;\n            if(i+1>=n) { r = s = 64; }\n            else if(i+2>=n) { s = 64; }\n            ret += key.charAt(p) + key.charAt(q) + key.charAt(r) + key.charAt(s);\n            }\n        return ret;\n    }\n    function crc32Array (a,from,to) {\n        if(typeof from === \"undefined\") { from = 0; }\n        if(typeof to === \"undefined\") { to = a.length; }\n        var table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n                     0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, \n                     0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n                     0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, \n                     0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, \n                     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, \n                     0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n                     0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n                     0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n                     0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, \n                     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, \n                     0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, \n                     0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, \n                     0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, \n                     0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, \n                     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, \n                     0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, \n                     0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, \n                     0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, \n                     0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, \n                     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, \n                     0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, \n                     0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, \n                     0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, \n                     0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, \n                     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, \n                     0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, \n                     0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, \n                     0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, \n                     0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, \n                     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, \n                     0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];\n     \n        var crc = -1, y = 0, n = a.length,i;\n\n        for (i = from; i < to; i++) {\n            y = (crc ^ a[i]) & 0xFF;\n            crc = (crc >>> 8) ^ table[y];\n        }\n     \n        return crc ^ (-1);\n    }\n\n    var h = img[0].length, w = img[0][0].length, s1, s2, next,k,length,a,b,i,j,adler32,crc32;\n    var stream = [\n                  137, 80, 78, 71, 13, 10, 26, 10,                           //  0: PNG signature\n                  0,0,0,13,                                                  //  8: IHDR Chunk length\n                  73, 72, 68, 82,                                            // 12: \"IHDR\" \n                  (w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w&255,   // 16: Width\n                  (h >> 24) & 255, (h >> 16) & 255, (h >> 8) & 255, h&255,   // 20: Height\n                  8,                                                         // 24: bit depth\n                  2,                                                         // 25: RGB\n                  0,                                                         // 26: deflate\n                  0,                                                         // 27: no filter\n                  0,                                                         // 28: no interlace\n                  -1,-2,-3,-4,                                               // 29: CRC\n                  -5,-6,-7,-8,                                               // 33: IDAT Chunk length\n                  73, 68, 65, 84,                                            // 37: \"IDAT\"\n                  // RFC 1950 header starts here\n                  8,                                                         // 41: RFC1950 CMF\n                  29                                                         // 42: RFC1950 FLG\n                  ];\n    crc32 = crc32Array(stream,12,29);\n    stream[29] = (crc32>>24)&255;\n    stream[30] = (crc32>>16)&255;\n    stream[31] = (crc32>>8)&255;\n    stream[32] = (crc32)&255;\n    s1 = 1;\n    s2 = 0;\n    for(i=0;i<h;i++) {\n        if(i<h-1) { stream.push(0); }\n        else { stream.push(1); }\n        a = (3*w+1+(i===0))&255; b = ((3*w+1+(i===0))>>8)&255;\n        stream.push(a); stream.push(b);\n        stream.push((~a)&255); stream.push((~b)&255);\n        if(i===0) stream.push(0);\n        for(j=0;j<w;j++) {\n            for(k=0;k<3;k++) {\n                a = img[k][i][j];\n                if(a>255) a = 255;\n                else if(a<0) a=0;\n                else a = Math.round(a);\n                s1 = (s1 + a )%65521;\n                s2 = (s2 + s1)%65521;\n                stream.push(a);\n            }\n        }\n        stream.push(0);\n    }\n    adler32 = (s2<<16)+s1;\n    stream.push((adler32>>24)&255);\n    stream.push((adler32>>16)&255);\n    stream.push((adler32>>8)&255);\n    stream.push((adler32)&255);\n    length = stream.length - 41;\n    stream[33] = (length>>24)&255;\n    stream[34] = (length>>16)&255;\n    stream[35] = (length>>8)&255;\n    stream[36] = (length)&255;\n    crc32 = crc32Array(stream,37);\n    stream.push((crc32>>24)&255);\n    stream.push((crc32>>16)&255);\n    stream.push((crc32>>8)&255);\n    stream.push((crc32)&255);\n    stream.push(0);\n    stream.push(0);\n    stream.push(0);\n    stream.push(0);\n//    a = stream.length;\n    stream.push(73);  // I\n    stream.push(69);  // E\n    stream.push(78);  // N\n    stream.push(68);  // D\n    stream.push(174); // CRC1\n    stream.push(66);  // CRC2\n    stream.push(96);  // CRC3\n    stream.push(130); // CRC4\n    return 'data:image/png;base64,'+base64(stream);\n}\n\n// 2. Linear algebra with Arrays.\nnumeric._dim = function _dim(x) {\n    var ret = [];\n    while(typeof x === \"object\") { ret.push(x.length); x = x[0]; }\n    return ret;\n}\n\nnumeric.dim = function dim(x) {\n    var y,z;\n    if(typeof x === \"object\") {\n        y = x[0];\n        if(typeof y === \"object\") {\n            z = y[0];\n            if(typeof z === \"object\") {\n                return numeric._dim(x);\n            }\n            return [x.length,y.length];\n        }\n        return [x.length];\n    }\n    return [];\n}\n\nnumeric.mapreduce = function mapreduce(body,init) {\n    return Function('x','accum','_s','_k',\n            'if(typeof accum === \"undefined\") accum = '+init+';\\n'+\n            'if(typeof x === \"number\") { var xi = x; '+body+'; return accum; }\\n'+\n            'if(typeof _s === \"undefined\") _s = numeric.dim(x);\\n'+\n            'if(typeof _k === \"undefined\") _k = 0;\\n'+\n            'var _n = _s[_k];\\n'+\n            'var i,xi;\\n'+\n            'if(_k < _s.length-1) {\\n'+\n            '    for(i=_n-1;i>=0;i--) {\\n'+\n            '        accum = arguments.callee(x[i],accum,_s,_k+1);\\n'+\n            '    }'+\n            '    return accum;\\n'+\n            '}\\n'+\n            'for(i=_n-1;i>=1;i-=2) { \\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+';\\n'+\n            '    xi = x[i-1];\\n'+\n            '    '+body+';\\n'+\n            '}\\n'+\n            'if(i === 0) {\\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+'\\n'+\n            '}\\n'+\n            'return accum;'\n            );\n}\nnumeric.mapreduce2 = function mapreduce2(body,setup) {\n    return Function('x',\n            'var n = x.length;\\n'+\n            'var i,xi;\\n'+setup+';\\n'+\n            'for(i=n-1;i!==-1;--i) { \\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+';\\n'+\n            '}\\n'+\n            'return accum;'\n            );\n}\n\n\nnumeric.same = function same(x,y) {\n    var i,n;\n    if(!(x instanceof Array) || !(y instanceof Array)) { return false; }\n    n = x.length;\n    if(n !== y.length) { return false; }\n    for(i=0;i<n;i++) {\n        if(x[i] === y[i]) { continue; }\n        if(typeof x[i] === \"object\") { if(!same(x[i],y[i])) return false; }\n        else { return false; }\n    }\n    return true;\n}\n\nnumeric.rep = function rep(s,v,k) {\n    if(typeof k === \"undefined\") { k=0; }\n    var n = s[k], ret = Array(n), i;\n    if(k === s.length-1) {\n        for(i=n-2;i>=0;i-=2) { ret[i+1] = v; ret[i] = v; }\n        if(i===-1) { ret[0] = v; }\n        return ret;\n    }\n    for(i=n-1;i>=0;i--) { ret[i] = numeric.rep(s,v,k+1); }\n    return ret;\n}\n\n\nnumeric.dotMMsmall = function dotMMsmall(x,y) {\n    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0;\n    p = x.length; q = y.length; r = y[0].length;\n    ret = Array(p);\n    for(i=p-1;i>=0;i--) {\n        foo = Array(r);\n        bar = x[i];\n        for(k=r-1;k>=0;k--) {\n            woo = bar[q-1]*y[q-1][k];\n            for(j=q-2;j>=1;j-=2) {\n                i0 = j-1;\n                woo += bar[j]*y[j][k] + bar[i0]*y[i0][k];\n            }\n            if(j===0) { woo += bar[0]*y[0][k]; }\n            foo[k] = woo;\n        }\n        ret[i] = foo;\n    }\n    return ret;\n}\nnumeric._getCol = function _getCol(A,j,x) {\n    var n = A.length, i;\n    for(i=n-1;i>0;--i) {\n        x[i] = A[i][j];\n        --i;\n        x[i] = A[i][j];\n    }\n    if(i===0) x[0] = A[0][j];\n}\nnumeric.dotMMbig = function dotMMbig(x,y){\n    var gc = numeric._getCol, p = y.length, v = Array(p);\n    var m = x.length, n = y[0].length, A = new Array(m), xj;\n    var VV = numeric.dotVV;\n    var i,j,k,z;\n    --p;\n    --m;\n    for(i=m;i!==-1;--i) A[i] = Array(n);\n    --n;\n    for(i=n;i!==-1;--i) {\n        gc(y,i,v);\n        for(j=m;j!==-1;--j) {\n            z=0;\n            xj = x[j];\n            A[j][i] = VV(xj,v);\n        }\n    }\n    return A;\n}\n\nnumeric.dotMV = function dotMV(x,y) {\n    var p = x.length, q = y.length,i;\n    var ret = Array(p), dotVV = numeric.dotVV;\n    for(i=p-1;i>=0;i--) { ret[i] = dotVV(x[i],y); }\n    return ret;\n}\n\nnumeric.dotVM = function dotVM(x,y) {\n    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0,s1,s2,s3,baz,accum;\n    p = x.length; q = y[0].length;\n    ret = Array(q);\n    for(k=q-1;k>=0;k--) {\n        woo = x[p-1]*y[p-1][k];\n        for(j=p-2;j>=1;j-=2) {\n            i0 = j-1;\n            woo += x[j]*y[j][k] + x[i0]*y[i0][k];\n        }\n        if(j===0) { woo += x[0]*y[0][k]; }\n        ret[k] = woo;\n    }\n    return ret;\n}\n\nnumeric.dotVV = function dotVV(x,y) {\n    var i,n=x.length,i1,ret = x[n-1]*y[n-1];\n    for(i=n-2;i>=1;i-=2) {\n        i1 = i-1;\n        ret += x[i]*y[i] + x[i1]*y[i1];\n    }\n    if(i===0) { ret += x[0]*y[0]; }\n    return ret;\n}\n\nnumeric.dot = function dot(x,y) {\n    var d = numeric.dim;\n    switch(d(x).length*1000+d(y).length) {\n    case 2002:\n        if(y.length < 10) return numeric.dotMMsmall(x,y);\n        else return numeric.dotMMbig(x,y);\n    case 2001: return numeric.dotMV(x,y);\n    case 1002: return numeric.dotVM(x,y);\n    case 1001: return numeric.dotVV(x,y);\n    case 1000: return numeric.mulVS(x,y);\n    case 1: return numeric.mulSV(x,y);\n    case 0: return x*y;\n    default: throw new Error('numeric.dot only works on vectors and matrices');\n    }\n}\n\nnumeric.diag = function diag(d) {\n    var i,i1,j,n = d.length, A = Array(n), Ai;\n    for(i=n-1;i>=0;i--) {\n        Ai = Array(n);\n        i1 = i+2;\n        for(j=n-1;j>=i1;j-=2) {\n            Ai[j] = 0;\n            Ai[j-1] = 0;\n        }\n        if(j>i) { Ai[j] = 0; }\n        Ai[i] = d[i];\n        for(j=i-1;j>=1;j-=2) {\n            Ai[j] = 0;\n            Ai[j-1] = 0;\n        }\n        if(j===0) { Ai[0] = 0; }\n        A[i] = Ai;\n    }\n    return A;\n}\nnumeric.getDiag = function(A) {\n    var n = Math.min(A.length,A[0].length),i,ret = Array(n);\n    for(i=n-1;i>=1;--i) {\n        ret[i] = A[i][i];\n        --i;\n        ret[i] = A[i][i];\n    }\n    if(i===0) {\n        ret[0] = A[0][0];\n    }\n    return ret;\n}\n\nnumeric.identity = function identity(n) { return numeric.diag(numeric.rep([n],1)); }\nnumeric.pointwise = function pointwise(params,body,setup) {\n    if(typeof setup === \"undefined\") { setup = \"\"; }\n    var fun = [];\n    var k;\n    var avec = /\\[i\\]$/,p,thevec = '';\n    var haveret = false;\n    for(k=0;k<params.length;k++) {\n        if(avec.test(params[k])) {\n            p = params[k].substring(0,params[k].length-3);\n            thevec = p;\n        } else { p = params[k]; }\n        if(p==='ret') haveret = true;\n        fun.push(p);\n    }\n    fun[params.length] = '_s';\n    fun[params.length+1] = '_k';\n    fun[params.length+2] = (\n            'if(typeof _s === \"undefined\") _s = numeric.dim('+thevec+');\\n'+\n            'if(typeof _k === \"undefined\") _k = 0;\\n'+\n            'var _n = _s[_k];\\n'+\n            'var i'+(haveret?'':', ret = Array(_n)')+';\\n'+\n            'if(_k < _s.length-1) {\\n'+\n            '    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee('+params.join(',')+',_s,_k+1);\\n'+\n            '    return ret;\\n'+\n            '}\\n'+\n            setup+'\\n'+\n            'for(i=_n-1;i!==-1;--i) {\\n'+\n            '    '+body+'\\n'+\n            '}\\n'+\n            'return ret;'\n            );\n    return Function.apply(null,fun);\n}\nnumeric.pointwise2 = function pointwise2(params,body,setup) {\n    if(typeof setup === \"undefined\") { setup = \"\"; }\n    var fun = [];\n    var k;\n    var avec = /\\[i\\]$/,p,thevec = '';\n    var haveret = false;\n    for(k=0;k<params.length;k++) {\n        if(avec.test(params[k])) {\n            p = params[k].substring(0,params[k].length-3);\n            thevec = p;\n        } else { p = params[k]; }\n        if(p==='ret') haveret = true;\n        fun.push(p);\n    }\n    fun[params.length] = (\n            'var _n = '+thevec+'.length;\\n'+\n            'var i'+(haveret?'':', ret = Array(_n)')+';\\n'+\n            setup+'\\n'+\n            'for(i=_n-1;i!==-1;--i) {\\n'+\n            body+'\\n'+\n            '}\\n'+\n            'return ret;'\n            );\n    return Function.apply(null,fun);\n}\nnumeric._biforeach = (function _biforeach(x,y,s,k,f) {\n    if(k === s.length-1) { f(x,y); return; }\n    var i,n=s[k];\n    for(i=n-1;i>=0;i--) { _biforeach(typeof x===\"object\"?x[i]:x,typeof y===\"object\"?y[i]:y,s,k+1,f); }\n});\nnumeric._biforeach2 = (function _biforeach2(x,y,s,k,f) {\n    if(k === s.length-1) { return f(x,y); }\n    var i,n=s[k],ret = Array(n);\n    for(i=n-1;i>=0;--i) { ret[i] = _biforeach2(typeof x===\"object\"?x[i]:x,typeof y===\"object\"?y[i]:y,s,k+1,f); }\n    return ret;\n});\nnumeric._foreach = (function _foreach(x,s,k,f) {\n    if(k === s.length-1) { f(x); return; }\n    var i,n=s[k];\n    for(i=n-1;i>=0;i--) { _foreach(x[i],s,k+1,f); }\n});\nnumeric._foreach2 = (function _foreach2(x,s,k,f) {\n    if(k === s.length-1) { return f(x); }\n    var i,n=s[k], ret = Array(n);\n    for(i=n-1;i>=0;i--) { ret[i] = _foreach2(x[i],s,k+1,f); }\n    return ret;\n});\n\n/*numeric.anyV = numeric.mapreduce('if(xi) return true;','false');\nnumeric.allV = numeric.mapreduce('if(!xi) return false;','true');\nnumeric.any = function(x) { if(typeof x.length === \"undefined\") return x; return numeric.anyV(x); }\nnumeric.all = function(x) { if(typeof x.length === \"undefined\") return x; return numeric.allV(x); }*/\n\nnumeric.ops2 = {\n        add: '+',\n        sub: '-',\n        mul: '*',\n        div: '/',\n        mod: '%',\n        and: '&&',\n        or:  '||',\n        eq:  '===',\n        neq: '!==',\n        lt:  '<',\n        gt:  '>',\n        leq: '<=',\n        geq: '>=',\n        band: '&',\n        bor: '|',\n        bxor: '^',\n        lshift: '<<',\n        rshift: '>>',\n        rrshift: '>>>'\n};\nnumeric.opseq = {\n        addeq: '+=',\n        subeq: '-=',\n        muleq: '*=',\n        diveq: '/=',\n        modeq: '%=',\n        lshifteq: '<<=',\n        rshifteq: '>>=',\n        rrshifteq: '>>>=',\n        bandeq: '&=',\n        boreq: '|=',\n        bxoreq: '^='\n};\nnumeric.mathfuns = ['abs','acos','asin','atan','ceil','cos',\n                    'exp','floor','log','round','sin','sqrt','tan',\n                    'isNaN','isFinite'];\nnumeric.mathfuns2 = ['atan2','pow','max','min'];\nnumeric.ops1 = {\n        neg: '-',\n        not: '!',\n        bnot: '~',\n        clone: ''\n};\nnumeric.mapreducers = {\n        any: ['if(xi) return true;','var accum = false;'],\n        all: ['if(!xi) return false;','var accum = true;'],\n        sum: ['accum += xi;','var accum = 0;'],\n        prod: ['accum *= xi;','var accum = 1;'],\n        norm2Squared: ['accum += xi*xi;','var accum = 0;'],\n        norminf: ['accum = max(accum,abs(xi));','var accum = 0, max = Math.max, abs = Math.abs;'],\n        norm1: ['accum += abs(xi)','var accum = 0, abs = Math.abs;'],\n        sup: ['accum = max(accum,xi);','var accum = -Infinity, max = Math.max;'],\n        inf: ['accum = min(accum,xi);','var accum = Infinity, min = Math.min;']\n};\n\n(function () {\n    var i,o;\n    for(i=0;i<numeric.mathfuns2.length;++i) {\n        o = numeric.mathfuns2[i];\n        numeric.ops2[o] = o;\n    }\n    for(i in numeric.ops2) {\n        if(numeric.ops2.hasOwnProperty(i)) {\n            o = numeric.ops2[i];\n            var code, codeeq, setup = '';\n            if(numeric.myIndexOf.call(numeric.mathfuns2,i)!==-1) {\n                setup = 'var '+o+' = Math.'+o+';\\n';\n                code = function(r,x,y) { return r+' = '+o+'('+x+','+y+')'; };\n                codeeq = function(x,y) { return x+' = '+o+'('+x+','+y+')'; };\n            } else {\n                code = function(r,x,y) { return r+' = '+x+' '+o+' '+y; };\n                if(numeric.opseq.hasOwnProperty(i+'eq')) {\n                    codeeq = function(x,y) { return x+' '+o+'= '+y; };\n                } else {\n                    codeeq = function(x,y) { return x+' = '+x+' '+o+' '+y; };                    \n                }\n            }\n            numeric[i+'VV'] = numeric.pointwise2(['x[i]','y[i]'],code('ret[i]','x[i]','y[i]'),setup);\n            numeric[i+'SV'] = numeric.pointwise2(['x','y[i]'],code('ret[i]','x','y[i]'),setup);\n            numeric[i+'VS'] = numeric.pointwise2(['x[i]','y'],code('ret[i]','x[i]','y'),setup);\n            numeric[i] = Function(\n                    'var n = arguments.length, i, x = arguments[0], y;\\n'+\n                    'var VV = numeric.'+i+'VV, VS = numeric.'+i+'VS, SV = numeric.'+i+'SV;\\n'+\n                    'var dim = numeric.dim;\\n'+\n                    'for(i=1;i!==n;++i) { \\n'+\n                    '  y = arguments[i];\\n'+\n                    '  if(typeof x === \"object\") {\\n'+\n                    '      if(typeof y === \"object\") x = numeric._biforeach2(x,y,dim(x),0,VV);\\n'+\n                    '      else x = numeric._biforeach2(x,y,dim(x),0,VS);\\n'+\n                    '  } else if(typeof y === \"object\") x = numeric._biforeach2(x,y,dim(y),0,SV);\\n'+\n                    '  else '+codeeq('x','y')+'\\n'+\n                    '}\\nreturn x;\\n');\n            numeric[o] = numeric[i];\n            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]','x[i]'], codeeq('ret[i]','x[i]'),setup);\n            numeric[i+'eqS'] = numeric.pointwise2(['ret[i]','x'], codeeq('ret[i]','x'),setup);\n            numeric[i+'eq'] = Function(\n                    'var n = arguments.length, i, x = arguments[0], y;\\n'+\n                    'var V = numeric.'+i+'eqV, S = numeric.'+i+'eqS\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'for(i=1;i!==n;++i) { \\n'+\n                    '  y = arguments[i];\\n'+\n                    '  if(typeof y === \"object\") numeric._biforeach(x,y,s,0,V);\\n'+\n                    '  else numeric._biforeach(x,y,s,0,S);\\n'+\n                    '}\\nreturn x;\\n');\n        }\n    }\n    for(i=0;i<numeric.mathfuns2.length;++i) {\n        o = numeric.mathfuns2[i];\n        delete numeric.ops2[o];\n    }\n    for(i=0;i<numeric.mathfuns.length;++i) {\n        o = numeric.mathfuns[i];\n        numeric.ops1[o] = o;\n    }\n    for(i in numeric.ops1) {\n        if(numeric.ops1.hasOwnProperty(i)) {\n            setup = '';\n            o = numeric.ops1[i];\n            if(numeric.myIndexOf.call(numeric.mathfuns,i)!==-1) {\n                if(Math.hasOwnProperty(o)) setup = 'var '+o+' = Math.'+o+';\\n';\n            }\n            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]'],'ret[i] = '+o+'(ret[i]);',setup);\n            numeric[i+'eq'] = Function('x',\n                    'if(typeof x !== \"object\") return '+o+'x\\n'+\n                    'var i;\\n'+\n                    'var V = numeric.'+i+'eqV;\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'numeric._foreach(x,s,0,V);\\n'+\n                    'return x;\\n');\n            numeric[i+'V'] = numeric.pointwise2(['x[i]'],'ret[i] = '+o+'(x[i]);',setup);\n            numeric[i] = Function('x',\n                    'if(typeof x !== \"object\") return '+o+'(x)\\n'+\n                    'var i;\\n'+\n                    'var V = numeric.'+i+'V;\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'return numeric._foreach2(x,s,0,V);\\n');\n        }\n    }\n    for(i=0;i<numeric.mathfuns.length;++i) {\n        o = numeric.mathfuns[i];\n        delete numeric.ops1[o];\n    }\n    for(i in numeric.mapreducers) {\n        if(numeric.mapreducers.hasOwnProperty(i)) {\n            o = numeric.mapreducers[i];\n            numeric[i+'V'] = numeric.mapreduce2(o[0],o[1]);\n            numeric[i] = Function('x','s','k',\n                    o[1]+\n                    'if(typeof x !== \"object\") {'+\n                    '    xi = x;\\n'+\n                    o[0]+';\\n'+\n                    '    return accum;\\n'+\n                    '}'+\n                    'if(typeof s === \"undefined\") s = numeric.dim(x);\\n'+\n                    'if(typeof k === \"undefined\") k = 0;\\n'+\n                    'if(k === s.length-1) return numeric.'+i+'V(x);\\n'+\n                    'var xi;\\n'+\n                    'var n = x.length, i;\\n'+\n                    'for(i=n-1;i!==-1;--i) {\\n'+\n                    '   xi = arguments.callee(x[i]);\\n'+\n                    o[0]+';\\n'+\n                    '}\\n'+\n                    'return accum;\\n');\n        }\n    }\n}());\n\nnumeric.truncVV = numeric.pointwise(['x[i]','y[i]'],'ret[i] = round(x[i]/y[i])*y[i];','var round = Math.round;');\nnumeric.truncVS = numeric.pointwise(['x[i]','y'],'ret[i] = round(x[i]/y)*y;','var round = Math.round;');\nnumeric.truncSV = numeric.pointwise(['x','y[i]'],'ret[i] = round(x/y[i])*y[i];','var round = Math.round;');\nnumeric.trunc = function trunc(x,y) {\n    if(typeof x === \"object\") {\n        if(typeof y === \"object\") return numeric.truncVV(x,y);\n        return numeric.truncVS(x,y);\n    }\n    if (typeof y === \"object\") return numeric.truncSV(x,y);\n    return Math.round(x/y)*y;\n}\n\nnumeric.inv = function inv(x) {\n    var s = numeric.dim(x), abs = Math.abs, m = s[0], n = s[1];\n    var A = numeric.clone(x), Ai, Aj;\n    var I = numeric.identity(m), Ii, Ij;\n    var i,j,k,x;\n    for(j=0;j<n;++j) {\n        var i0 = -1;\n        var v0 = -1;\n        for(i=j;i!==m;++i) { k = abs(A[i][j]); if(k>v0) { i0 = i; v0 = k; } }\n        Aj = A[i0]; A[i0] = A[j]; A[j] = Aj;\n        Ij = I[i0]; I[i0] = I[j]; I[j] = Ij;\n        x = Aj[j];\n        for(k=j;k!==n;++k)    Aj[k] /= x; \n        for(k=n-1;k!==-1;--k) Ij[k] /= x;\n        for(i=m-1;i!==-1;--i) {\n            if(i!==j) {\n                Ai = A[i];\n                Ii = I[i];\n                x = Ai[j];\n                for(k=j+1;k!==n;++k)  Ai[k] -= Aj[k]*x;\n                for(k=n-1;k>0;--k) { Ii[k] -= Ij[k]*x; --k; Ii[k] -= Ij[k]*x; }\n                if(k===0) Ii[0] -= Ij[0]*x;\n            }\n        }\n    }\n    return I;\n}\n\nnumeric.det = function det(x) {\n    var s = numeric.dim(x);\n    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: det() only works on square matrices'); }\n    var n = s[0], ret = 1,i,j,k,A = numeric.clone(x),Aj,Ai,alpha,temp,k1,k2,k3;\n    for(j=0;j<n-1;j++) {\n        k=j;\n        for(i=j+1;i<n;i++) { if(Math.abs(A[i][j]) > Math.abs(A[k][j])) { k = i; } }\n        if(k !== j) {\n            temp = A[k]; A[k] = A[j]; A[j] = temp;\n            ret *= -1;\n        }\n        Aj = A[j];\n        for(i=j+1;i<n;i++) {\n            Ai = A[i];\n            alpha = Ai[j]/Aj[j];\n            for(k=j+1;k<n-1;k+=2) {\n                k1 = k+1;\n                Ai[k] -= Aj[k]*alpha;\n                Ai[k1] -= Aj[k1]*alpha;\n            }\n            if(k!==n) { Ai[k] -= Aj[k]*alpha; }\n        }\n        if(Aj[j] === 0) { return 0; }\n        ret *= Aj[j];\n    }\n    return ret*A[j][j];\n}\n\nnumeric.transpose = function transpose(x) {\n    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;\n    for(j=0;j<n;j++) ret[j] = Array(m);\n    for(i=m-1;i>=1;i-=2) {\n        A1 = x[i];\n        A0 = x[i-1];\n        for(j=n-1;j>=1;--j) {\n            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];\n            --j;\n            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];\n        }\n        if(j===0) {\n            Bj = ret[0]; Bj[i] = A1[0]; Bj[i-1] = A0[0];\n        }\n    }\n    if(i===0) {\n        A0 = x[0];\n        for(j=n-1;j>=1;--j) {\n            ret[j][0] = A0[j];\n            --j;\n            ret[j][0] = A0[j];\n        }\n        if(j===0) { ret[0][0] = A0[0]; }\n    }\n    return ret;\n}\nnumeric.negtranspose = function negtranspose(x) {\n    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;\n    for(j=0;j<n;j++) ret[j] = Array(m);\n    for(i=m-1;i>=1;i-=2) {\n        A1 = x[i];\n        A0 = x[i-1];\n        for(j=n-1;j>=1;--j) {\n            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];\n            --j;\n            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];\n        }\n        if(j===0) {\n            Bj = ret[0]; Bj[i] = -A1[0]; Bj[i-1] = -A0[0];\n        }\n    }\n    if(i===0) {\n        A0 = x[0];\n        for(j=n-1;j>=1;--j) {\n            ret[j][0] = -A0[j];\n            --j;\n            ret[j][0] = -A0[j];\n        }\n        if(j===0) { ret[0][0] = -A0[0]; }\n    }\n    return ret;\n}\n\nnumeric._random = function _random(s,k) {\n    var i,n=s[k],ret=Array(n), rnd;\n    if(k === s.length-1) {\n        rnd = Math.random;\n        for(i=n-1;i>=1;i-=2) {\n            ret[i] = rnd();\n            ret[i-1] = rnd();\n        }\n        if(i===0) { ret[0] = rnd(); }\n        return ret;\n    }\n    for(i=n-1;i>=0;i--) ret[i] = _random(s,k+1);\n    return ret;\n}\nnumeric.random = function random(s) { return numeric._random(s,0); }\n\nnumeric.norm2 = function norm2(x) { return Math.sqrt(numeric.norm2Squared(x)); }\n\nnumeric.linspace = function linspace(a,b,n) {\n    if(typeof n === \"undefined\") n = Math.max(Math.round(b-a)+1,1);\n    if(n<2) { return n===1?[a]:[]; }\n    var i,ret = Array(n);\n    n--;\n    for(i=n;i>=0;i--) { ret[i] = (i*b+(n-i)*a)/n; }\n    return ret;\n}\n\nnumeric.getBlock = function getBlock(x,from,to) {\n    var s = numeric.dim(x);\n    function foo(x,k) {\n        var i,a = from[k], n = to[k]-a, ret = Array(n);\n        if(k === s.length-1) {\n            for(i=n;i>=0;i--) { ret[i] = x[i+a]; }\n            return ret;\n        }\n        for(i=n;i>=0;i--) { ret[i] = foo(x[i+a],k+1); }\n        return ret;\n    }\n    return foo(x,0);\n}\n\nnumeric.setBlock = function setBlock(x,from,to,B) {\n    var s = numeric.dim(x);\n    function foo(x,y,k) {\n        var i,a = from[k], n = to[k]-a;\n        if(k === s.length-1) { for(i=n;i>=0;i--) { x[i+a] = y[i]; } }\n        for(i=n;i>=0;i--) { foo(x[i+a],y[i],k+1); }\n    }\n    foo(x,B,0);\n    return x;\n}\n\nnumeric.getRange = function getRange(A,I,J) {\n    var m = I.length, n = J.length;\n    var i,j;\n    var B = Array(m), Bi, AI;\n    for(i=m-1;i!==-1;--i) {\n        B[i] = Array(n);\n        Bi = B[i];\n        AI = A[I[i]];\n        for(j=n-1;j!==-1;--j) Bi[j] = AI[J[j]];\n    }\n    return B;\n}\n\nnumeric.blockMatrix = function blockMatrix(X) {\n    var s = numeric.dim(X);\n    if(s.length<4) return numeric.blockMatrix([X]);\n    var m=s[0],n=s[1],M,N,i,j,Xij;\n    M = 0; N = 0;\n    for(i=0;i<m;++i) M+=X[i][0].length;\n    for(j=0;j<n;++j) N+=X[0][j][0].length;\n    var Z = Array(M);\n    for(i=0;i<M;++i) Z[i] = Array(N);\n    var I=0,J,ZI,k,l,Xijk;\n    for(i=0;i<m;++i) {\n        J=N;\n        for(j=n-1;j!==-1;--j) {\n            Xij = X[i][j];\n            J -= Xij[0].length;\n            for(k=Xij.length-1;k!==-1;--k) {\n                Xijk = Xij[k];\n                ZI = Z[I+k];\n                for(l = Xijk.length-1;l!==-1;--l) ZI[J+l] = Xijk[l];\n            }\n        }\n        I += X[i][0].length;\n    }\n    return Z;\n}\n\nnumeric.tensor = function tensor(x,y) {\n    if(typeof x === \"number\" || typeof y === \"number\") return numeric.mul(x,y);\n    var s1 = numeric.dim(x), s2 = numeric.dim(y);\n    if(s1.length !== 1 || s2.length !== 1) {\n        throw new Error('numeric: tensor product is only defined for vectors');\n    }\n    var m = s1[0], n = s2[0], A = Array(m), Ai, i,j,xi;\n    for(i=m-1;i>=0;i--) {\n        Ai = Array(n);\n        xi = x[i];\n        for(j=n-1;j>=3;--j) {\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n        }\n        while(j>=0) { Ai[j] = xi * y[j]; --j; }\n        A[i] = Ai;\n    }\n    return A;\n}\n\n// 3. The Tensor type T\nnumeric.T = function T(x,y) { this.x = x; this.y = y; }\nnumeric.t = function t(x,y) { return new numeric.T(x,y); }\n\nnumeric.Tbinop = function Tbinop(rr,rc,cr,cc,setup) {\n    var io = numeric.indexOf;\n    if(typeof setup !== \"string\") {\n        var k;\n        setup = '';\n        for(k in numeric) {\n            if(numeric.hasOwnProperty(k) && (rr.indexOf(k)>=0 || rc.indexOf(k)>=0 || cr.indexOf(k)>=0 || cc.indexOf(k)>=0) && k.length>1) {\n                setup += 'var '+k+' = numeric.'+k+';\\n';\n            }\n        }\n    }\n    return Function(['y'],\n            'var x = this;\\n'+\n            'if(!(y instanceof numeric.T)) { y = new numeric.T(y); }\\n'+\n            setup+'\\n'+\n            'if(x.y) {'+\n            '  if(y.y) {'+\n            '    return new numeric.T('+cc+');\\n'+\n            '  }\\n'+\n            '  return new numeric.T('+cr+');\\n'+\n            '}\\n'+\n            'if(y.y) {\\n'+\n            '  return new numeric.T('+rc+');\\n'+\n            '}\\n'+\n            'return new numeric.T('+rr+');\\n'\n    );\n}\n\nnumeric.T.prototype.add = numeric.Tbinop(\n        'add(x.x,y.x)',\n        'add(x.x,y.x),y.y',\n        'add(x.x,y.x),x.y',\n        'add(x.x,y.x),add(x.y,y.y)');\nnumeric.T.prototype.sub = numeric.Tbinop(\n        'sub(x.x,y.x)',\n        'sub(x.x,y.x),neg(y.y)',\n        'sub(x.x,y.x),x.y',\n        'sub(x.x,y.x),sub(x.y,y.y)');\nnumeric.T.prototype.mul = numeric.Tbinop(\n        'mul(x.x,y.x)',\n        'mul(x.x,y.x),mul(x.x,y.y)',\n        'mul(x.x,y.x),mul(x.y,y.x)',\n        'sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))');\n\nnumeric.T.prototype.reciprocal = function reciprocal() {\n    var mul = numeric.mul, div = numeric.div;\n    if(this.y) {\n        var d = numeric.add(mul(this.x,this.x),mul(this.y,this.y));\n        return new numeric.T(div(this.x,d),div(numeric.neg(this.y),d));\n    }\n    return new T(div(1,this.x));\n}\nnumeric.T.prototype.div = function div(y) {\n    if(!(y instanceof numeric.T)) y = new numeric.T(y);\n    if(y.y) { return this.mul(y.reciprocal()); }\n    var div = numeric.div;\n    if(this.y) { return new numeric.T(div(this.x,y.x),div(this.y,y.x)); }\n    return new numeric.T(div(this.x,y.x));\n}\nnumeric.T.prototype.dot = numeric.Tbinop(\n        'dot(x.x,y.x)',\n        'dot(x.x,y.x),dot(x.x,y.y)',\n        'dot(x.x,y.x),dot(x.y,y.x)',\n        'sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))'\n        );\nnumeric.T.prototype.transpose = function transpose() {\n    var t = numeric.transpose, x = this.x, y = this.y;\n    if(y) { return new numeric.T(t(x),t(y)); }\n    return new numeric.T(t(x));\n}\nnumeric.T.prototype.transjugate = function transjugate() {\n    var t = numeric.transpose, x = this.x, y = this.y;\n    if(y) { return new numeric.T(t(x),numeric.negtranspose(y)); }\n    return new numeric.T(t(x));\n}\nnumeric.Tunop = function Tunop(r,c,s) {\n    if(typeof s !== \"string\") { s = ''; }\n    return Function(\n            'var x = this;\\n'+\n            s+'\\n'+\n            'if(x.y) {'+\n            '  '+c+';\\n'+\n            '}\\n'+\n            r+';\\n'\n    );\n}\n\nnumeric.T.prototype.exp = numeric.Tunop(\n        'return new numeric.T(ex)',\n        'return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))',\n        'var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;');\nnumeric.T.prototype.conj = numeric.Tunop(\n        'return new numeric.T(x.x);',\n        'return new numeric.T(x.x,numeric.neg(x.y));');\nnumeric.T.prototype.neg = numeric.Tunop(\n        'return new numeric.T(neg(x.x));',\n        'return new numeric.T(neg(x.x),neg(x.y));',\n        'var neg = numeric.neg;');\nnumeric.T.prototype.sin = numeric.Tunop(\n        'return new numeric.T(numeric.sin(x.x))',\n        'return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));');\nnumeric.T.prototype.cos = numeric.Tunop(\n        'return new numeric.T(numeric.cos(x.x))',\n        'return x.exp().add(x.neg().exp()).div(2);');\nnumeric.T.prototype.abs = numeric.Tunop(\n        'return new numeric.T(numeric.abs(x.x));',\n        'return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));',\n        'var mul = numeric.mul;');\nnumeric.T.prototype.log = numeric.Tunop(\n        'return new numeric.T(numeric.log(x.x));',\n        'var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\\n'+\n        'return new numeric.T(numeric.log(r.x),theta.x);');\nnumeric.T.prototype.norm2 = numeric.Tunop(\n        'return numeric.norm2(x.x);',\n        'var f = numeric.norm2Squared;\\n'+\n        'return Math.sqrt(f(x.x)+f(x.y));');\nnumeric.T.prototype.inv = function inv() {\n    var A = this;\n    if(typeof A.y === \"undefined\") { return new numeric.T(numeric.inv(A.x)); }\n    var n = A.x.length, i, j, k;\n    var Rx = numeric.identity(n),Ry = numeric.rep([n,n],0);\n    var Ax = numeric.clone(A.x), Ay = numeric.clone(A.y);\n    var Aix, Aiy, Ajx, Ajy, Rix, Riy, Rjx, Rjy;\n    var i,j,k,d,d1,ax,ay,bx,by,temp;\n    for(i=0;i<n;i++) {\n        ax = Ax[i][i]; ay = Ay[i][i];\n        d = ax*ax+ay*ay;\n        k = i;\n        for(j=i+1;j<n;j++) {\n            ax = Ax[j][i]; ay = Ay[j][i];\n            d1 = ax*ax+ay*ay;\n            if(d1 > d) { k=j; d = d1; }\n        }\n        if(k!==i) {\n            temp = Ax[i]; Ax[i] = Ax[k]; Ax[k] = temp;\n            temp = Ay[i]; Ay[i] = Ay[k]; Ay[k] = temp;\n            temp = Rx[i]; Rx[i] = Rx[k]; Rx[k] = temp;\n            temp = Ry[i]; Ry[i] = Ry[k]; Ry[k] = temp;\n        }\n        Aix = Ax[i]; Aiy = Ay[i];\n        Rix = Rx[i]; Riy = Ry[i];\n        ax = Aix[i]; ay = Aiy[i];\n        for(j=i+1;j<n;j++) {\n            bx = Aix[j]; by = Aiy[j];\n            Aix[j] = (bx*ax+by*ay)/d;\n            Aiy[j] = (by*ax-bx*ay)/d;\n        }\n        for(j=0;j<n;j++) {\n            bx = Rix[j]; by = Riy[j];\n            Rix[j] = (bx*ax+by*ay)/d;\n            Riy[j] = (by*ax-bx*ay)/d;\n        }\n        for(j=i+1;j<n;j++) {\n            Ajx = Ax[j]; Ajy = Ay[j];\n            Rjx = Rx[j]; Rjy = Ry[j];\n            ax = Ajx[i]; ay = Ajy[i];\n            for(k=i+1;k<n;k++) {\n                bx = Aix[k]; by = Aiy[k];\n                Ajx[k] -= bx*ax-by*ay;\n                Ajy[k] -= by*ax+bx*ay;\n            }\n            for(k=0;k<n;k++) {\n                bx = Rix[k]; by = Riy[k];\n                Rjx[k] -= bx*ax-by*ay;\n                Rjy[k] -= by*ax+bx*ay;\n            }\n        }\n    }\n    for(i=n-1;i>0;i--) {\n        Rix = Rx[i]; Riy = Ry[i];\n        for(j=i-1;j>=0;j--) {\n            Rjx = Rx[j]; Rjy = Ry[j];\n            ax = Ax[j][i]; ay = Ay[j][i];\n            for(k=n-1;k>=0;k--) {\n                bx = Rix[k]; by = Riy[k];\n                Rjx[k] -= ax*bx - ay*by;\n                Rjy[k] -= ax*by + ay*bx;\n            }\n        }\n    }\n    return new numeric.T(Rx,Ry);\n}\nnumeric.T.prototype.get = function get(i) {\n    var x = this.x, y = this.y, k = 0, ik, n = i.length;\n    if(y) {\n        while(k<n) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        return new numeric.T(x,y);\n    }\n    while(k<n) {\n        ik = i[k];\n        x = x[ik];\n        k++;\n    }\n    return new numeric.T(x);\n}\nnumeric.T.prototype.set = function set(i,v) {\n    var x = this.x, y = this.y, k = 0, ik, n = i.length, vx = v.x, vy = v.y;\n    if(n===0) {\n        if(vy) { this.y = vy; }\n        else if(y) { this.y = undefined; }\n        this.x = x;\n        return this;\n    }\n    if(vy) {\n        if(y) { /* ok */ }\n        else {\n            y = numeric.rep(numeric.dim(x),0);\n            this.y = y;\n        }\n        while(k<n-1) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        ik = i[k];\n        x[ik] = vx;\n        y[ik] = vy;\n        return this;\n    }\n    if(y) {\n        while(k<n-1) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        ik = i[k];\n        x[ik] = vx;\n        if(vx instanceof Array) y[ik] = numeric.rep(numeric.dim(vx),0);\n        else y[ik] = 0;\n        return this;\n    }\n    while(k<n-1) {\n        ik = i[k];\n        x = x[ik];\n        k++;\n    }\n    ik = i[k];\n    x[ik] = vx;\n    return this;\n}\nnumeric.T.prototype.getRows = function getRows(i0,i1) {\n    var n = i1-i0+1, j;\n    var rx = Array(n), ry, x = this.x, y = this.y;\n    for(j=i0;j<=i1;j++) { rx[j-i0] = x[j]; }\n    if(y) {\n        ry = Array(n);\n        for(j=i0;j<=i1;j++) { ry[j-i0] = y[j]; }\n        return new numeric.T(rx,ry);\n    }\n    return new numeric.T(rx);\n}\nnumeric.T.prototype.setRows = function setRows(i0,i1,A) {\n    var j;\n    var rx = this.x, ry = this.y, x = A.x, y = A.y;\n    for(j=i0;j<=i1;j++) { rx[j] = x[j-i0]; }\n    if(y) {\n        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }\n        for(j=i0;j<=i1;j++) { ry[j] = y[j-i0]; }\n    } else if(ry) {\n        for(j=i0;j<=i1;j++) { ry[j] = numeric.rep([x[j-i0].length],0); }\n    }\n    return this;\n}\nnumeric.T.prototype.getRow = function getRow(k) {\n    var x = this.x, y = this.y;\n    if(y) { return new numeric.T(x[k],y[k]); }\n    return new numeric.T(x[k]);\n}\nnumeric.T.prototype.setRow = function setRow(i,v) {\n    var rx = this.x, ry = this.y, x = v.x, y = v.y;\n    rx[i] = x;\n    if(y) {\n        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }\n        ry[i] = y;\n    } else if(ry) {\n        ry = numeric.rep([x.length],0);\n    }\n    return this;\n}\n\nnumeric.T.prototype.getBlock = function getBlock(from,to) {\n    var x = this.x, y = this.y, b = numeric.getBlock;\n    if(y) { return new numeric.T(b(x,from,to),b(y,from,to)); }\n    return new numeric.T(b(x,from,to));\n}\nnumeric.T.prototype.setBlock = function setBlock(from,to,A) {\n    if(!(A instanceof numeric.T)) A = new numeric.T(A);\n    var x = this.x, y = this.y, b = numeric.setBlock, Ax = A.x, Ay = A.y;\n    if(Ay) {\n        if(!y) { this.y = numeric.rep(numeric.dim(this),0); y = this.y; }\n        b(x,from,to,Ax);\n        b(y,from,to,Ay);\n        return this;\n    }\n    b(x,from,to,Ax);\n    if(y) b(y,from,to,numeric.rep(numeric.dim(Ax),0));\n}\nnumeric.T.rep = function rep(s,v) {\n    var T = numeric.T;\n    if(!(v instanceof T)) v = new T(v);\n    var x = v.x, y = v.y, r = numeric.rep;\n    if(y) return new T(r(s,x),r(s,y));\n    return new T(r(s,x));\n}\nnumeric.T.diag = function diag(d) {\n    if(!(d instanceof numeric.T)) d = new numeric.T(d);\n    var x = d.x, y = d.y, diag = numeric.diag;\n    if(y) return new numeric.T(diag(x),diag(y));\n    return new numeric.T(diag(x));\n}\nnumeric.T.eig = function eig() {\n    if(this.y) { throw new Error('eig: not implemented for complex matrices.'); }\n    return numeric.eig(this.x);\n}\nnumeric.T.identity = function identity(n) { return new numeric.T(numeric.identity(n)); }\nnumeric.T.prototype.getDiag = function getDiag() {\n    var n = numeric;\n    var x = this.x, y = this.y;\n    if(y) { return new n.T(n.getDiag(x),n.getDiag(y)); }\n    return new n.T(n.getDiag(x));\n}\n\n// 4. Eigenvalues of real matrices\n\nnumeric.house = function house(x) {\n    var v = numeric.clone(x);\n    var s = x[0] >= 0 ? 1 : -1;\n    var alpha = s*numeric.norm2(x);\n    v[0] += alpha;\n    var foo = numeric.norm2(v);\n    if(foo === 0) { /* this should not happen */ throw new Error('eig: internal error'); }\n    return numeric.div(v,foo);\n}\n\nnumeric.toUpperHessenberg = function toUpperHessenberg(me) {\n    var s = numeric.dim(me);\n    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: toUpperHessenberg() only works on square matrices'); }\n    var m = s[0], i,j,k,x,v,A = numeric.clone(me),B,C,Ai,Ci,Q = numeric.identity(m),Qi;\n    for(j=0;j<m-2;j++) {\n        x = Array(m-j-1);\n        for(i=j+1;i<m;i++) { x[i-j-1] = A[i][j]; }\n        if(numeric.norm2(x)>0) {\n            v = numeric.house(x);\n            B = numeric.getBlock(A,[j+1,j],[m-1,m-1]);\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<m;i++) { Ai = A[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Ai[k] -= 2*Ci[k-j]; }\n            B = numeric.getBlock(A,[0,j+1],[m-1,m-1]);\n            C = numeric.tensor(numeric.dot(B,v),v);\n            for(i=0;i<m;i++) { Ai = A[i]; Ci = C[i]; for(k=j+1;k<m;k++) Ai[k] -= 2*Ci[k-j-1]; }\n            B = Array(m-j-1);\n            for(i=j+1;i<m;i++) B[i-j-1] = Q[i];\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<m;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        }\n    }\n    return {H:A, Q:Q};\n}\n\nnumeric.epsilon = 2.220446049250313e-16;\n\nnumeric.QRFrancis = function(H,maxiter) {\n    if(typeof maxiter === \"undefined\") { maxiter = 10000; }\n    H = numeric.clone(H);\n    var H0 = numeric.clone(H);\n    var s = numeric.dim(H),m=s[0],x,v,a,b,c,d,det,tr, Hloc, Q = numeric.identity(m), Qi, Hi, B, C, Ci,i,j,k,iter;\n    if(m<3) { return {Q:Q, B:[ [0,m-1] ]}; }\n    var epsilon = numeric.epsilon;\n    for(iter=0;iter<maxiter;iter++) {\n        for(j=0;j<m-1;j++) {\n            if(Math.abs(H[j+1][j]) < epsilon*(Math.abs(H[j][j])+Math.abs(H[j+1][j+1]))) {\n                var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[j,j]),maxiter);\n                var QH2 = numeric.QRFrancis(numeric.getBlock(H,[j+1,j+1],[m-1,m-1]),maxiter);\n                B = Array(j+1);\n                for(i=0;i<=j;i++) { B[i] = Q[i]; }\n                C = numeric.dot(QH1.Q,B);\n                for(i=0;i<=j;i++) { Q[i] = C[i]; }\n                B = Array(m-j-1);\n                for(i=j+1;i<m;i++) { B[i-j-1] = Q[i]; }\n                C = numeric.dot(QH2.Q,B);\n                for(i=j+1;i<m;i++) { Q[i] = C[i-j-1]; }\n                return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,j+1))};\n            }\n        }\n        a = H[m-2][m-2]; b = H[m-2][m-1];\n        c = H[m-1][m-2]; d = H[m-1][m-1];\n        tr = a+d;\n        det = (a*d-b*c);\n        Hloc = numeric.getBlock(H, [0,0], [2,2]);\n        if(tr*tr>=4*det) {\n            var s1,s2;\n            s1 = 0.5*(tr+Math.sqrt(tr*tr-4*det));\n            s2 = 0.5*(tr-Math.sqrt(tr*tr-4*det));\n            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),\n                                           numeric.mul(Hloc,s1+s2)),\n                               numeric.diag(numeric.rep([3],s1*s2)));\n        } else {\n            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),\n                                           numeric.mul(Hloc,tr)),\n                               numeric.diag(numeric.rep([3],det)));\n        }\n        x = [Hloc[0][0],Hloc[1][0],Hloc[2][0]];\n        v = numeric.house(x);\n        B = [H[0],H[1],H[2]];\n        C = numeric.tensor(v,numeric.dot(v,B));\n        for(i=0;i<3;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<m;k++) Hi[k] -= 2*Ci[k]; }\n        B = numeric.getBlock(H, [0,0],[m-1,2]);\n        C = numeric.tensor(numeric.dot(B,v),v);\n        for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<3;k++) Hi[k] -= 2*Ci[k]; }\n        B = [Q[0],Q[1],Q[2]];\n        C = numeric.tensor(v,numeric.dot(v,B));\n        for(i=0;i<3;i++) { Qi = Q[i]; Ci = C[i]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        var J;\n        for(j=0;j<m-2;j++) {\n            for(k=j;k<=j+1;k++) {\n                if(Math.abs(H[k+1][k]) < epsilon*(Math.abs(H[k][k])+Math.abs(H[k+1][k+1]))) {\n                    var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[k,k]),maxiter);\n                    var QH2 = numeric.QRFrancis(numeric.getBlock(H,[k+1,k+1],[m-1,m-1]),maxiter);\n                    B = Array(k+1);\n                    for(i=0;i<=k;i++) { B[i] = Q[i]; }\n                    C = numeric.dot(QH1.Q,B);\n                    for(i=0;i<=k;i++) { Q[i] = C[i]; }\n                    B = Array(m-k-1);\n                    for(i=k+1;i<m;i++) { B[i-k-1] = Q[i]; }\n                    C = numeric.dot(QH2.Q,B);\n                    for(i=k+1;i<m;i++) { Q[i] = C[i-k-1]; }\n                    return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,k+1))};\n                }\n            }\n            J = Math.min(m-1,j+3);\n            x = Array(J-j);\n            for(i=j+1;i<=J;i++) { x[i-j-1] = H[i][j]; }\n            v = numeric.house(x);\n            B = numeric.getBlock(H, [j+1,j],[J,m-1]);\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<=J;i++) { Hi = H[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Hi[k] -= 2*Ci[k-j]; }\n            B = numeric.getBlock(H, [0,j+1],[m-1,J]);\n            C = numeric.tensor(numeric.dot(B,v),v);\n            for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=j+1;k<=J;k++) Hi[k] -= 2*Ci[k-j-1]; }\n            B = Array(J-j);\n            for(i=j+1;i<=J;i++) B[i-j-1] = Q[i];\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<=J;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        }\n    }\n    throw new Error('numeric: eigenvalue iteration does not converge -- increase maxiter?');\n}\n\nnumeric.eig = function eig(A,maxiter) {\n    var QH = numeric.toUpperHessenberg(A);\n    var QB = numeric.QRFrancis(QH.H,maxiter);\n    var T = numeric.T;\n    var n = A.length,i,k,flag = false,B = QB.B,H = numeric.dot(QB.Q,numeric.dot(QH.H,numeric.transpose(QB.Q)));\n    var Q = new T(numeric.dot(QB.Q,QH.Q)),Q0;\n    var m = B.length,j;\n    var a,b,c,d,p1,p2,disc,x,y,p,q,n1,n2;\n    var sqrt = Math.sqrt;\n    for(k=0;k<m;k++) {\n        i = B[k][0];\n        if(i === B[k][1]) {\n            // nothing\n        } else {\n            j = i+1;\n            a = H[i][i];\n            b = H[i][j];\n            c = H[j][i];\n            d = H[j][j];\n            if(b === 0 && c === 0) continue;\n            p1 = -a-d;\n            p2 = a*d-b*c;\n            disc = p1*p1-4*p2;\n            if(disc>=0) {\n                if(p1<0) x = -0.5*(p1-sqrt(disc));\n                else     x = -0.5*(p1+sqrt(disc));\n                n1 = (a-x)*(a-x)+b*b;\n                n2 = c*c+(d-x)*(d-x);\n                if(n1>n2) {\n                    n1 = sqrt(n1);\n                    p = (a-x)/n1;\n                    q = b/n1;\n                } else {\n                    n2 = sqrt(n2);\n                    p = c/n2;\n                    q = (d-x)/n2;\n                }\n                Q0 = new T([[q,-p],[p,q]]);\n                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));\n            } else {\n                x = -0.5*p1;\n                y = 0.5*sqrt(-disc);\n                n1 = (a-x)*(a-x)+b*b;\n                n2 = c*c+(d-x)*(d-x);\n                if(n1>n2) {\n                    n1 = sqrt(n1+y*y);\n                    p = (a-x)/n1;\n                    q = b/n1;\n                    x = 0;\n                    y /= n1;\n                } else {\n                    n2 = sqrt(n2+y*y);\n                    p = c/n2;\n                    q = (d-x)/n2;\n                    x = y/n2;\n                    y = 0;\n                }\n                Q0 = new T([[q,-p],[p,q]],[[x,y],[y,-x]]);\n                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));\n            }\n        }\n    }\n    var R = Q.dot(A).dot(Q.transjugate()), n = A.length, E = numeric.T.identity(n);\n    for(j=0;j<n;j++) {\n        if(j>0) {\n            for(k=j-1;k>=0;k--) {\n                var Rk = R.get([k,k]), Rj = R.get([j,j]);\n                if(numeric.neq(Rk.x,Rj.x) || numeric.neq(Rk.y,Rj.y)) {\n                    x = R.getRow(k).getBlock([k],[j-1]);\n                    y = E.getRow(j).getBlock([k],[j-1]);\n                    E.set([j,k],(R.get([k,j]).neg().sub(x.dot(y))).div(Rk.sub(Rj)));\n                } else {\n                    E.setRow(j,E.getRow(k));\n                    continue;\n                }\n            }\n        }\n    }\n    for(j=0;j<n;j++) {\n        x = E.getRow(j);\n        E.setRow(j,x.div(x.norm2()));\n    }\n    E = E.transpose();\n    E = Q.transjugate().dot(E);\n    return { lambda:R.getDiag(), E:E };\n};\n\n// 5. Compressed Column Storage matrices\nnumeric.ccsSparse = function ccsSparse(A) {\n    var m = A.length,n,foo, i,j, counts = [];\n    for(i=m-1;i!==-1;--i) {\n        foo = A[i];\n        for(j in foo) {\n            j = parseInt(j);\n            while(j>=counts.length) counts[counts.length] = 0;\n            if(foo[j]!==0) counts[j]++;\n        }\n    }\n    var n = counts.length;\n    var Ai = Array(n+1);\n    Ai[0] = 0;\n    for(i=0;i<n;++i) Ai[i+1] = Ai[i] + counts[i];\n    var Aj = Array(Ai[n]), Av = Array(Ai[n]);\n    for(i=m-1;i!==-1;--i) {\n        foo = A[i];\n        for(j in foo) {\n            if(foo[j]!==0) {\n                counts[j]--;\n                Aj[Ai[j]+counts[j]] = i;\n                Av[Ai[j]+counts[j]] = foo[j];\n            }\n        }\n    }\n    return [Ai,Aj,Av];\n}\nnumeric.ccsFull = function ccsFull(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2], s = numeric.ccsDim(A), m = s[0], n = s[1], i,j,j0,j1,k;\n    var B = numeric.rep([m,n],0);\n    for(i=0;i<n;i++) {\n        j0 = Ai[i];\n        j1 = Ai[i+1];\n        for(j=j0;j<j1;++j) { B[Aj[j]][i] = Av[j]; }\n    }\n    return B;\n}\nnumeric.ccsTSolve = function ccsTSolve(A,b,x,bj,xj) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, max = Math.max,n=0;\n    if(typeof bj === \"undefined\") x = numeric.rep([m],0);\n    if(typeof bj === \"undefined\") bj = numeric.linspace(0,x.length-1);\n    if(typeof xj === \"undefined\") xj = [];\n    function dfs(j) {\n        var k;\n        if(x[j] !== 0) return;\n        x[j] = 1;\n        for(k=Ai[j];k<Ai[j+1];++k) dfs(Aj[k]);\n        xj[n] = j;\n        ++n;\n    }\n    var i,j,j0,j1,k,l,l0,l1,a;\n    for(i=bj.length-1;i!==-1;--i) { dfs(bj[i]); }\n    xj.length = n;\n    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }\n    for(i=bj.length-1;i!==-1;--i) { j = bj[i]; x[j] = b[j]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        j0 = Ai[j];\n        j1 = max(Ai[j+1],j0);\n        for(k=j0;k!==j1;++k) { if(Aj[k] === j) { x[j] /= Av[k]; break; } }\n        a = x[j];\n        for(k=j0;k!==j1;++k) {\n            l = Aj[k];\n            if(l !== j) x[l] -= a*Av[k];\n        }\n    }\n    return x;\n}\nnumeric.ccsDFS = function ccsDFS(n) {\n    this.k = Array(n);\n    this.k1 = Array(n);\n    this.j = Array(n);\n}\nnumeric.ccsDFS.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv) {\n    var m = 0,foo,n=xj.length;\n    var k = this.k, k1 = this.k1, j = this.j,km,k11;\n    if(x[J]!==0) return;\n    x[J] = 1;\n    j[0] = J;\n    k[0] = km = Ai[J];\n    k1[0] = k11 = Ai[J+1];\n    while(1) {\n        if(km >= k11) {\n            xj[n] = j[m];\n            if(m===0) return;\n            ++n;\n            --m;\n            km = k[m];\n            k11 = k1[m];\n        } else {\n            foo = Pinv[Aj[km]];\n            if(x[foo] === 0) {\n                x[foo] = 1;\n                k[m] = km;\n                ++m;\n                j[m] = foo;\n                km = Ai[foo];\n                k1[m] = k11 = Ai[foo+1];\n            } else ++km;\n        }\n    }\n}\nnumeric.ccsLPSolve = function ccsLPSolve(A,B,x,xj,I,Pinv,dfs) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    \n    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;\n    i0 = Bi[I];\n    i1 = Bi[I+1];\n    xj.length = 0;\n    for(i=i0;i<i1;++i) { dfs.dfs(Pinv[Bj[i]],Ai,Aj,x,xj,Pinv); }\n    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }\n    for(i=i0;i!==i1;++i) { j = Pinv[Bj[i]]; x[j] = Bv[i]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        j0 = Ai[j];\n        j1 = Ai[j+1];\n        for(k=j0;k<j1;++k) { if(Pinv[Aj[k]] === j) { x[j] /= Av[k]; break; } }\n        a = x[j];\n        for(k=j0;k<j1;++k) {\n            l = Pinv[Aj[k]];\n            if(l !== j) x[l] -= a*Av[k];\n        }\n    }\n    return x;\n}\nnumeric.ccsLUP1 = function ccsLUP1(A,threshold) {\n    var m = A[0].length-1;\n    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];\n    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];\n    var x = numeric.rep([m],0), xj = numeric.rep([m],0);\n    var i,j,k,j0,j1,a,e,c,d,K;\n    var sol = numeric.ccsLPSolve, max = Math.max, abs = Math.abs;\n    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);\n    var dfs = new numeric.ccsDFS(m);\n    if(typeof threshold === \"undefined\") { threshold = 1; }\n    for(i=0;i<m;++i) {\n        sol(L,A,x,xj,i,Pinv,dfs);\n        a = -1;\n        e = -1;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            if(k <= i) continue;\n            c = abs(x[k]);\n            if(c > a) { e = k; a = c; }\n        }\n        if(abs(x[i])<threshold*a) {\n            j = P[i];\n            a = P[e];\n            P[i] = a; Pinv[a] = i;\n            P[e] = j; Pinv[j] = e;\n            a = x[i]; x[i] = x[e]; x[e] = a;\n        }\n        a = Li[i];\n        e = Ui[i];\n        d = x[i];\n        Lj[a] = P[i];\n        Lv[a] = 1;\n        ++a;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            c = x[k];\n            xj[j] = 0;\n            x[k] = 0;\n            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }\n            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }\n        }\n        Li[i+1] = a;\n        Ui[i+1] = e;\n    }\n    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }\n    return {L:L, U:U, P:P, Pinv:Pinv};\n}\nnumeric.ccsDFS0 = function ccsDFS0(n) {\n    this.k = Array(n);\n    this.k1 = Array(n);\n    this.j = Array(n);\n}\nnumeric.ccsDFS0.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv,P) {\n    var m = 0,foo,n=xj.length;\n    var k = this.k, k1 = this.k1, j = this.j,km,k11;\n    if(x[J]!==0) return;\n    x[J] = 1;\n    j[0] = J;\n    k[0] = km = Ai[Pinv[J]];\n    k1[0] = k11 = Ai[Pinv[J]+1];\n    while(1) {\n        if(isNaN(km)) throw new Error(\"Ow!\");\n        if(km >= k11) {\n            xj[n] = Pinv[j[m]];\n            if(m===0) return;\n            ++n;\n            --m;\n            km = k[m];\n            k11 = k1[m];\n        } else {\n            foo = Aj[km];\n            if(x[foo] === 0) {\n                x[foo] = 1;\n                k[m] = km;\n                ++m;\n                j[m] = foo;\n                foo = Pinv[foo];\n                km = Ai[foo];\n                k1[m] = k11 = Ai[foo+1];\n            } else ++km;\n        }\n    }\n}\nnumeric.ccsLPSolve0 = function ccsLPSolve0(A,B,y,xj,I,Pinv,P,dfs) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    \n    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;\n    i0 = Bi[I];\n    i1 = Bi[I+1];\n    xj.length = 0;\n    for(i=i0;i<i1;++i) { dfs.dfs(Bj[i],Ai,Aj,y,xj,Pinv,P); }\n    for(i=xj.length-1;i!==-1;--i) { j = xj[i]; y[P[j]] = 0; }\n    for(i=i0;i!==i1;++i) { j = Bj[i]; y[j] = Bv[i]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        l = P[j];\n        j0 = Ai[j];\n        j1 = Ai[j+1];\n        for(k=j0;k<j1;++k) { if(Aj[k] === l) { y[l] /= Av[k]; break; } }\n        a = y[l];\n        for(k=j0;k<j1;++k) y[Aj[k]] -= a*Av[k];\n        y[l] = a;\n    }\n}\nnumeric.ccsLUP0 = function ccsLUP0(A,threshold) {\n    var m = A[0].length-1;\n    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];\n    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];\n    var y = numeric.rep([m],0), xj = numeric.rep([m],0);\n    var i,j,k,j0,j1,a,e,c,d,K;\n    var sol = numeric.ccsLPSolve0, max = Math.max, abs = Math.abs;\n    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);\n    var dfs = new numeric.ccsDFS0(m);\n    if(typeof threshold === \"undefined\") { threshold = 1; }\n    for(i=0;i<m;++i) {\n        sol(L,A,y,xj,i,Pinv,P,dfs);\n        a = -1;\n        e = -1;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            if(k <= i) continue;\n            c = abs(y[P[k]]);\n            if(c > a) { e = k; a = c; }\n        }\n        if(abs(y[P[i]])<threshold*a) {\n            j = P[i];\n            a = P[e];\n            P[i] = a; Pinv[a] = i;\n            P[e] = j; Pinv[j] = e;\n        }\n        a = Li[i];\n        e = Ui[i];\n        d = y[P[i]];\n        Lj[a] = P[i];\n        Lv[a] = 1;\n        ++a;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            c = y[P[k]];\n            xj[j] = 0;\n            y[P[k]] = 0;\n            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }\n            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }\n        }\n        Li[i+1] = a;\n        Ui[i+1] = e;\n    }\n    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }\n    return {L:L, U:U, P:P, Pinv:Pinv};\n}\nnumeric.ccsLUP = numeric.ccsLUP0;\n\nnumeric.ccsDim = function ccsDim(A) { return [numeric.sup(A[1])+1,A[0].length-1]; }\nnumeric.ccsGetBlock = function ccsGetBlock(A,i,j) {\n    var s = numeric.ccsDim(A),m=s[0],n=s[1];\n    if(typeof i === \"undefined\") { i = numeric.linspace(0,m-1); }\n    else if(typeof i === \"number\") { i = [i]; }\n    if(typeof j === \"undefined\") { j = numeric.linspace(0,n-1); }\n    else if(typeof j === \"number\") { j = [j]; }\n    var p,p0,p1,P = i.length,q,Q = j.length,r,jq,ip;\n    var Bi = numeric.rep([n],0), Bj=[], Bv=[], B = [Bi,Bj,Bv];\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var x = numeric.rep([m],0),count=0,flags = numeric.rep([m],0);\n    for(q=0;q<Q;++q) {\n        jq = j[q];\n        var q0 = Ai[jq];\n        var q1 = Ai[jq+1];\n        for(p=q0;p<q1;++p) {\n            r = Aj[p];\n            flags[r] = 1;\n            x[r] = Av[p];\n        }\n        for(p=0;p<P;++p) {\n            ip = i[p];\n            if(flags[ip]) {\n                Bj[count] = p;\n                Bv[count] = x[i[p]];\n                ++count;\n            }\n        }\n        for(p=q0;p<q1;++p) {\n            r = Aj[p];\n            flags[r] = 0;\n        }\n        Bi[q+1] = count;\n    }\n    return B;\n}\n\nnumeric.ccsDot = function ccsDot(A,B) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    var sA = numeric.ccsDim(A), sB = numeric.ccsDim(B);\n    var m = sA[0], n = sA[1], o = sB[1];\n    var x = numeric.rep([m],0), flags = numeric.rep([m],0), xj = Array(m);\n    var Ci = numeric.rep([o],0), Cj = [], Cv = [], C = [Ci,Cj,Cv];\n    var i,j,k,j0,j1,i0,i1,l,p,a,b;\n    for(k=0;k!==o;++k) {\n        j0 = Bi[k];\n        j1 = Bi[k+1];\n        p = 0;\n        for(j=j0;j<j1;++j) {\n            a = Bj[j];\n            b = Bv[j];\n            i0 = Ai[a];\n            i1 = Ai[a+1];\n            for(i=i0;i<i1;++i) {\n                l = Aj[i];\n                if(flags[l]===0) {\n                    xj[p] = l;\n                    flags[l] = 1;\n                    p = p+1;\n                }\n                x[l] = x[l] + Av[i]*b;\n            }\n        }\n        j0 = Ci[k];\n        j1 = j0+p;\n        Ci[k+1] = j1;\n        for(j=p-1;j!==-1;--j) {\n            b = j0+j;\n            i = xj[j];\n            Cj[b] = i;\n            Cv[b] = x[i];\n            flags[i] = 0;\n            x[i] = 0;\n        }\n        Ci[k+1] = Ci[k]+p;\n    }\n    return C;\n}\n\nnumeric.ccsLUPSolve = function ccsLUPSolve(LUP,B) {\n    var L = LUP.L, U = LUP.U, P = LUP.P;\n    var Bi = B[0];\n    var flag = false;\n    if(typeof Bi !== \"object\") { B = [[0,B.length],numeric.linspace(0,B.length-1),B]; Bi = B[0]; flag = true; }\n    var Bj = B[1], Bv = B[2];\n    var n = L[0].length-1, m = Bi.length-1;\n    var x = numeric.rep([n],0), xj = Array(n);\n    var b = numeric.rep([n],0), bj = Array(n);\n    var Xi = numeric.rep([m+1],0), Xj = [], Xv = [];\n    var sol = numeric.ccsTSolve;\n    var i,j,j0,j1,k,J,N=0;\n    for(i=0;i<m;++i) {\n        k = 0;\n        j0 = Bi[i];\n        j1 = Bi[i+1];\n        for(j=j0;j<j1;++j) { \n            J = LUP.Pinv[Bj[j]];\n            bj[k] = J;\n            b[J] = Bv[j];\n            ++k;\n        }\n        bj.length = k;\n        sol(L,b,x,bj,xj);\n        for(j=bj.length-1;j!==-1;--j) b[bj[j]] = 0;\n        sol(U,x,b,xj,bj);\n        if(flag) return b;\n        for(j=xj.length-1;j!==-1;--j) x[xj[j]] = 0;\n        for(j=bj.length-1;j!==-1;--j) {\n            J = bj[j];\n            Xj[N] = J;\n            Xv[N] = b[J];\n            b[J] = 0;\n            ++N;\n        }\n        Xi[i+1] = N;\n    }\n    return [Xi,Xj,Xv];\n}\n\nnumeric.ccsbinop = function ccsbinop(body,setup) {\n    if(typeof setup === \"undefined\") setup='';\n    return Function('X','Y',\n            'var Xi = X[0], Xj = X[1], Xv = X[2];\\n'+\n            'var Yi = Y[0], Yj = Y[1], Yv = Y[2];\\n'+\n            'var n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\\n'+\n            'var Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\\n'+\n            'var x = numeric.rep([m],0),y = numeric.rep([m],0);\\n'+\n            'var xk,yk,zk;\\n'+\n            'var i,j,j0,j1,k,p=0;\\n'+\n            setup+\n            'for(i=0;i<n;++i) {\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Xj[j];\\n'+\n            '    x[k] = 1;\\n'+\n            '    Zj[p] = k;\\n'+\n            '    ++p;\\n'+\n            '  }\\n'+\n            '  j0 = Yi[i]; j1 = Yi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Yj[j];\\n'+\n            '    y[k] = Yv[j];\\n'+\n            '    if(x[k] === 0) {\\n'+\n            '      Zj[p] = k;\\n'+\n            '      ++p;\\n'+\n            '    }\\n'+\n            '  }\\n'+\n            '  Zi[i+1] = p;\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\\n'+\n            '  j0 = Zi[i]; j1 = Zi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Zj[j];\\n'+\n            '    xk = x[k];\\n'+\n            '    yk = y[k];\\n'+\n            body+'\\n'+\n            '    Zv[j] = zk;\\n'+\n            '  }\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\\n'+\n            '  j0 = Yi[i]; j1 = Yi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\\n'+\n            '}\\n'+\n            'return [Zi,Zj,Zv];'\n            );\n};\n\n(function() {\n    var k,A,B,C;\n    for(k in numeric.ops2) {\n        if(isFinite(eval('1'+numeric.ops2[k]+'0'))) A = '[Y[0],Y[1],numeric.'+k+'(X,Y[2])]';\n        else A = 'NaN';\n        if(isFinite(eval('0'+numeric.ops2[k]+'1'))) B = '[X[0],X[1],numeric.'+k+'(X[2],Y)]';\n        else B = 'NaN';\n        if(isFinite(eval('1'+numeric.ops2[k]+'0')) && isFinite(eval('0'+numeric.ops2[k]+'1'))) C = 'numeric.ccs'+k+'MM(X,Y)';\n        else C = 'NaN';\n        numeric['ccs'+k+'MM'] = numeric.ccsbinop('zk = xk '+numeric.ops2[k]+'yk;');\n        numeric['ccs'+k] = Function('X','Y',\n                'if(typeof X === \"number\") return '+A+';\\n'+\n                'if(typeof Y === \"number\") return '+B+';\\n'+\n                'return '+C+';\\n'\n                );\n    }\n}());\n\nnumeric.ccsScatter = function ccsScatter(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var n = numeric.sup(Aj)+1,m=Ai.length;\n    var Ri = numeric.rep([n],0),Rj=Array(m), Rv = Array(m);\n    var counts = numeric.rep([n],0),i;\n    for(i=0;i<m;++i) counts[Aj[i]]++;\n    for(i=0;i<n;++i) Ri[i+1] = Ri[i] + counts[i];\n    var ptr = Ri.slice(0),k,Aii;\n    for(i=0;i<m;++i) {\n        Aii = Aj[i];\n        k = ptr[Aii];\n        Rj[k] = Ai[i];\n        Rv[k] = Av[i];\n        ptr[Aii]=ptr[Aii]+1;\n    }\n    return [Ri,Rj,Rv];\n}\n\nnumeric.ccsGather = function ccsGather(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var n = Ai.length-1,m = Aj.length;\n    var Ri = Array(m), Rj = Array(m), Rv = Array(m);\n    var i,j,j0,j1,p;\n    p=0;\n    for(i=0;i<n;++i) {\n        j0 = Ai[i];\n        j1 = Ai[i+1];\n        for(j=j0;j!==j1;++j) {\n            Rj[p] = i;\n            Ri[p] = Aj[j];\n            Rv[p] = Av[j];\n            ++p;\n        }\n    }\n    return [Ri,Rj,Rv];\n}\n\n// The following sparse linear algebra routines are deprecated.\n\nnumeric.sdim = function dim(A,ret,k) {\n    if(typeof ret === \"undefined\") { ret = []; }\n    if(typeof A !== \"object\") return ret;\n    if(typeof k === \"undefined\") { k=0; }\n    if(!(k in ret)) { ret[k] = 0; }\n    if(A.length > ret[k]) ret[k] = A.length;\n    var i;\n    for(i in A) {\n        if(A.hasOwnProperty(i)) dim(A[i],ret,k+1);\n    }\n    return ret;\n};\n\nnumeric.sclone = function clone(A,k,n) {\n    if(typeof k === \"undefined\") { k=0; }\n    if(typeof n === \"undefined\") { n = numeric.sdim(A).length; }\n    var i,ret = Array(A.length);\n    if(k === n-1) {\n        for(i in A) { if(A.hasOwnProperty(i)) ret[i] = A[i]; }\n        return ret;\n    }\n    for(i in A) {\n        if(A.hasOwnProperty(i)) ret[i] = clone(A[i],k+1,n);\n    }\n    return ret;\n}\n\nnumeric.sdiag = function diag(d) {\n    var n = d.length,i,ret = Array(n),i1,i2,i3;\n    for(i=n-1;i>=1;i-=2) {\n        i1 = i-1;\n        ret[i] = []; ret[i][i] = d[i];\n        ret[i1] = []; ret[i1][i1] = d[i1];\n    }\n    if(i===0) { ret[0] = []; ret[0][0] = d[i]; }\n    return ret;\n}\n\nnumeric.sidentity = function identity(n) { return numeric.sdiag(numeric.rep([n],1)); }\n\nnumeric.stranspose = function transpose(A) {\n    var ret = [], n = A.length, i,j,Ai;\n    for(i in A) {\n        if(!(A.hasOwnProperty(i))) continue;\n        Ai = A[i];\n        for(j in Ai) {\n            if(!(Ai.hasOwnProperty(j))) continue;\n            if(typeof ret[j] !== \"object\") { ret[j] = []; }\n            ret[j][i] = Ai[j];\n        }\n    }\n    return ret;\n}\n\nnumeric.sLUP = function LUP(A,tol) {\n    throw new Error(\"The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.\");\n};\n\nnumeric.sdotMM = function dotMM(A,B) {\n    var p = A.length, q = B.length, BT = numeric.stranspose(B), r = BT.length, Ai, BTk;\n    var i,j,k,accum;\n    var ret = Array(p),reti;\n    for(i=p-1;i>=0;i--) {\n        reti = [];\n        Ai = A[i];\n        for(k=r-1;k>=0;k--) {\n            accum = 0;\n            BTk = BT[k];\n            for(j in Ai) {\n                if(!(Ai.hasOwnProperty(j))) continue;\n                if(j in BTk) { accum += Ai[j]*BTk[j]; }\n            }\n            if(accum) reti[k] = accum;\n        }\n        ret[i] = reti;\n    }\n    return ret;\n}\n\nnumeric.sdotMV = function dotMV(A,x) {\n    var p = A.length, Ai, i,j;\n    var ret = Array(p), accum;\n    for(i=p-1;i>=0;i--) {\n        Ai = A[i];\n        accum = 0;\n        for(j in Ai) {\n            if(!(Ai.hasOwnProperty(j))) continue;\n            if(x[j]) accum += Ai[j]*x[j];\n        }\n        if(accum) ret[i] = accum;\n    }\n    return ret;\n}\n\nnumeric.sdotVM = function dotMV(x,A) {\n    var i,j,Ai,alpha;\n    var ret = [], accum;\n    for(i in x) {\n        if(!x.hasOwnProperty(i)) continue;\n        Ai = A[i];\n        alpha = x[i];\n        for(j in Ai) {\n            if(!Ai.hasOwnProperty(j)) continue;\n            if(!ret[j]) { ret[j] = 0; }\n            ret[j] += alpha*Ai[j];\n        }\n    }\n    return ret;\n}\n\nnumeric.sdotVV = function dotVV(x,y) {\n    var i,ret=0;\n    for(i in x) { if(x[i] && y[i]) ret+= x[i]*y[i]; }\n    return ret;\n}\n\nnumeric.sdot = function dot(A,B) {\n    var m = numeric.sdim(A).length, n = numeric.sdim(B).length;\n    var k = m*1000+n;\n    switch(k) {\n    case 0: return A*B;\n    case 1001: return numeric.sdotVV(A,B);\n    case 2001: return numeric.sdotMV(A,B);\n    case 1002: return numeric.sdotVM(A,B);\n    case 2002: return numeric.sdotMM(A,B);\n    default: throw new Error('numeric.sdot not implemented for tensors of order '+m+' and '+n);\n    }\n}\n\nnumeric.sscatter = function scatter(V) {\n    var n = V[0].length, Vij, i, j, m = V.length, A = [], Aj;\n    for(i=n-1;i>=0;--i) {\n        if(!V[m-1][i]) continue;\n        Aj = A;\n        for(j=0;j<m-2;j++) {\n            Vij = V[j][i];\n            if(!Aj[Vij]) Aj[Vij] = [];\n            Aj = Aj[Vij];\n        }\n        Aj[V[j][i]] = V[j+1][i];\n    }\n    return A;\n}\n\nnumeric.sgather = function gather(A,ret,k) {\n    if(typeof ret === \"undefined\") ret = [];\n    if(typeof k === \"undefined\") k = [];\n    var n,i,Ai;\n    n = k.length;\n    for(i in A) {\n        if(A.hasOwnProperty(i)) {\n            k[n] = parseInt(i);\n            Ai = A[i];\n            if(typeof Ai === \"number\") {\n                if(Ai) {\n                    if(ret.length === 0) {\n                        for(i=n+1;i>=0;--i) ret[i] = [];\n                    }\n                    for(i=n;i>=0;--i) ret[i].push(k[i]);\n                    ret[n+1].push(Ai);\n                }\n            } else gather(Ai,ret,k);\n        }\n    }\n    if(k.length>n) k.pop();\n    return ret;\n}\n\n// 6. Coordinate matrices\nnumeric.cLU = function LU(A) {\n    var I = A[0], J = A[1], V = A[2];\n    var p = I.length, m=0, i,j,k,a,b,c;\n    for(i=0;i<p;i++) if(I[i]>m) m=I[i];\n    m++;\n    var L = Array(m), U = Array(m), left = numeric.rep([m],Infinity), right = numeric.rep([m],-Infinity);\n    var Ui, Uj,alpha;\n    for(k=0;k<p;k++) {\n        i = I[k];\n        j = J[k];\n        if(j<left[i]) left[i] = j;\n        if(j>right[i]) right[i] = j;\n    }\n    for(i=0;i<m-1;i++) { if(right[i] > right[i+1]) right[i+1] = right[i]; }\n    for(i=m-1;i>=1;i--) { if(left[i]<left[i-1]) left[i-1] = left[i]; }\n    var countL = 0, countU = 0;\n    for(i=0;i<m;i++) {\n        U[i] = numeric.rep([right[i]-left[i]+1],0);\n        L[i] = numeric.rep([i-left[i]],0);\n        countL += i-left[i]+1;\n        countU += right[i]-i+1;\n    }\n    for(k=0;k<p;k++) { i = I[k]; U[i][J[k]-left[i]] = V[k]; }\n    for(i=0;i<m-1;i++) {\n        a = i-left[i];\n        Ui = U[i];\n        for(j=i+1;left[j]<=i && j<m;j++) {\n            b = i-left[j];\n            c = right[i]-i;\n            Uj = U[j];\n            alpha = Uj[b]/Ui[a];\n            if(alpha) {\n                for(k=1;k<=c;k++) { Uj[k+b] -= alpha*Ui[k+a]; }\n                L[j][i-left[j]] = alpha;\n            }\n        }\n    }\n    var Ui = [], Uj = [], Uv = [], Li = [], Lj = [], Lv = [];\n    var p,q,foo;\n    p=0; q=0;\n    for(i=0;i<m;i++) {\n        a = left[i];\n        b = right[i];\n        foo = U[i];\n        for(j=i;j<=b;j++) {\n            if(foo[j-a]) {\n                Ui[p] = i;\n                Uj[p] = j;\n                Uv[p] = foo[j-a];\n                p++;\n            }\n        }\n        foo = L[i];\n        for(j=a;j<i;j++) {\n            if(foo[j-a]) {\n                Li[q] = i;\n                Lj[q] = j;\n                Lv[q] = foo[j-a];\n                q++;\n            }\n        }\n        Li[q] = i;\n        Lj[q] = i;\n        Lv[q] = 1;\n        q++;\n    }\n    return {U:[Ui,Uj,Uv], L:[Li,Lj,Lv]};\n};\n\nnumeric.cLUsolve = function LUsolve(lu,b) {\n    var L = lu.L, U = lu.U, ret = numeric.clone(b);\n    var Li = L[0], Lj = L[1], Lv = L[2];\n    var Ui = U[0], Uj = U[1], Uv = U[2];\n    var p = Ui.length, q = Li.length;\n    var m = ret.length,i,j,k;\n    k = 0;\n    for(i=0;i<m;i++) {\n        while(Lj[k] < i) {\n            ret[i] -= Lv[k]*ret[Lj[k]];\n            k++;\n        }\n        k++;\n    }\n    k = p-1;\n    for(i=m-1;i>=0;i--) {\n        while(Uj[k] > i) {\n            ret[i] -= Uv[k]*ret[Uj[k]];\n            k--;\n        }\n        ret[i] /= Uv[k];\n        k--;\n    }\n    return ret;\n};\n\nnumeric.cgrid = function grid(n,shape) {\n    if(typeof n === \"number\") n = [n,n];\n    var ret = numeric.rep(n,-1);\n    var i,j,count;\n    if(typeof shape !== \"function\") {\n        switch(shape) {\n        case 'L':\n            shape = function(i,j) { return (i>=n[0]/2 || j<n[1]/2); }\n            break;\n        default:\n            shape = function(i,j) { return true; };\n            break;\n        }\n    }\n    count=0;\n    for(i=1;i<n[0]-1;i++) for(j=1;j<n[1]-1;j++) \n        if(shape(i,j)) {\n            ret[i][j] = count;\n            count++;\n        }\n    return ret;\n}\n\nnumeric.cdelsq = function delsq(g) {\n    var dir = [[-1,0],[0,-1],[0,1],[1,0]];\n    var s = numeric.dim(g), m = s[0], n = s[1], i,j,k,p,q;\n    var Li = [], Lj = [], Lv = [];\n    for(i=1;i<m-1;i++) for(j=1;j<n-1;j++) {\n        if(g[i][j]<0) continue;\n        for(k=0;k<4;k++) {\n            p = i+dir[k][0];\n            q = j+dir[k][1];\n            if(g[p][q]<0) continue;\n            Li.push(g[i][j]);\n            Lj.push(g[p][q]);\n            Lv.push(-1);\n        }\n        Li.push(g[i][j]);\n        Lj.push(g[i][j]);\n        Lv.push(4);\n    }\n    return [Li,Lj,Lv];\n}\n\nnumeric.cdotMV = function dotMV(A,x) {\n    var ret, Ai = A[0], Aj = A[1], Av = A[2],k,p=Ai.length,N;\n    N=0;\n    for(k=0;k<p;k++) { if(Ai[k]>N) N = Ai[k]; }\n    N++;\n    ret = numeric.rep([N],0);\n    for(k=0;k<p;k++) { ret[Ai[k]]+=Av[k]*x[Aj[k]]; }\n    return ret;\n}\n\n// 7. Splines\n\nnumeric.Spline = function Spline(x,yl,yr,kl,kr) { this.x = x; this.yl = yl; this.yr = yr; this.kl = kl; this.kr = kr; }\nnumeric.Spline.prototype._at = function _at(x1,p) {\n    var x = this.x;\n    var yl = this.yl;\n    var yr = this.yr;\n    var kl = this.kl;\n    var kr = this.kr;\n    var x1,a,b,t;\n    var add = numeric.add, sub = numeric.sub, mul = numeric.mul;\n    a = sub(mul(kl[p],x[p+1]-x[p]),sub(yr[p+1],yl[p]));\n    b = add(mul(kr[p+1],x[p]-x[p+1]),sub(yr[p+1],yl[p]));\n    t = (x1-x[p])/(x[p+1]-x[p]);\n    var s = t*(1-t);\n    return add(add(add(mul(1-t,yl[p]),mul(t,yr[p+1])),mul(a,s*(1-t))),mul(b,s*t));\n}\nnumeric.Spline.prototype.at = function at(x0) {\n    if(typeof x0 === \"number\") {\n        var x = this.x;\n        var n = x.length;\n        var p,q,mid,floor = Math.floor,a,b,t;\n        p = 0;\n        q = n-1;\n        while(q-p>1) {\n            mid = floor((p+q)/2);\n            if(x[mid] <= x0) p = mid;\n            else q = mid;\n        }\n        return this._at(x0,p);\n    }\n    var n = x0.length, i, ret = Array(n);\n    for(i=n-1;i!==-1;--i) ret[i] = this.at(x0[i]);\n    return ret;\n}\nnumeric.Spline.prototype.diff = function diff() {\n    var x = this.x;\n    var yl = this.yl;\n    var yr = this.yr;\n    var kl = this.kl;\n    var kr = this.kr;\n    var n = yl.length;\n    var i,dx,dy;\n    var zl = kl, zr = kr, pl = Array(n), pr = Array(n);\n    var add = numeric.add, mul = numeric.mul, div = numeric.div, sub = numeric.sub;\n    for(i=n-1;i!==-1;--i) {\n        dx = x[i+1]-x[i];\n        dy = sub(yr[i+1],yl[i]);\n        pl[i] = div(add(mul(dy, 6),mul(kl[i],-4*dx),mul(kr[i+1],-2*dx)),dx*dx);\n        pr[i+1] = div(add(mul(dy,-6),mul(kl[i], 2*dx),mul(kr[i+1], 4*dx)),dx*dx);\n    }\n    return new numeric.Spline(x,zl,zr,pl,pr);\n}\nnumeric.Spline.prototype.roots = function roots() {\n    function sqr(x) { return x*x; }\n    function heval(y0,y1,k0,k1,x) {\n        var A = k0*2-(y1-y0);\n        var B = -k1*2+(y1-y0);\n        var t = (x+1)*0.5;\n        var s = t*(1-t);\n        return (1-t)*y0+t*y1+A*s*(1-t)+B*s*t;\n    }\n    var ret = [];\n    var x = this.x, yl = this.yl, yr = this.yr, kl = this.kl, kr = this.kr;\n    if(typeof yl[0] === \"number\") {\n        yl = [yl];\n        yr = [yr];\n        kl = [kl];\n        kr = [kr];\n    }\n    var m = yl.length,n=x.length-1,i,j,k,y,s,t;\n    var ai,bi,ci,di, ret = Array(m),ri,k0,k1,y0,y1,A,B,D,dx,cx,stops,z0,z1,zm,t0,t1,tm;\n    var sqrt = Math.sqrt;\n    for(i=0;i!==m;++i) {\n        ai = yl[i];\n        bi = yr[i];\n        ci = kl[i];\n        di = kr[i];\n        ri = [];\n        for(j=0;j!==n;j++) {\n            if(j>0 && bi[j]*ai[j]<0) ri.push(x[j]);\n            dx = (x[j+1]-x[j]);\n            cx = x[j];\n            y0 = ai[j];\n            y1 = bi[j+1];\n            k0 = ci[j]/dx;\n            k1 = di[j+1]/dx;\n            D = sqr(k0-k1+3*(y0-y1)) + 12*k1*y0;\n            A = k1+3*y0+2*k0-3*y1;\n            B = 3*(k1+k0+2*(y0-y1));\n            if(D<=0) {\n                z0 = A/B;\n                if(z0>x[j] && z0<x[j+1]) stops = [x[j],z0,x[j+1]];\n                else stops = [x[j],x[j+1]];\n            } else {\n                z0 = (A-sqrt(D))/B;\n                z1 = (A+sqrt(D))/B;\n                stops = [x[j]];\n                if(z0>x[j] && z0<x[j+1]) stops.push(z0);\n                if(z1>x[j] && z1<x[j+1]) stops.push(z1);\n                stops.push(x[j+1]);\n            }\n            t0 = stops[0];\n            z0 = this._at(t0,j);\n            for(k=0;k<stops.length-1;k++) {\n                t1 = stops[k+1];\n                z1 = this._at(t1,j);\n                if(z0 === 0) {\n                    ri.push(t0); \n                    t0 = t1;\n                    z0 = z1;\n                    continue;\n                }\n                if(z1 === 0 || z0*z1>0) {\n                    t0 = t1;\n                    z0 = z1;\n                    continue;\n                }\n                var side = 0;\n                while(1) {\n                    tm = (z0*t1-z1*t0)/(z0-z1);\n                    if(tm <= t0 || tm >= t1) { break; }\n                    zm = this._at(tm,j);\n                    if(zm*z1>0) {\n                        t1 = tm;\n                        z1 = zm;\n                        if(side === -1) z0*=0.5;\n                        side = -1;\n                    } else if(zm*z0>0) {\n                        t0 = tm;\n                        z0 = zm;\n                        if(side === 1) z1*=0.5;\n                        side = 1;\n                    } else break;\n                }\n                ri.push(tm);\n                t0 = stops[k+1];\n                z0 = this._at(t0, j);\n            }\n            if(z1 === 0) ri.push(t1);\n        }\n        ret[i] = ri;\n    }\n    if(typeof this.yl[0] === \"number\") return ret[0];\n    return ret;\n}\nnumeric.spline = function spline(x,y,k1,kn) {\n    var n = x.length, b = [], dx = [], dy = [];\n    var i;\n    var sub = numeric.sub,mul = numeric.mul,add = numeric.add;\n    for(i=n-2;i>=0;i--) { dx[i] = x[i+1]-x[i]; dy[i] = sub(y[i+1],y[i]); }\n    if(typeof k1 === \"string\" || typeof kn === \"string\") { \n        k1 = kn = \"periodic\";\n    }\n    // Build sparse tridiagonal system\n    var T = [[],[],[]];\n    switch(typeof k1) {\n    case \"undefined\":\n        b[0] = mul(3/(dx[0]*dx[0]),dy[0]);\n        T[0].push(0,0);\n        T[1].push(0,1);\n        T[2].push(2/dx[0],1/dx[0]);\n        break;\n    case \"string\":\n        b[0] = add(mul(3/(dx[n-2]*dx[n-2]),dy[n-2]),mul(3/(dx[0]*dx[0]),dy[0]));\n        T[0].push(0,0,0);\n        T[1].push(n-2,0,1);\n        T[2].push(1/dx[n-2],2/dx[n-2]+2/dx[0],1/dx[0]);\n        break;\n    default:\n        b[0] = k1;\n        T[0].push(0);\n        T[1].push(0);\n        T[2].push(1);\n        break;\n    }\n    for(i=1;i<n-1;i++) {\n        b[i] = add(mul(3/(dx[i-1]*dx[i-1]),dy[i-1]),mul(3/(dx[i]*dx[i]),dy[i]));\n        T[0].push(i,i,i);\n        T[1].push(i-1,i,i+1);\n        T[2].push(1/dx[i-1],2/dx[i-1]+2/dx[i],1/dx[i]);\n    }\n    switch(typeof kn) {\n    case \"undefined\":\n        b[n-1] = mul(3/(dx[n-2]*dx[n-2]),dy[n-2]);\n        T[0].push(n-1,n-1);\n        T[1].push(n-2,n-1);\n        T[2].push(1/dx[n-2],2/dx[n-2]);\n        break;\n    case \"string\":\n        T[1][T[1].length-1] = 0;\n        break;\n    default:\n        b[n-1] = kn;\n        T[0].push(n-1);\n        T[1].push(n-1);\n        T[2].push(1);\n        break;\n    }\n    if(typeof b[0] !== \"number\") b = numeric.transpose(b);\n    else b = [b];\n    var k = Array(b.length);\n    if(typeof k1 === \"string\") {\n        for(i=k.length-1;i!==-1;--i) {\n            k[i] = numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(T)),b[i]);\n            k[i][n-1] = k[i][0];\n        }\n    } else {\n        for(i=k.length-1;i!==-1;--i) {\n            k[i] = numeric.cLUsolve(numeric.cLU(T),b[i]);\n        }\n    }\n    if(typeof y[0] === \"number\") k = k[0];\n    else k = numeric.transpose(k);\n    return new numeric.Spline(x,y,y,k,k);\n}\n\n// 8. FFT\nnumeric.fftpow2 = function fftpow2(x,y) {\n    var n = x.length;\n    if(n === 1) return;\n    var cos = Math.cos, sin = Math.sin, i,j;\n    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);\n    j = n/2;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        xo[j] = x[i];\n        yo[j] = y[i];\n        --i;\n        xe[j] = x[i];\n        ye[j] = y[i];\n    }\n    fftpow2(xe,ye);\n    fftpow2(xo,yo);\n    j = n/2;\n    var t,k = (-6.2831853071795864769252867665590057683943387987502116419/n),ci,si;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        if(j === -1) j = n/2-1;\n        t = k*i;\n        ci = cos(t);\n        si = sin(t);\n        x[i] = xe[j] + ci*xo[j] - si*yo[j];\n        y[i] = ye[j] + ci*yo[j] + si*xo[j];\n    }\n}\nnumeric._ifftpow2 = function _ifftpow2(x,y) {\n    var n = x.length;\n    if(n === 1) return;\n    var cos = Math.cos, sin = Math.sin, i,j;\n    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);\n    j = n/2;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        xo[j] = x[i];\n        yo[j] = y[i];\n        --i;\n        xe[j] = x[i];\n        ye[j] = y[i];\n    }\n    _ifftpow2(xe,ye);\n    _ifftpow2(xo,yo);\n    j = n/2;\n    var t,k = (6.2831853071795864769252867665590057683943387987502116419/n),ci,si;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        if(j === -1) j = n/2-1;\n        t = k*i;\n        ci = cos(t);\n        si = sin(t);\n        x[i] = xe[j] + ci*xo[j] - si*yo[j];\n        y[i] = ye[j] + ci*yo[j] + si*xo[j];\n    }\n}\nnumeric.ifftpow2 = function ifftpow2(x,y) {\n    numeric._ifftpow2(x,y);\n    numeric.diveq(x,x.length);\n    numeric.diveq(y,y.length);\n}\nnumeric.convpow2 = function convpow2(ax,ay,bx,by) {\n    numeric.fftpow2(ax,ay);\n    numeric.fftpow2(bx,by);\n    var i,n = ax.length,axi,bxi,ayi,byi;\n    for(i=n-1;i!==-1;--i) {\n        axi = ax[i]; ayi = ay[i]; bxi = bx[i]; byi = by[i];\n        ax[i] = axi*bxi-ayi*byi;\n        ay[i] = axi*byi+ayi*bxi;\n    }\n    numeric.ifftpow2(ax,ay);\n}\nnumeric.T.prototype.fft = function fft() {\n    var x = this.x, y = this.y;\n    var n = x.length, log = Math.log, log2 = log(2),\n        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);\n    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;\n    var k, c = (-3.141592653589793238462643383279502884197169399375105820/n),t;\n    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);\n    for(k=0;k<n;k++) a[k] = x[k];\n    if(typeof y !== \"undefined\") for(k=0;k<n;k++) b[k] = y[k];\n    cx[0] = 1;\n    for(k=1;k<=m/2;k++) {\n        t = c*k*k;\n        cx[k] = cos(t);\n        cy[k] = sin(t);\n        cx[m-k] = cos(t);\n        cy[m-k] = sin(t)\n    }\n    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);\n    X = X.mul(Y);\n    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));\n    X = X.mul(Y);\n    X.x.length = n;\n    X.y.length = n;\n    return X;\n}\nnumeric.T.prototype.ifft = function ifft() {\n    var x = this.x, y = this.y;\n    var n = x.length, log = Math.log, log2 = log(2),\n        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);\n    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;\n    var k, c = (3.141592653589793238462643383279502884197169399375105820/n),t;\n    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);\n    for(k=0;k<n;k++) a[k] = x[k];\n    if(typeof y !== \"undefined\") for(k=0;k<n;k++) b[k] = y[k];\n    cx[0] = 1;\n    for(k=1;k<=m/2;k++) {\n        t = c*k*k;\n        cx[k] = cos(t);\n        cy[k] = sin(t);\n        cx[m-k] = cos(t);\n        cy[m-k] = sin(t)\n    }\n    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);\n    X = X.mul(Y);\n    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));\n    X = X.mul(Y);\n    X.x.length = n;\n    X.y.length = n;\n    return X.div(n);\n}\n\n//9. Unconstrained optimization\nnumeric.gradient = function gradient(f,x) {\n    var n = x.length;\n    var f0 = f(x);\n    if(isNaN(f0)) throw new Error('gradient: f(x) is a NaN!');\n    var max = Math.max;\n    var i,x0 = numeric.clone(x),f1,f2, J = Array(n);\n    var div = numeric.div, sub = numeric.sub,errest,roundoff,max = Math.max,eps = 1e-3,abs = Math.abs, min = Math.min;\n    var t0,t1,t2,it=0,d1,d2,N;\n    for(i=0;i<n;i++) {\n        var h = max(1e-6*f0,1e-8);\n        while(1) {\n            ++it;\n            if(it>20) { throw new Error(\"Numerical gradient fails\"); }\n            x0[i] = x[i]+h;\n            f1 = f(x0);\n            x0[i] = x[i]-h;\n            f2 = f(x0);\n            x0[i] = x[i];\n            if(isNaN(f1) || isNaN(f2)) { h/=16; continue; }\n            J[i] = (f1-f2)/(2*h);\n            t0 = x[i]-h;\n            t1 = x[i];\n            t2 = x[i]+h;\n            d1 = (f1-f0)/h;\n            d2 = (f0-f2)/h;\n            N = max(abs(J[i]),abs(f0),abs(f1),abs(f2),abs(t0),abs(t1),abs(t2),1e-8);\n            errest = min(max(abs(d1-J[i]),abs(d2-J[i]),abs(d1-d2))/N,h/N);\n            if(errest>eps) { h/=16; }\n            else break;\n            }\n    }\n    return J;\n}\n\nnumeric.uncmin = function uncmin(f,x0,tol,gradient,maxit,callback,options) {\n    var grad = numeric.gradient;\n    if(typeof options === \"undefined\") { options = {}; }\n    if(typeof tol === \"undefined\") { tol = 1e-8; }\n    if(typeof gradient === \"undefined\") { gradient = function(x) { return grad(f,x); }; }\n    if(typeof maxit === \"undefined\") maxit = 1000;\n    x0 = numeric.clone(x0);\n    var n = x0.length;\n    var f0 = f(x0),f1,df0;\n    if(isNaN(f0)) throw new Error('uncmin: f(x0) is a NaN!');\n    var max = Math.max, norm2 = numeric.norm2;\n    tol = max(tol,numeric.epsilon);\n    var step,g0,g1,H1 = options.Hinv || numeric.identity(n);\n    var dot = numeric.dot, inv = numeric.inv, sub = numeric.sub, add = numeric.add, ten = numeric.tensor, div = numeric.div, mul = numeric.mul;\n    var all = numeric.all, isfinite = numeric.isFinite, neg = numeric.neg;\n    var it=0,i,s,x1,y,Hy,Hs,ys,i0,t,nstep,t1,t2;\n    var msg = \"\";\n    g0 = gradient(x0);\n    while(it<maxit) {\n        if(typeof callback === \"function\") { if(callback(it,x0,f0,g0,H1)) { msg = \"Callback returned true\"; break; } }\n        if(!all(isfinite(g0))) { msg = \"Gradient has Infinity or NaN\"; break; }\n        step = neg(dot(H1,g0));\n        if(!all(isfinite(step))) { msg = \"Search direction has Infinity or NaN\"; break; }\n        nstep = norm2(step);\n        if(nstep < tol) { msg=\"Newton step smaller than tol\"; break; }\n        t = 1;\n        df0 = dot(g0,step);\n        // line search\n        x1 = x0;\n        while(it < maxit) {\n            if(t*nstep < tol) { break; }\n            s = mul(step,t);\n            x1 = add(x0,s);\n            f1 = f(x1);\n            if(f1-f0 >= 0.1*t*df0 || isNaN(f1)) {\n                t *= 0.5;\n                ++it;\n                continue;\n            }\n            break;\n        }\n        if(t*nstep < tol) { msg = \"Line search step size smaller than tol\"; break; }\n        if(it === maxit) { msg = \"maxit reached during line search\"; break; }\n        g1 = gradient(x1);\n        y = sub(g1,g0);\n        ys = dot(y,s);\n        Hy = dot(H1,y);\n        H1 = sub(add(H1,\n                mul(\n                        (ys+dot(y,Hy))/(ys*ys),\n                        ten(s,s)    )),\n                div(add(ten(Hy,s),ten(s,Hy)),ys));\n        x0 = x1;\n        f0 = f1;\n        g0 = g1;\n        ++it;\n    }\n    return {solution: x0, f: f0, gradient: g0, invHessian: H1, iterations:it, message: msg};\n}\n\n// 10. Ode solver (Dormand-Prince)\nnumeric.Dopri = function Dopri(x,y,f,ymid,iterations,msg,events) {\n    this.x = x;\n    this.y = y;\n    this.f = f;\n    this.ymid = ymid;\n    this.iterations = iterations;\n    this.events = events;\n    this.message = msg;\n}\nnumeric.Dopri.prototype._at = function _at(xi,j) {\n    function sqr(x) { return x*x; }\n    var sol = this;\n    var xs = sol.x;\n    var ys = sol.y;\n    var k1 = sol.f;\n    var ymid = sol.ymid;\n    var n = xs.length;\n    var x0,x1,xh,y0,y1,yh,xi;\n    var floor = Math.floor,h;\n    var c = 0.5;\n    var add = numeric.add, mul = numeric.mul,sub = numeric.sub, p,q,w;\n    x0 = xs[j];\n    x1 = xs[j+1];\n    y0 = ys[j];\n    y1 = ys[j+1];\n    h  = x1-x0;\n    xh = x0+c*h;\n    yh = ymid[j];\n    p = sub(k1[j  ],mul(y0,1/(x0-xh)+2/(x0-x1)));\n    q = sub(k1[j+1],mul(y1,1/(x1-xh)+2/(x1-x0)));\n    w = [sqr(xi - x1) * (xi - xh) / sqr(x0 - x1) / (x0 - xh),\n         sqr(xi - x0) * sqr(xi - x1) / sqr(x0 - xh) / sqr(x1 - xh),\n         sqr(xi - x0) * (xi - xh) / sqr(x1 - x0) / (x1 - xh),\n         (xi - x0) * sqr(xi - x1) * (xi - xh) / sqr(x0-x1) / (x0 - xh),\n         (xi - x1) * sqr(xi - x0) * (xi - xh) / sqr(x0-x1) / (x1 - xh)];\n    return add(add(add(add(mul(y0,w[0]),\n                           mul(yh,w[1])),\n                           mul(y1,w[2])),\n                           mul( p,w[3])),\n                           mul( q,w[4]));\n}\nnumeric.Dopri.prototype.at = function at(x) {\n    var i,j,k,floor = Math.floor;\n    if(typeof x !== \"number\") {\n        var n = x.length, ret = Array(n);\n        for(i=n-1;i!==-1;--i) {\n            ret[i] = this.at(x[i]);\n        }\n        return ret;\n    }\n    var x0 = this.x;\n    i = 0; j = x0.length-1;\n    while(j-i>1) {\n        k = floor(0.5*(i+j));\n        if(x0[k] <= x) i = k;\n        else j = k;\n    }\n    return this._at(x,i);\n}\n\nnumeric.dopri = function dopri(x0,x1,y0,f,tol,maxit,event) {\n    if(typeof tol === \"undefined\") { tol = 1e-6; }\n    if(typeof maxit === \"undefined\") { maxit = 1000; }\n    var xs = [x0], ys = [y0], k1 = [f(x0,y0)], k2,k3,k4,k5,k6,k7, ymid = [];\n    var A2 = 1/5;\n    var A3 = [3/40,9/40];\n    var A4 = [44/45,-56/15,32/9];\n    var A5 = [19372/6561,-25360/2187,64448/6561,-212/729];\n    var A6 = [9017/3168,-355/33,46732/5247,49/176,-5103/18656];\n    var b = [35/384,0,500/1113,125/192,-2187/6784,11/84];\n    var bm = [0.5*6025192743/30085553152,\n              0,\n              0.5*51252292925/65400821598,\n              0.5*-2691868925/45128329728,\n              0.5*187940372067/1594534317056,\n              0.5*-1776094331/19743644256,\n              0.5*11237099/235043384];\n    var c = [1/5,3/10,4/5,8/9,1,1];\n    var e = [-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40];\n    var i = 0,er,j;\n    var h = (x1-x0)/10;\n    var it = 0;\n    var add = numeric.add, mul = numeric.mul, y1,erinf;\n    var max = Math.max, min = Math.min, abs = Math.abs, norminf = numeric.norminf,pow = Math.pow;\n    var any = numeric.any, lt = numeric.lt, and = numeric.and, sub = numeric.sub;\n    var e0, e1, ev;\n    var ret = new numeric.Dopri(xs,ys,k1,ymid,-1,\"\");\n    if(typeof event === \"function\") e0 = event(x0,y0);\n    while(x0<x1 && it<maxit) {\n        ++it;\n        if(x0+h>x1) h = x1-x0;\n        k2 = f(x0+c[0]*h,                add(y0,mul(   A2*h,k1[i])));\n        k3 = f(x0+c[1]*h,            add(add(y0,mul(A3[0]*h,k1[i])),mul(A3[1]*h,k2)));\n        k4 = f(x0+c[2]*h,        add(add(add(y0,mul(A4[0]*h,k1[i])),mul(A4[1]*h,k2)),mul(A4[2]*h,k3)));\n        k5 = f(x0+c[3]*h,    add(add(add(add(y0,mul(A5[0]*h,k1[i])),mul(A5[1]*h,k2)),mul(A5[2]*h,k3)),mul(A5[3]*h,k4)));\n        k6 = f(x0+c[4]*h,add(add(add(add(add(y0,mul(A6[0]*h,k1[i])),mul(A6[1]*h,k2)),mul(A6[2]*h,k3)),mul(A6[3]*h,k4)),mul(A6[4]*h,k5)));\n        y1 = add(add(add(add(add(y0,mul(k1[i],h*b[0])),mul(k3,h*b[2])),mul(k4,h*b[3])),mul(k5,h*b[4])),mul(k6,h*b[5]));\n        k7 = f(x0+h,y1);\n        er = add(add(add(add(add(mul(k1[i],h*e[0]),mul(k3,h*e[2])),mul(k4,h*e[3])),mul(k5,h*e[4])),mul(k6,h*e[5])),mul(k7,h*e[6]));\n        if(typeof er === \"number\") erinf = abs(er);\n        else erinf = norminf(er);\n        if(erinf > tol) { // reject\n            h = 0.2*h*pow(tol/erinf,0.25);\n            if(x0+h === x0) {\n                ret.msg = \"Step size became too small\";\n                break;\n            }\n            continue;\n        }\n        ymid[i] = add(add(add(add(add(add(y0,\n                mul(k1[i],h*bm[0])),\n                mul(k3   ,h*bm[2])),\n                mul(k4   ,h*bm[3])),\n                mul(k5   ,h*bm[4])),\n                mul(k6   ,h*bm[5])),\n                mul(k7   ,h*bm[6]));\n        ++i;\n        xs[i] = x0+h;\n        ys[i] = y1;\n        k1[i] = k7;\n        if(typeof event === \"function\") {\n            var yi,xl = x0,xr = x0+0.5*h,xi;\n            e1 = event(xr,ymid[i-1]);\n            ev = and(lt(e0,0),lt(0,e1));\n            if(!any(ev)) { xl = xr; xr = x0+h; e0 = e1; e1 = event(xr,y1); ev = and(lt(e0,0),lt(0,e1)); }\n            if(any(ev)) {\n                var xc, yc, en,ei;\n                var side=0, sl = 1.0, sr = 1.0;\n                while(1) {\n                    if(typeof e0 === \"number\") xi = (sr*e1*xl-sl*e0*xr)/(sr*e1-sl*e0);\n                    else {\n                        xi = xr;\n                        for(j=e0.length-1;j!==-1;--j) {\n                            if(e0[j]<0 && e1[j]>0) xi = min(xi,(sr*e1[j]*xl-sl*e0[j]*xr)/(sr*e1[j]-sl*e0[j]));\n                        }\n                    }\n                    if(xi <= xl || xi >= xr) break;\n                    yi = ret._at(xi, i-1);\n                    ei = event(xi,yi);\n                    en = and(lt(e0,0),lt(0,ei));\n                    if(any(en)) {\n                        xr = xi;\n                        e1 = ei;\n                        ev = en;\n                        sr = 1.0;\n                        if(side === -1) sl *= 0.5;\n                        else sl = 1.0;\n                        side = -1;\n                    } else {\n                        xl = xi;\n                        e0 = ei;\n                        sl = 1.0;\n                        if(side === 1) sr *= 0.5;\n                        else sr = 1.0;\n                        side = 1;\n                    }\n                }\n                y1 = ret._at(0.5*(x0+xi),i-1);\n                ret.f[i] = f(xi,yi);\n                ret.x[i] = xi;\n                ret.y[i] = yi;\n                ret.ymid[i-1] = y1;\n                ret.events = ev;\n                ret.iterations = it;\n                return ret;\n            }\n        }\n        x0 += h;\n        y0 = y1;\n        e0 = e1;\n        h = min(0.8*h*pow(tol/erinf,0.25),4*h);\n    }\n    ret.iterations = it;\n    return ret;\n}\n\n// 11. Ax = b\nnumeric.LU = function(A, fast) {\n  fast = fast || false;\n\n  var abs = Math.abs;\n  var i, j, k, absAjk, Akk, Ak, Pk, Ai;\n  var max;\n  var n = A.length, n1 = n-1;\n  var P = new Array(n);\n  if(!fast) A = numeric.clone(A);\n\n  for (k = 0; k < n; ++k) {\n    Pk = k;\n    Ak = A[k];\n    max = abs(Ak[k]);\n    for (j = k + 1; j < n; ++j) {\n      absAjk = abs(A[j][k]);\n      if (max < absAjk) {\n        max = absAjk;\n        Pk = j;\n      }\n    }\n    P[k] = Pk;\n\n    if (Pk != k) {\n      A[k] = A[Pk];\n      A[Pk] = Ak;\n      Ak = A[k];\n    }\n\n    Akk = Ak[k];\n\n    for (i = k + 1; i < n; ++i) {\n      A[i][k] /= Akk;\n    }\n\n    for (i = k + 1; i < n; ++i) {\n      Ai = A[i];\n      for (j = k + 1; j < n1; ++j) {\n        Ai[j] -= Ai[k] * Ak[j];\n        ++j;\n        Ai[j] -= Ai[k] * Ak[j];\n      }\n      if(j===n1) Ai[j] -= Ai[k] * Ak[j];\n    }\n  }\n\n  return {\n    LU: A,\n    P:  P\n  };\n}\n\nnumeric.LUsolve = function LUsolve(LUP, b) {\n  var i, j;\n  var LU = LUP.LU;\n  var n   = LU.length;\n  var x = numeric.clone(b);\n  var P   = LUP.P;\n  var Pi, LUi, LUii, tmp;\n\n  for (i=n-1;i!==-1;--i) x[i] = b[i];\n  for (i = 0; i < n; ++i) {\n    Pi = P[i];\n    if (P[i] !== i) {\n      tmp = x[i];\n      x[i] = x[Pi];\n      x[Pi] = tmp;\n    }\n\n    LUi = LU[i];\n    for (j = 0; j < i; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n  }\n\n  for (i = n - 1; i >= 0; --i) {\n    LUi = LU[i];\n    for (j = i + 1; j < n; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n\n    x[i] /= LUi[i];\n  }\n\n  return x;\n}\n\nnumeric.solve = function solve(A,b,fast) { return numeric.LUsolve(numeric.LU(A,fast), b); }\n\n// 12. Linear programming\nnumeric.echelonize = function echelonize(A) {\n    var s = numeric.dim(A), m = s[0], n = s[1];\n    var I = numeric.identity(m);\n    var P = Array(m);\n    var i,j,k,l,Ai,Ii,Z,a;\n    var abs = Math.abs;\n    var diveq = numeric.diveq;\n    A = numeric.clone(A);\n    for(i=0;i<m;++i) {\n        k = 0;\n        Ai = A[i];\n        Ii = I[i];\n        for(j=1;j<n;++j) if(abs(Ai[k])<abs(Ai[j])) k=j;\n        P[i] = k;\n        diveq(Ii,Ai[k]);\n        diveq(Ai,Ai[k]);\n        for(j=0;j<m;++j) if(j!==i) {\n            Z = A[j]; a = Z[k];\n            for(l=n-1;l!==-1;--l) Z[l] -= Ai[l]*a;\n            Z = I[j];\n            for(l=m-1;l!==-1;--l) Z[l] -= Ii[l]*a;\n        }\n    }\n    return {I:I, A:A, P:P};\n}\n\nnumeric.__solveLP = function __solveLP(c,A,b,tol,maxit,x,flag) {\n    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;\n    var m = c.length, n = b.length,y;\n    var unbounded = false, cb,i0=0;\n    var alpha = 1.0;\n    var f0,df0,AT = numeric.transpose(A), svd = numeric.svd,transpose = numeric.transpose,leq = numeric.leq, sqrt = Math.sqrt, abs = Math.abs;\n    var muleq = numeric.muleq;\n    var norm = numeric.norminf, any = numeric.any,min = Math.min;\n    var all = numeric.all, gt = numeric.gt;\n    var p = Array(m), A0 = Array(n),e=numeric.rep([n],1), H;\n    var solve = numeric.solve, z = sub(b,dot(A,x)),count;\n    var dotcc = dot(c,c);\n    var g;\n    for(count=i0;count<maxit;++count) {\n        var i,j,d;\n        for(i=n-1;i!==-1;--i) A0[i] = div(A[i],z[i]);\n        var A1 = transpose(A0);\n        for(i=m-1;i!==-1;--i) p[i] = (/*x[i]+*/sum(A1[i]));\n        alpha = 0.25*abs(dotcc/dot(c,p));\n        var a1 = 100*sqrt(dotcc/dot(p,p));\n        if(!isFinite(alpha) || alpha>a1) alpha = a1;\n        g = add(c,mul(alpha,p));\n        H = dot(A1,A0);\n        for(i=m-1;i!==-1;--i) H[i][i] += 1;\n        d = solve(H,div(g,alpha),true);\n        var t0 = div(z,dot(A,d));\n        var t = 1.0;\n        for(i=n-1;i!==-1;--i) if(t0[i]<0) t = min(t,-0.999*t0[i]);\n        y = sub(x,mul(d,t));\n        z = sub(b,dot(A,y));\n        if(!all(gt(z,0))) return { solution: x, message: \"\", iterations: count };\n        x = y;\n        if(alpha<tol) return { solution: y, message: \"\", iterations: count };\n        if(flag) {\n            var s = dot(c,g), Ag = dot(A,g);\n            unbounded = true;\n            for(i=n-1;i!==-1;--i) if(s*Ag[i]<0) { unbounded = false; break; }\n        } else {\n            if(x[m-1]>=0) unbounded = false;\n            else unbounded = true;\n        }\n        if(unbounded) return { solution: y, message: \"Unbounded\", iterations: count };\n    }\n    return { solution: x, message: \"maximum iteration count exceeded\", iterations:count };\n}\n\nnumeric._solveLP = function _solveLP(c,A,b,tol,maxit) {\n    var m = c.length, n = b.length,y;\n    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;\n    var c0 = numeric.rep([m],0).concat([1]);\n    var J = numeric.rep([n,1],-1);\n    var A0 = numeric.blockMatrix([[A                   ,   J  ]]);\n    var b0 = b;\n    var y = numeric.rep([m],0).concat(Math.max(0,numeric.sup(numeric.neg(b)))+1);\n    var x0 = numeric.__solveLP(c0,A0,b0,tol,maxit,y,false);\n    var x = numeric.clone(x0.solution);\n    x.length = m;\n    var foo = numeric.inf(sub(b,dot(A,x)));\n    if(foo<0) { return { solution: NaN, message: \"Infeasible\", iterations: x0.iterations }; }\n    var ret = numeric.__solveLP(c, A, b, tol, maxit-x0.iterations, x, true);\n    ret.iterations += x0.iterations;\n    return ret;\n};\n\nnumeric.solveLP = function solveLP(c,A,b,Aeq,beq,tol,maxit) {\n    if(typeof maxit === \"undefined\") maxit = 1000;\n    if(typeof tol === \"undefined\") tol = numeric.epsilon;\n    if(typeof Aeq === \"undefined\") return numeric._solveLP(c,A,b,tol,maxit);\n    var m = Aeq.length, n = Aeq[0].length, o = A.length;\n    var B = numeric.echelonize(Aeq);\n    var flags = numeric.rep([n],0);\n    var P = B.P;\n    var Q = [];\n    var i;\n    for(i=P.length-1;i!==-1;--i) flags[P[i]] = 1;\n    for(i=n-1;i!==-1;--i) if(flags[i]===0) Q.push(i);\n    var g = numeric.getRange;\n    var I = numeric.linspace(0,m-1), J = numeric.linspace(0,o-1);\n    var Aeq2 = g(Aeq,I,Q), A1 = g(A,J,P), A2 = g(A,J,Q), dot = numeric.dot, sub = numeric.sub;\n    var A3 = dot(A1,B.I);\n    var A4 = sub(A2,dot(A3,Aeq2)), b4 = sub(b,dot(A3,beq));\n    var c1 = Array(P.length), c2 = Array(Q.length);\n    for(i=P.length-1;i!==-1;--i) c1[i] = c[P[i]];\n    for(i=Q.length-1;i!==-1;--i) c2[i] = c[Q[i]];\n    var c4 = sub(c2,dot(c1,dot(B.I,Aeq2)));\n    var S = numeric._solveLP(c4,A4,b4,tol,maxit);\n    var x2 = S.solution;\n    if(x2!==x2) return S;\n    var x1 = dot(B.I,sub(beq,dot(Aeq2,x2)));\n    var x = Array(c.length);\n    for(i=P.length-1;i!==-1;--i) x[P[i]] = x1[i];\n    for(i=Q.length-1;i!==-1;--i) x[Q[i]] = x2[i];\n    return { solution: x, message:S.message, iterations: S.iterations };\n}\n\nnumeric.MPStoLP = function MPStoLP(MPS) {\n    if(MPS instanceof String) { MPS.split('\\n'); }\n    var state = 0;\n    var states = ['Initial state','NAME','ROWS','COLUMNS','RHS','BOUNDS','ENDATA'];\n    var n = MPS.length;\n    var i,j,z,N=0,rows = {}, sign = [], rl = 0, vars = {}, nv = 0;\n    var name;\n    var c = [], A = [], b = [];\n    function err(e) { throw new Error('MPStoLP: '+e+'\\nLine '+i+': '+MPS[i]+'\\nCurrent state: '+states[state]+'\\n'); }\n    for(i=0;i<n;++i) {\n        z = MPS[i];\n        var w0 = z.match(/\\S*/g);\n        var w = [];\n        for(j=0;j<w0.length;++j) if(w0[j]!==\"\") w.push(w0[j]);\n        if(w.length === 0) continue;\n        for(j=0;j<states.length;++j) if(z.substr(0,states[j].length) === states[j]) break;\n        if(j<states.length) {\n            state = j;\n            if(j===1) { name = w[1]; }\n            if(j===6) return { name:name, c:c, A:numeric.transpose(A), b:b, rows:rows, vars:vars };\n            continue;\n        }\n        switch(state) {\n        case 0: case 1: err('Unexpected line');\n        case 2: \n            switch(w[0]) {\n            case 'N': if(N===0) N = w[1]; else err('Two or more N rows'); break;\n            case 'L': rows[w[1]] = rl; sign[rl] = 1; b[rl] = 0; ++rl; break;\n            case 'G': rows[w[1]] = rl; sign[rl] = -1;b[rl] = 0; ++rl; break;\n            case 'E': rows[w[1]] = rl; sign[rl] = 0;b[rl] = 0; ++rl; break;\n            default: err('Parse error '+numeric.prettyPrint(w));\n            }\n            break;\n        case 3:\n            if(!vars.hasOwnProperty(w[0])) { vars[w[0]] = nv; c[nv] = 0; A[nv] = numeric.rep([rl],0); ++nv; }\n            var p = vars[w[0]];\n            for(j=1;j<w.length;j+=2) {\n                if(w[j] === N) { c[p] = parseFloat(w[j+1]); continue; }\n                var q = rows[w[j]];\n                A[p][q] = (sign[q]<0?-1:1)*parseFloat(w[j+1]);\n            }\n            break;\n        case 4:\n            for(j=1;j<w.length;j+=2) b[rows[w[j]]] = (sign[rows[w[j]]]<0?-1:1)*parseFloat(w[j+1]);\n            break;\n        case 5: /*FIXME*/ break;\n        case 6: err('Internal error');\n        }\n    }\n    err('Reached end of file without ENDATA');\n}\n// seedrandom.js version 2.0.\n// Author: David Bau 4/2/2011\n//\n// Defines a method Math.seedrandom() that, when called, substitutes\n// an explicitly seeded RC4-based algorithm for Math.random().  Also\n// supports automatic seeding from local or network sources of entropy.\n//\n// Usage:\n//\n//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>\n//\n//   Math.seedrandom('yipee'); Sets Math.random to a function that is\n//                             initialized using the given explicit seed.\n//\n//   Math.seedrandom();        Sets Math.random to a function that is\n//                             seeded using the current time, dom state,\n//                             and other accumulated local entropy.\n//                             The generated seed string is returned.\n//\n//   Math.seedrandom('yowza', true);\n//                             Seeds using the given explicit seed mixed\n//                             together with accumulated entropy.\n//\n//   <script src=\"http://bit.ly/srandom-512\"></script>\n//                             Seeds using physical random bits downloaded\n//                             from random.org.\n//\n//   <script src=\"https://jsonlib.appspot.com/urandom?callback=Math.seedrandom\">\n//   </script>                 Seeds using urandom bits from call.jsonlib.com,\n//                             which is faster than random.org.\n//\n// Examples:\n//\n//   Math.seedrandom(\"hello\");            // Use \"hello\" as the seed.\n//   document.write(Math.random());       // Always 0.5463663768140734\n//   document.write(Math.random());       // Always 0.43973793770592234\n//   var rng1 = Math.random;              // Remember the current prng.\n//\n//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.\n//   document.write(Math.random());       // Pretty much unpredictable.\n//\n//   Math.random = rng1;                  // Continue \"hello\" prng sequence.\n//   document.write(Math.random());       // Always 0.554769432473455\n//\n//   Math.seedrandom(autoseed);           // Restart at the previous seed.\n//   document.write(Math.random());       // Repeat the 'unpredictable' value.\n//\n// Notes:\n//\n// Each time seedrandom('arg') is called, entropy from the passed seed\n// is accumulated in a pool to help generate future seeds for the\n// zero-argument form of Math.seedrandom, so entropy can be injected over\n// time by calling seedrandom with explicit data repeatedly.\n//\n// On speed - This javascript implementation of Math.random() is about\n// 3-10x slower than the built-in Math.random() because it is not native\n// code, but this is typically fast enough anyway.  Seeding is more expensive,\n// especially if you use auto-seeding.  Some details (timings on Chrome 4):\n//\n// Our Math.random()            - avg less than 0.002 milliseconds per call\n// seedrandom('explicit')       - avg less than 0.5 milliseconds per call\n// seedrandom('explicit', true) - avg less than 2 milliseconds per call\n// seedrandom()                 - avg about 38 milliseconds per call\n//\n// LICENSE (BSD):\n//\n// Copyright 2010 David Bau, all rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n// \n//   1. Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//\n//   2. Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n// \n//   3. Neither the name of this module nor the names of its contributors may\n//      be used to endorse or promote products derived from this software\n//      without specific prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n/**\n * All code is in an anonymous closure to keep the global namespace clean.\n *\n * @param {number=} overflow \n * @param {number=} startdenom\n */\n\n// Patched by Seb so that seedrandom.js does not pollute the Math object.\n// My tests suggest that doing Math.trouble = 1 makes Math lookups about 5%\n// slower.\nnumeric.seedrandom = { pow:Math.pow, random:Math.random };\n\n(function (pool, math, width, chunks, significance, overflow, startdenom) {\n\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nmath['seedrandom'] = function seedrandom(seed, use_entropy) {\n  var key = [];\n  var arc4;\n\n  // Flatten the seed string or build one from local entropy if needed.\n  seed = mixkey(flatten(\n    use_entropy ? [seed, pool] :\n    arguments.length ? seed :\n    [new Date().getTime(), pool, window], 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  arc4 = new ARC4(key);\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(arc4.S, pool);\n\n  // Override Math.random\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n\n  math['random'] = function random() {  // Closure to return a random double:\n    var n = arc4.g(chunks);             // Start with a numerator n < 2 ^ 48\n    var d = startdenom;                 //   and denominator d = 2 ^ 48.\n    var x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  // Return the seed that was used\n  return seed;\n};\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\n/** @constructor */\nfunction ARC4(key) {\n  var t, u, me = this, keylen = key.length;\n  var i = 0, j = me.i = me.j = me.m = 0;\n  me.S = [];\n  me.c = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) { me.S[i] = i++; }\n  for (i = 0; i < width; i++) {\n    t = me.S[i];\n    j = lowbits(j + t + key[i % keylen]);\n    u = me.S[j];\n    me.S[i] = u;\n    me.S[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  me.g = function getnext(count) {\n    var s = me.S;\n    var i = lowbits(me.i + 1); var t = s[i];\n    var j = lowbits(me.j + t); var u = s[j];\n    s[i] = u;\n    s[j] = t;\n    var r = s[lowbits(t + u)];\n    while (--count) {\n      i = lowbits(i + 1); t = s[i];\n      j = lowbits(j + t); u = s[j];\n      s[i] = u;\n      s[j] = t;\n      r = r * width + s[lowbits(t + u)];\n    }\n    me.i = i;\n    me.j = j;\n    return r;\n  };\n  // For robust unpredictability discard an initial batch of values.\n  // See http://www.rsa.com/rsalabs/node.asp?id=2009\n  me.g(width);\n}\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\n/** @param {Object=} result \n  * @param {string=} prop\n  * @param {string=} typ */\nfunction flatten(obj, depth, result, prop, typ) {\n  result = [];\n  typ = typeof(obj);\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      if (prop.indexOf('S') < 5) {    // Avoid FF3 bug (local/sessionStorage)\n        try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n      }\n    }\n  }\n  return (result.length ? result : obj + (typ != 'string' ? '\\0' : ''));\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\n/** @param {number=} smear \n  * @param {number=} j */\nfunction mixkey(seed, key, smear, j) {\n  seed += '';                         // Ensure the seed is a string\n  smear = 0;\n  for (j = 0; j < seed.length; j++) {\n    key[lowbits(j)] =\n      lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));\n  }\n  seed = '';\n  for (j in key) { seed += String.fromCharCode(key[j]); }\n  return seed;\n}\n\n//\n// lowbits()\n// A quick \"n mod width\" for width a power of 2.\n//\nfunction lowbits(n) { return n & (width - 1); }\n\n//\n// The following constants are related to IEEE 754 limits.\n//\nstartdenom = math.pow(width, chunks);\nsignificance = math.pow(2, significance);\noverflow = significance * 2;\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to intefere with determinstic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n// End anonymous scope, and pass initial values.\n}(\n  [],   // pool: entropy pool starts empty\n  numeric.seedrandom, // math: package containing random, pow, and seedrandom\n  256,  // width: each RC4 output is 0 <= x < 256\n  6,    // chunks: at least six RC4 outputs for each double\n  52    // significance: there are 52 significant digits in a double\n  ));\n/* This file is a slightly modified version of quadprog.js from Alberto Santini.\n * It has been slightly modified by SÃ©bastien Loisel to make sure that it handles\n * 0-based Arrays instead of 1-based Arrays.\n * License is in resources/LICENSE.quadprog */\n(function(exports) {\n\nfunction base0to1(A) {\n    if(typeof A !== \"object\") { return A; }\n    var ret = [], i,n=A.length;\n    for(i=0;i<n;i++) ret[i+1] = base0to1(A[i]);\n    return ret;\n}\nfunction base1to0(A) {\n    if(typeof A !== \"object\") { return A; }\n    var ret = [], i,n=A.length;\n    for(i=1;i<n;i++) ret[i-1] = base1to0(A[i]);\n    return ret;\n}\n\nfunction dpori(a, lda, n) {\n    var i, j, k, kp1, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n        a[k][k] = 1 / a[k][k];\n        t = -a[k][k];\n        //~ dscal(k - 1, t, a[1][k], 1);\n        for (i = 1; i < k; i = i + 1) {\n            a[i][k] = t * a[i][k];\n        }\n\n        kp1 = k + 1;\n        if (n < kp1) {\n            break;\n        }\n        for (j = kp1; j <= n; j = j + 1) {\n            t = a[k][j];\n            a[k][j] = 0;\n            //~ daxpy(k, t, a[1][k], 1, a[1][j], 1);\n            for (i = 1; i <= k; i = i + 1) {\n                a[i][j] = a[i][j] + (t * a[i][k]);\n            }\n        }\n    }\n\n}\n\nfunction dposl(a, lda, n, b) {\n    var i, k, kb, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n        //~ t = ddot(k - 1, a[1][k], 1, b[1], 1);\n        t = 0;\n        for (i = 1; i < k; i = i + 1) {\n            t = t + (a[i][k] * b[i]);\n        }\n\n        b[k] = (b[k] - t) / a[k][k];\n    }\n\n    for (kb = 1; kb <= n; kb = kb + 1) {\n        k = n + 1 - kb;\n        b[k] = b[k] / a[k][k];\n        t = -b[k];\n        //~ daxpy(k - 1, t, a[1][k], 1, b[1], 1);\n        for (i = 1; i < k; i = i + 1) {\n            b[i] = b[i] + (t * a[i][k]);\n        }\n    }\n}\n\nfunction dpofa(a, lda, n, info) {\n    var i, j, jm1, k, t, s;\n\n    for (j = 1; j <= n; j = j + 1) {\n        info[1] = j;\n        s = 0;\n        jm1 = j - 1;\n        if (jm1 < 1) {\n            s = a[j][j] - s;\n            if (s <= 0) {\n                break;\n            }\n            a[j][j] = Math.sqrt(s);\n        } else {\n            for (k = 1; k <= jm1; k = k + 1) {\n                //~ t = a[k][j] - ddot(k - 1, a[1][k], 1, a[1][j], 1);\n                t = a[k][j];\n                for (i = 1; i < k; i = i + 1) {\n                    t = t - (a[i][j] * a[i][k]);\n                }\n                t = t / a[k][k];\n                a[k][j] = t;\n                s = s + t * t;\n            }\n            s = a[j][j] - s;\n            if (s <= 0) {\n                break;\n            }\n            a[j][j] = Math.sqrt(s);\n        }\n        info[1] = 0;\n    }\n}\n\nfunction qpgen2(dmat, dvec, fddmat, n, sol, crval, amat,\n    bvec, fdamat, q, meq, iact, nact, iter, work, ierr) {\n\n    var i, j, l, l1, info, it1, iwzv, iwrv, iwrm, iwsv, iwuv, nvl, r, iwnbv,\n        temp, sum, t1, tt, gc, gs, nu,\n        t1inf, t2min,\n        vsmall, tmpa, tmpb,\n        go;\n\n    r = Math.min(n, q);\n    l = 2 * n + (r * (r + 5)) / 2 + 2 * q + 1;\n\n    vsmall = 1.0e-60;\n    do {\n        vsmall = vsmall + vsmall;\n        tmpa = 1 + 0.1 * vsmall;\n        tmpb = 1 + 0.2 * vsmall;\n    } while (tmpa <= 1 || tmpb <= 1);\n\n    for (i = 1; i <= n; i = i + 1) {\n        work[i] = dvec[i];\n    }\n    for (i = n + 1; i <= l; i = i + 1) {\n        work[i] = 0;\n    }\n    for (i = 1; i <= q; i = i + 1) {\n        iact[i] = 0;\n    }\n\n    info = [];\n\n    if (ierr[1] === 0) {\n        dpofa(dmat, fddmat, n, info);\n        if (info[1] !== 0) {\n            ierr[1] = 2;\n            return;\n        }\n        dposl(dmat, fddmat, n, dvec);\n        dpori(dmat, fddmat, n);\n    } else {\n        for (j = 1; j <= n; j = j + 1) {\n            sol[j] = 0;\n            for (i = 1; i <= j; i = i + 1) {\n                sol[j] = sol[j] + dmat[i][j] * dvec[i];\n            }\n        }\n        for (j = 1; j <= n; j = j + 1) {\n            dvec[j] = 0;\n            for (i = j; i <= n; i = i + 1) {\n                dvec[j] = dvec[j] + dmat[j][i] * sol[i];\n            }\n        }\n    }\n\n    crval[1] = 0;\n    for (j = 1; j <= n; j = j + 1) {\n        sol[j] = dvec[j];\n        crval[1] = crval[1] + work[j] * sol[j];\n        work[j] = 0;\n        for (i = j + 1; i <= n; i = i + 1) {\n            dmat[i][j] = 0;\n        }\n    }\n    crval[1] = -crval[1] / 2;\n    ierr[1] = 0;\n\n    iwzv = n;\n    iwrv = iwzv + n;\n    iwuv = iwrv + r;\n    iwrm = iwuv + r + 1;\n    iwsv = iwrm + (r * (r + 1)) / 2;\n    iwnbv = iwsv + q;\n\n    for (i = 1; i <= q; i = i + 1) {\n        sum = 0;\n        for (j = 1; j <= n; j = j + 1) {\n            sum = sum + amat[j][i] * amat[j][i];\n        }\n        work[iwnbv + i] = Math.sqrt(sum);\n    }\n    nact = 0;\n    iter[1] = 0;\n    iter[2] = 0;\n\n    function fn_goto_50() {\n        iter[1] = iter[1] + 1;\n\n        l = iwsv;\n        for (i = 1; i <= q; i = i + 1) {\n            l = l + 1;\n            sum = -bvec[i];\n            for (j = 1; j <= n; j = j + 1) {\n                sum = sum + amat[j][i] * sol[j];\n            }\n            if (Math.abs(sum) < vsmall) {\n                sum = 0;\n            }\n            if (i > meq) {\n                work[l] = sum;\n            } else {\n                work[l] = -Math.abs(sum);\n                if (sum > 0) {\n                    for (j = 1; j <= n; j = j + 1) {\n                        amat[j][i] = -amat[j][i];\n                    }\n                    bvec[i] = -bvec[i];\n                }\n            }\n        }\n\n        for (i = 1; i <= nact; i = i + 1) {\n            work[iwsv + iact[i]] = 0;\n        }\n\n        nvl = 0;\n        temp = 0;\n        for (i = 1; i <= q; i = i + 1) {\n            if (work[iwsv + i] < temp * work[iwnbv + i]) {\n                nvl = i;\n                temp = work[iwsv + i] / work[iwnbv + i];\n            }\n        }\n        if (nvl === 0) {\n            return 999;\n        }\n\n        return 0;\n    }\n\n    function fn_goto_55() {\n        for (i = 1; i <= n; i = i + 1) {\n            sum = 0;\n            for (j = 1; j <= n; j = j + 1) {\n                sum = sum + dmat[j][i] * amat[j][nvl];\n            }\n            work[i] = sum;\n        }\n\n        l1 = iwzv;\n        for (i = 1; i <= n; i = i + 1) {\n            work[l1 + i] = 0;\n        }\n        for (j = nact + 1; j <= n; j = j + 1) {\n            for (i = 1; i <= n; i = i + 1) {\n                work[l1 + i] = work[l1 + i] + dmat[i][j] * work[j];\n            }\n        }\n\n        t1inf = true;\n        for (i = nact; i >= 1; i = i - 1) {\n            sum = work[i];\n            l = iwrm + (i * (i + 3)) / 2;\n            l1 = l - i;\n            for (j = i + 1; j <= nact; j = j + 1) {\n                sum = sum - work[l] * work[iwrv + j];\n                l = l + j;\n            }\n            sum = sum / work[l1];\n            work[iwrv + i] = sum;\n            if (iact[i] < meq) {\n                // continue;\n                break;\n            }\n            if (sum < 0) {\n                // continue;\n                break;\n            }\n            t1inf = false;\n            it1 = i;\n        }\n\n        if (!t1inf) {\n            t1 = work[iwuv + it1] / work[iwrv + it1];\n            for (i = 1; i <= nact; i = i + 1) {\n                if (iact[i] < meq) {\n                    // continue;\n                    break;\n                }\n                if (work[iwrv + i] < 0) {\n                    // continue;\n                    break;\n                }\n                temp = work[iwuv + i] / work[iwrv + i];\n                if (temp < t1) {\n                    t1 = temp;\n                    it1 = i;\n                }\n            }\n        }\n\n        sum = 0;\n        for (i = iwzv + 1; i <= iwzv + n; i = i + 1) {\n            sum = sum + work[i] * work[i];\n        }\n        if (Math.abs(sum) <= vsmall) {\n            if (t1inf) {\n                ierr[1] = 1;\n                // GOTO 999\n                return 999;\n            } else {\n                for (i = 1; i <= nact; i = i + 1) {\n                    work[iwuv + i] = work[iwuv + i] - t1 * work[iwrv + i];\n                }\n                work[iwuv + nact + 1] = work[iwuv + nact + 1] + t1;\n                // GOTO 700\n                return 700;\n            }\n        } else {\n            sum = 0;\n            for (i = 1; i <= n; i = i + 1) {\n                sum = sum + work[iwzv + i] * amat[i][nvl];\n            }\n            tt = -work[iwsv + nvl] / sum;\n            t2min = true;\n            if (!t1inf) {\n                if (t1 < tt) {\n                    tt = t1;\n                    t2min = false;\n                }\n            }\n\n            for (i = 1; i <= n; i = i + 1) {\n                sol[i] = sol[i] + tt * work[iwzv + i];\n                if (Math.abs(sol[i]) < vsmall) {\n                    sol[i] = 0;\n                }\n            }\n\n            crval[1] = crval[1] + tt * sum * (tt / 2 + work[iwuv + nact + 1]);\n            for (i = 1; i <= nact; i = i + 1) {\n                work[iwuv + i] = work[iwuv + i] - tt * work[iwrv + i];\n            }\n            work[iwuv + nact + 1] = work[iwuv + nact + 1] + tt;\n\n            if (t2min) {\n                nact = nact + 1;\n                iact[nact] = nvl;\n\n                l = iwrm + ((nact - 1) * nact) / 2 + 1;\n                for (i = 1; i <= nact - 1; i = i + 1) {\n                    work[l] = work[i];\n                    l = l + 1;\n                }\n\n                if (nact === n) {\n                    work[l] = work[n];\n                } else {\n                    for (i = n; i >= nact + 1; i = i - 1) {\n                        if (work[i] === 0) {\n                            // continue;\n                            break;\n                        }\n                        gc = Math.max(Math.abs(work[i - 1]), Math.abs(work[i]));\n                        gs = Math.min(Math.abs(work[i - 1]), Math.abs(work[i]));\n                        if (work[i - 1] >= 0) {\n                            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n                        } else {\n                            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n                        }\n                        gc = work[i - 1] / temp;\n                        gs = work[i] / temp;\n\n                        if (gc === 1) {\n                            // continue;\n                            break;\n                        }\n                        if (gc === 0) {\n                            work[i - 1] = gs * temp;\n                            for (j = 1; j <= n; j = j + 1) {\n                                temp = dmat[j][i - 1];\n                                dmat[j][i - 1] = dmat[j][i];\n                                dmat[j][i] = temp;\n                            }\n                        } else {\n                            work[i - 1] = temp;\n                            nu = gs / (1 + gc);\n                            for (j = 1; j <= n; j = j + 1) {\n                                temp = gc * dmat[j][i - 1] + gs * dmat[j][i];\n                                dmat[j][i] = nu * (dmat[j][i - 1] + temp) - dmat[j][i];\n                                dmat[j][i - 1] = temp;\n\n                            }\n                        }\n                    }\n                    work[l] = work[nact];\n                }\n            } else {\n                sum = -bvec[nvl];\n                for (j = 1; j <= n; j = j + 1) {\n                    sum = sum + sol[j] * amat[j][nvl];\n                }\n                if (nvl > meq) {\n                    work[iwsv + nvl] = sum;\n                } else {\n                    work[iwsv + nvl] = -Math.abs(sum);\n                    if (sum > 0) {\n                        for (j = 1; j <= n; j = j + 1) {\n                            amat[j][nvl] = -amat[j][nvl];\n                        }\n                        bvec[nvl] = -bvec[nvl];\n                    }\n                }\n                // GOTO 700\n                return 700;\n            }\n        }\n\n        return 0;\n    }\n\n    function fn_goto_797() {\n        l = iwrm + (it1 * (it1 + 1)) / 2 + 1;\n        l1 = l + it1;\n        if (work[l1] === 0) {\n            // GOTO 798\n            return 798;\n        }\n        gc = Math.max(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n        gs = Math.min(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n        if (work[l1 - 1] >= 0) {\n            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n        } else {\n            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n        }\n        gc = work[l1 - 1] / temp;\n        gs = work[l1] / temp;\n\n        if (gc === 1) {\n            // GOTO 798\n            return 798;\n        }\n        if (gc === 0) {\n            for (i = it1 + 1; i <= nact; i = i + 1) {\n                temp = work[l1 - 1];\n                work[l1 - 1] = work[l1];\n                work[l1] = temp;\n                l1 = l1 + i;\n            }\n            for (i = 1; i <= n; i = i + 1) {\n                temp = dmat[i][it1];\n                dmat[i][it1] = dmat[i][it1 + 1];\n                dmat[i][it1 + 1] = temp;\n            }\n        } else {\n            nu = gs / (1 + gc);\n            for (i = it1 + 1; i <= nact; i = i + 1) {\n                temp = gc * work[l1 - 1] + gs * work[l1];\n                work[l1] = nu * (work[l1 - 1] + temp) - work[l1];\n                work[l1 - 1] = temp;\n                l1 = l1 + i;\n            }\n            for (i = 1; i <= n; i = i + 1) {\n                temp = gc * dmat[i][it1] + gs * dmat[i][it1 + 1];\n                dmat[i][it1 + 1] = nu * (dmat[i][it1] + temp) - dmat[i][it1 + 1];\n                dmat[i][it1] = temp;\n            }\n        }\n\n        return 0;\n    }\n\n    function fn_goto_798() {\n        l1 = l - it1;\n        for (i = 1; i <= it1; i = i + 1) {\n            work[l1] = work[l];\n            l = l + 1;\n            l1 = l1 + 1;\n        }\n\n        work[iwuv + it1] = work[iwuv + it1 + 1];\n        iact[it1] = iact[it1 + 1];\n        it1 = it1 + 1;\n        if (it1 < nact) {\n            // GOTO 797\n            return 797;\n        }\n\n        return 0;\n    }\n\n    function fn_goto_799() {\n        work[iwuv + nact] = work[iwuv + nact + 1];\n        work[iwuv + nact + 1] = 0;\n        iact[nact] = 0;\n        nact = nact - 1;\n        iter[2] = iter[2] + 1;\n\n        return 0;\n    }\n\n    go = 0;\n    while (true) {\n        go = fn_goto_50();\n        if (go === 999) {\n            return;\n        }\n        while (true) {\n            go = fn_goto_55();\n            if (go === 0) {\n                break;\n            }\n            if (go === 999) {\n                return;\n            }\n            if (go === 700) {\n                if (it1 === nact) {\n                    fn_goto_799();\n                } else {\n                    while (true) {\n                        fn_goto_797();\n                        go = fn_goto_798();\n                        if (go !== 797) {\n                            break;\n                        }\n                    }\n                    fn_goto_799();\n                }\n            }\n        }\n    }\n\n}\n\nfunction solveQP(Dmat, dvec, Amat, bvec, meq, factorized) {\n    Dmat = base0to1(Dmat);\n    dvec = base0to1(dvec);\n    Amat = base0to1(Amat);\n    var i, n, q,\n        nact, r,\n        crval = [], iact = [], sol = [], work = [], iter = [],\n        message;\n\n    meq = meq || 0;\n    factorized = factorized ? base0to1(factorized) : [undefined, 0];\n    bvec = bvec ? base0to1(bvec) : [];\n\n    // In Fortran the array index starts from 1\n    n = Dmat.length - 1;\n    q = Amat[1].length - 1;\n\n    if (!bvec) {\n        for (i = 1; i <= q; i = i + 1) {\n            bvec[i] = 0;\n        }\n    }\n    for (i = 1; i <= q; i = i + 1) {\n        iact[i] = 0;\n    }\n    nact = 0;\n    r = Math.min(n, q);\n    for (i = 1; i <= n; i = i + 1) {\n        sol[i] = 0;\n    }\n    crval[1] = 0;\n    for (i = 1; i <= (2 * n + (r * (r + 5)) / 2 + 2 * q + 1); i = i + 1) {\n        work[i] = 0;\n    }\n    for (i = 1; i <= 2; i = i + 1) {\n        iter[i] = 0;\n    }\n\n    qpgen2(Dmat, dvec, n, n, sol, crval, Amat,\n        bvec, n, q, meq, iact, nact, iter, work, factorized);\n\n    message = \"\";\n    if (factorized[1] === 1) {\n        message = \"constraints are inconsistent, no solution!\";\n    }\n    if (factorized[1] === 2) {\n        message = \"matrix D in quadratic function is not positive definite!\";\n    }\n\n    return {\n        solution: base1to0(sol),\n        value: base1to0(crval),\n        unconstrained_solution: base1to0(dvec),\n        iterations: base1to0(iter),\n        iact: base1to0(iact),\n        message: message\n    };\n}\nexports.solveQP = solveQP;\n}(numeric));\n/*\r\nShanti Rao sent me this routine by private email. I had to modify it\r\nslightly to work on Arrays instead of using a Matrix object.\r\nIt is apparently translated from http://stitchpanorama.sourceforge.net/Python/svd.py\r\n*/\r\n\r\nnumeric.svd= function svd(A) {\r\n    var temp;\r\n//Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)\r\n\tvar prec= numeric.epsilon; //Math.pow(2,-52) // assumes double prec\r\n\tvar tolerance= 1.e-64/prec;\r\n\tvar itmax= 50;\r\n\tvar c=0;\r\n\tvar i=0;\r\n\tvar j=0;\r\n\tvar k=0;\r\n\tvar l=0;\r\n\t\r\n\tvar u= numeric.clone(A);\r\n\tvar m= u.length;\r\n\t\r\n\tvar n= u[0].length;\r\n\t\r\n\tif (m < n) throw \"Need more rows than columns\"\r\n\t\r\n\tvar e = new Array(n);\r\n\tvar q = new Array(n);\r\n\tfor (i=0; i<n; i++) e[i] = q[i] = 0.0;\r\n\tvar v = numeric.rep([n,n],0);\r\n//\tv.zero();\r\n\t\r\n \tfunction pythag(a,b)\r\n \t{\r\n\t\ta = Math.abs(a)\r\n\t\tb = Math.abs(b)\r\n\t\tif (a > b)\r\n\t\t\treturn a*Math.sqrt(1.0+(b*b/a/a))\r\n\t\telse if (b == 0.0) \r\n\t\t\treturn a\r\n\t\treturn b*Math.sqrt(1.0+(a*a/b/b))\r\n\t}\r\n\r\n\t//Householder's reduction to bidiagonal form\r\n\r\n\tvar f= 0.0;\r\n\tvar g= 0.0;\r\n\tvar h= 0.0;\r\n\tvar x= 0.0;\r\n\tvar y= 0.0;\r\n\tvar z= 0.0;\r\n\tvar s= 0.0;\r\n\t\r\n\tfor (i=0; i < n; i++)\r\n\t{\t\r\n\t\te[i]= g;\r\n\t\ts= 0.0;\r\n\t\tl= i+1;\r\n\t\tfor (j=i; j < m; j++) \r\n\t\t\ts += (u[j][i]*u[j][i]);\r\n\t\tif (s <= tolerance)\r\n\t\t\tg= 0.0;\r\n\t\telse\r\n\t\t{\t\r\n\t\t\tf= u[i][i];\r\n\t\t\tg= Math.sqrt(s);\r\n\t\t\tif (f >= 0.0) g= -g;\r\n\t\t\th= f*g-s\r\n\t\t\tu[i][i]=f-g;\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\r\n\t\t\t\ts= 0.0\r\n\t\t\t\tfor (k=i; k < m; k++) \r\n\t\t\t\t\ts += u[k][i]*u[k][j]\r\n\t\t\t\tf= s/h\r\n\t\t\t\tfor (k=i; k < m; k++) \r\n\t\t\t\t\tu[k][j]+=f*u[k][i]\r\n\t\t\t}\r\n\t\t}\r\n\t\tq[i]= g\r\n\t\ts= 0.0\r\n\t\tfor (j=l; j < n; j++) \r\n\t\t\ts= s + u[i][j]*u[i][j]\r\n\t\tif (s <= tolerance)\r\n\t\t\tg= 0.0\r\n\t\telse\r\n\t\t{\t\r\n\t\t\tf= u[i][i+1]\r\n\t\t\tg= Math.sqrt(s)\r\n\t\t\tif (f >= 0.0) g= -g\r\n\t\t\th= f*g - s\r\n\t\t\tu[i][i+1] = f-g;\r\n\t\t\tfor (j=l; j < n; j++) e[j]= u[i][j]/h\r\n\t\t\tfor (j=l; j < m; j++)\r\n\t\t\t{\t\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\ts += (u[j][k]*u[i][k])\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\tu[j][k]+=s*e[k]\r\n\t\t\t}\t\r\n\t\t}\r\n\t\ty= Math.abs(q[i])+Math.abs(e[i])\r\n\t\tif (y>x) \r\n\t\t\tx=y\r\n\t}\r\n\t\r\n\t// accumulation of right hand gtransformations\r\n\tfor (i=n-1; i != -1; i+= -1)\r\n\t{\t\r\n\t\tif (g != 0.0)\r\n\t\t{\r\n\t\t \th= g*u[i][i+1]\r\n\t\t\tfor (j=l; j < n; j++) \r\n\t\t\t\tv[j][i]=u[i][j]/h\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\t\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\ts += u[i][k]*v[k][j]\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\tv[k][j]+=(s*v[k][i])\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tfor (j=l; j < n; j++)\r\n\t\t{\r\n\t\t\tv[i][j] = 0;\r\n\t\t\tv[j][i] = 0;\r\n\t\t}\r\n\t\tv[i][i] = 1;\r\n\t\tg= e[i]\r\n\t\tl= i\r\n\t}\r\n\t\r\n\t// accumulation of left hand transformations\r\n\tfor (i=n-1; i != -1; i+= -1)\r\n\t{\t\r\n\t\tl= i+1\r\n\t\tg= q[i]\r\n\t\tfor (j=l; j < n; j++) \r\n\t\t\tu[i][j] = 0;\r\n\t\tif (g != 0.0)\r\n\t\t{\r\n\t\t\th= u[i][i]*g\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < m; k++) s += u[k][i]*u[k][j];\r\n\t\t\t\tf= s/h\r\n\t\t\t\tfor (k=i; k < m; k++) u[k][j]+=f*u[k][i];\r\n\t\t\t}\r\n\t\t\tfor (j=i; j < m; j++) u[j][i] = u[j][i]/g;\r\n\t\t}\r\n\t\telse\r\n\t\t\tfor (j=i; j < m; j++) u[j][i] = 0;\r\n\t\tu[i][i] += 1;\r\n\t}\r\n\t\r\n\t// diagonalization of the bidiagonal form\r\n\tprec= prec*x\r\n\tfor (k=n-1; k != -1; k+= -1)\r\n\t{\r\n\t\tfor (var iteration=0; iteration < itmax; iteration++)\r\n\t\t{\t// test f splitting\r\n\t\t\tvar test_convergence = false\r\n\t\t\tfor (l=k; l != -1; l+= -1)\r\n\t\t\t{\t\r\n\t\t\t\tif (Math.abs(e[l]) <= prec)\r\n\t\t\t\t{\ttest_convergence= true\r\n\t\t\t\t\tbreak \r\n\t\t\t\t}\r\n\t\t\t\tif (Math.abs(q[l-1]) <= prec)\r\n\t\t\t\t\tbreak \r\n\t\t\t}\r\n\t\t\tif (!test_convergence)\r\n\t\t\t{\t// cancellation of e[l] if l>0\r\n\t\t\t\tc= 0.0\r\n\t\t\t\ts= 1.0\r\n\t\t\t\tvar l1= l-1\r\n\t\t\t\tfor (i =l; i<k+1; i++)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tf= s*e[i]\r\n\t\t\t\t\te[i]= c*e[i]\r\n\t\t\t\t\tif (Math.abs(f) <= prec)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tg= q[i]\r\n\t\t\t\t\th= pythag(f,g)\r\n\t\t\t\t\tq[i]= h\r\n\t\t\t\t\tc= g/h\r\n\t\t\t\t\ts= -f/h\r\n\t\t\t\t\tfor (j=0; j < m; j++)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\ty= u[j][l1]\r\n\t\t\t\t\t\tz= u[j][i]\r\n\t\t\t\t\t\tu[j][l1] =  y*c+(z*s)\r\n\t\t\t\t\t\tu[j][i] = -y*s+(z*c)\r\n\t\t\t\t\t} \r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t// test f convergence\r\n\t\t\tz= q[k]\r\n\t\t\tif (l== k)\r\n\t\t\t{\t//convergence\r\n\t\t\t\tif (z<0.0)\r\n\t\t\t\t{\t//q[k] is made non-negative\r\n\t\t\t\t\tq[k]= -z\r\n\t\t\t\t\tfor (j=0; j < n; j++)\r\n\t\t\t\t\t\tv[j][k] = -v[j][k]\r\n\t\t\t\t}\r\n\t\t\t\tbreak  //break out of iteration loop and move on to next k value\r\n\t\t\t}\r\n\t\t\tif (iteration >= itmax-1)\r\n\t\t\t\tthrow 'Error: no convergence.'\r\n\t\t\t// shift from bottom 2x2 minor\r\n\t\t\tx= q[l]\r\n\t\t\ty= q[k-1]\r\n\t\t\tg= e[k-1]\r\n\t\t\th= e[k]\r\n\t\t\tf= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y)\r\n\t\t\tg= pythag(f,1.0)\r\n\t\t\tif (f < 0.0)\r\n\t\t\t\tf= ((x-z)*(x+z)+h*(y/(f-g)-h))/x\r\n\t\t\telse\r\n\t\t\t\tf= ((x-z)*(x+z)+h*(y/(f+g)-h))/x\r\n\t\t\t// next QR transformation\r\n\t\t\tc= 1.0\r\n\t\t\ts= 1.0\r\n\t\t\tfor (i=l+1; i< k+1; i++)\r\n\t\t\t{\t\r\n\t\t\t\tg= e[i]\r\n\t\t\t\ty= q[i]\r\n\t\t\t\th= s*g\r\n\t\t\t\tg= c*g\r\n\t\t\t\tz= pythag(f,h)\r\n\t\t\t\te[i-1]= z\r\n\t\t\t\tc= f/z\r\n\t\t\t\ts= h/z\r\n\t\t\t\tf= x*c+g*s\r\n\t\t\t\tg= -x*s+g*c\r\n\t\t\t\th= y*s\r\n\t\t\t\ty= y*c\r\n\t\t\t\tfor (j=0; j < n; j++)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tx= v[j][i-1]\r\n\t\t\t\t\tz= v[j][i]\r\n\t\t\t\t\tv[j][i-1] = x*c+z*s\r\n\t\t\t\t\tv[j][i] = -x*s+z*c\r\n\t\t\t\t}\r\n\t\t\t\tz= pythag(f,h)\r\n\t\t\t\tq[i-1]= z\r\n\t\t\t\tc= f/z\r\n\t\t\t\ts= h/z\r\n\t\t\t\tf= c*g+s*y\r\n\t\t\t\tx= -s*g+c*y\r\n\t\t\t\tfor (j=0; j < m; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\ty= u[j][i-1]\r\n\t\t\t\t\tz= u[j][i]\r\n\t\t\t\t\tu[j][i-1] = y*c+z*s\r\n\t\t\t\t\tu[j][i] = -y*s+z*c\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\te[l]= 0.0\r\n\t\t\te[k]= f\r\n\t\t\tq[k]= x\r\n\t\t} \r\n\t}\r\n\t\t\r\n\t//vt= transpose(v)\r\n\t//return (u,q,vt)\r\n\tfor (i=0;i<q.length; i++) \r\n\t  if (q[i] < prec) q[i] = 0\r\n\t  \r\n\t//sort eigenvalues\t\r\n\tfor (i=0; i< n; i++)\r\n\t{\t \r\n\t//writeln(q)\r\n\t for (j=i-1; j >= 0; j--)\r\n\t {\r\n\t  if (q[j] < q[i])\r\n\t  {\r\n\t//  writeln(i,'-',j)\r\n\t   c = q[j]\r\n\t   q[j] = q[i]\r\n\t   q[i] = c\r\n\t   for(k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }\r\n\t   for(k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }\r\n//\t   u.swapCols(i,j)\r\n//\t   v.swapCols(i,j)\r\n\t   i = j\t   \r\n\t  }\r\n\t }\t\r\n\t}\r\n\t\r\n\treturn {U:u,S:q,V:v}\r\n};\r\n\r\n","// Compound.js\n'use strict'\n\nconst elements = require('../data/elements.json');\n\nclass Compound {\n\tconstructor (element_list) {\n\t\tthis.elements = {};\n\t\tthis.elementsList = [];\n\t\tif(element_list){\n\t\t\tfor (var element in element_list) {\n\t\t\t\tlet quantity = element_list[element];\n\t\t\t\tthis.add(element, quantity);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd (element, quantity) {\n\t\tquantity = quantity || 1;\n\t\tif (!elements[element]) {\n\t\t\treturn false;\n\t\t} \n\t\tif (this.elements[element]) {\n\t\t\tthis.elements[element] += quantity;\n\t\t} else {\n\t\t\tthis.elements[element] = quantity;\n\t\t\tthis.elementsList.push(element);\n\t\t}\n\t\treturn true;\n\t}\n\n\tremove (element, quantity) {\n\t\tquantity = quantity || 1;\n\t\tif (!elements[element] || !this.elements[element]) {\n\t\t\treturn false;\n\t\t} \n\t\tlet elementCount = this.elements[element];\n\t\tif (quantity >= elementCount) {\n\t\t\tdelete this.elements[element];\n\t\t\tthis.elementsList.splice(this.elementsList.indexOf(element), 1);\n\t\t} else {\n\t\t\tthis.elements[element] -= quantity;\n\t\t}\n\t\treturn true;\n\t}\n\n\tclear () {\n\t\tthis.elements = {};\n\t\tthis.elementsList = [];\n\t}\n\n\tgetMass () {\n\t\tlet mass = 0;\n\t\t// Okay okay, if I have time i'll find better names, this is getting nuts.\n\t\tfor (var element in this.elements) {\n\t\t\tmass += this.elements[element] * elements[element].mass;\n\t\t}\n\t\treturn mass;\n\t}\n\n\tgetPercentages () {\n\t\tlet self = this;\n\t\tlet mass = this.getMass();\n\t\tlet percentages = this.elementsList.map(function(el) {\n\t\t\treturn {\n\t\t\t\telement: el,\n\t\t\t\tpercentage: (self.elements[el] * elements[el].mass) / mass\n\t\t\t}\n\t\t})\n\t\treturn percentages;\n\t}\n\n\ttoHTML () {\n\t\tlet html = '';\n\t\tfor (var element in this.elements) {\n\t\t\tlet quantity = this.elements[element]\n\t\t\thtml += element;\n\t\t\thtml += quantity <= 1 ? '' : '<sub>'+quantity+'</sub>';\n\t\t}\n\t\treturn html;\n\t}\n}\n\nmodule.exports = Compound;","// PeriodicTable.js\n\n'use strict'\nconst elements = require('../data/elements.json');\n\nclass PeriodicTable {\n\n\tstatic getElement (el) {\n\t\tif (elements[el]) {\n\t\t\treturn elements[el];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tstatic getAtomic (atomicNumber) {\n\t\tlet results = filterElements(v => {\n\t\t\treturn elements[v].number == atomicNumber\n\t\t});\n\t\treturn results[0] || null;\n\t}\n\n\tstatic getGroup (group) {\n\t\tlet results = filterElements(v => {\n\t\t\treturn elements[v].group == group\n\t\t});\n\t\tif (results.length <= 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn results || null;\n\t}\n\n\tstatic getPeriod (period) {\n\t\tlet results = filterElements(v => {\n\t\t\treturn elements[v].period == period\n\t\t});\n\t\tif (results.length <= 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn results || null;\n\t}\n\n\tstatic getType (type) {\n\t\tlet results = filterElements(v => {\n\t\t\treturn elements[v].type == type\n\t\t});\n\t\tif (results.length <= 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn results || null;\n\t}\n}\n\nfunction filterElements(filter) {\n\tlet results = Object.keys(elements).filter(filter).map(v => {\n\t\treturn elements[v];\n\t})\n\treturn results;\n}\nmodule.exports = PeriodicTable;","// Utility.js\n'use strict'\nvar PeriodicTable = require('./PeriodicTable.js');\nclass Utility {\n\tstatic stringToElementList(str) {\n\t\tvar list = {};\n\t\tvar matches = str.match(/(([A-Z]{1}[a-z]*)([0-9]*))/g);\n\t\tfor (var i in matches) {\n\t\t\tvar fragment = matches[i];\n\t\t\tvar element = fragment.match(/([A-Z]{1}[a-z]*)/g);\n\t\t\tif(PeriodicTable.getElement(element) === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar quantity = fragment.match(/([0-9]+)/g) || 1;\n\t\t\tlist[element] = parseInt(quantity) + (list[element] || 0);\n\t\t}\n\t\treturn list;\n\t}\n}\n\nmodule.exports = Utility;","// index.js\n'use strict'\nconst Compound = require('./lib/Compound.js');\nconst PeriodicTable = require('./lib/PeriodicTable.js');\nconst Utility = require('./lib/Utility.js');\n\nmodule.exports = {\n\tCompound: Compound,\n\tPeriodicTable: PeriodicTable,\n\tUtility: Utility\n}\n","'use strict';\n\n/* Utility functions */\n\n/**\n *  Deep clone an object\n *  @param  {Object}    obj     Object to clone\n *  @return {Object}            Clone \n */\nfunction deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nmodule.exports.deepClone = deepClone;\n\n/**\n *  Cross product of two vectors of 3 elements\n *  @param  {Array} v1  \n *  @param  {Array} v2\n *  @return {Array}     v1 X v2\n */\nfunction cross(v1, v2) {\n    return [v1[1] * v2[2] - v1[2] * v2[1],\n        v1[2] * v2[0] - v1[0] * v2[2],\n        v1[0] * v2[1] - v1[1] * v2[0]\n    ];\n}\nmodule.exports.cross = cross;\n\n/**\n *  Returns the unit vector version of v\n *  @param  {Array} v\n *  @return {Array}     Unit vector\n */\nfunction unit(v) {\n    var n = Math.sqrt(v.reduce(function(s, x) {\n        return s + x * x;\n    }, 0));\n    return v.map(function(x) {\n        return x / n;\n    });\n}\nmodule.exports.unit = unit;\n\n/**\n * Reduce a vector to modulo 1 (interval [0,1]). Meant for fractional \n * coordinates\n * @param  {Array} v \n * @return {Array}      Reduced vector\n */\nfunction mod1(v) {\n    return v.map(function(x) { x = x % 1; return x >= 0 ? x : x + 1 });\n}\nmodule.exports.mod1 = mod1;\n\nvar _deg2rad = Math.PI / 180.0;\n/**\n *  Convert degrees to radians\n *  @param  {number}    deg     Angle in degrees\n *  @return {number}            Angle in radians\n */\nfunction degToRad(deg) {\n    return deg * _deg2rad;\n}\nmodule.exports.degToRad = degToRad;\n\n/**\n *  Convert radians to degrees\n *  @param  {number}    rad     Angle in radians\n *  @return {number}            Angle in degrees\n */\nfunction radToDeg(rad) {\n    return rad / _deg2rad;\n}\nmodule.exports.radToDeg = radToDeg;\n\n/**\n *  Check if an array includes multiple elements\n *  @param  {Array}     arr     Array to check\n *  @param  {Array}     elems   Elements to search in arr\n *  @return {bool}              Whether the check was successful\n */\nfunction includesAll(arr, elems) {\n    var ans = true;\n    for (var i = 0; i < elems.length; ++i) {\n        ans = ans && arr.includes(elems[i]);\n    }\n    return ans;\n}\nmodule.exports.includesAll = includesAll;","'use strict';\n\nvar symdata = require('../data/symmetry.json');\n\n/* Symmetry and space group related methods \n */\n\n/**\n * Parse a symmetry operation string in the format:\n *     +x,y-1/2,z\n * into a rotation matrix + translation vector representation.\n * @param  {string} symopstr A string representation of the symmetry operation\n * @return {Object}          The symmetry operation as [rotation, translation]\n */\nfunction parseSymOp(symopstr) {\n    // First, split by commas\n    var xyz = symopstr.split(',');\n    if (xyz.length != 3) {\n        throw 'Invalid symop string';\n    }\n    // Then capture all elements\n    var symre = /([+-]{0,1})(?:([xyz])|(?:([0-9]+)\\/([0-9]+)))/g;\n    var rotm = []; // Rotation\n    var trns = []; // Translation\n\n    for (var i = 0; i < 3; ++i) {\n        var tokens = [];\n        symre.lastIndex = 0;\n        var r = [0, 0, 0];\n        var t = 0.0;\n        do {\n            var res = symre.exec(xyz[i]);\n            if (!res)\n                break;\n            var sign = (res[1] == '-') ? -1 : 1;\n            if (res[2] === undefined) {\n                // Translation!\n                t += sign * parseFloat(res[3]) / parseFloat(res[4]);\n            } else {\n                // Rotation!\n                var j = 'xyz'.search(res[2]);\n                r[j] += sign;\n            }\n        } while (res);\n        rotm.push(r);\n        trns.push(t);\n    }\n\n    return [rotm, trns];\n}\nmodule.exports.parseSymOp = parseSymOp;\n\n/**\n * Interpret a Hall symbol and return a full list of symmetry\n * operations for it in.\n * @param  {string} hsym Hall symbol\n * @return {Object}      Symmetry operations as list of [rotation, translation]\n */\nfunction interpretHallSymbol(hsym) {\n\n    var hsym = hsym.trim()\n\n    for (var i = 1; i <= 530; ++i) {\n        // Iterate over all spacegroups\n        if (symdata[i]['hall_symbol'] == hsym) {\n            var rotms = symdata[i]['rotations'];\n            var trnss = symdata[i]['translations'];\n\n            return rotms.map(function(r, i) {\n                return [r, trnss[i]];\n            });\n        }\n    }\n\n    throw 'Invalid Hall symbol';\n}\nmodule.exports.interpretHallSymbol = interpretHallSymbol;","'use strict';\n\nvar nm = require('numeric');\nvar mndtable = require('mendeleev').PeriodicTable;\n\nvar utils = require('./utils.js');\nvar parseCif = require('./parse.js').parseCif;\nvar symmetry = require('./symmetry.js');\n\n/*\n\nFunctions and classes useful to transform a parsed CIF data structure into a\nseries of crystallographic structures.\n\n*/\n\n/**\n *   Convert a cartesian coordinates cell into a lengths and angles representation\n *   @param  {Array} cell    Cartesian form cell (must be 3x3)\n *   @param  {bool}  radians If true, angles are returned in radians\n *   @return {Array}         Parameters in form [lengths, angles]\n */\nfunction cellToCellpar(cell, radians) {\n    var lengths = cell.map(function(c) { return nm.norm2(c); });\n    var angles = [];\n    for (var i = 0; i < 3; ++i) {\n        var j = (i + 2) % 3;\n        var k = (i + 1) % 3;\n        var ll = lengths[j] * lengths[k];\n        if (ll > 1e-16) {\n            var x = nm.dot(cell[j], cell[k]) / ll;\n            var angle = Math.acos(x);\n        } else {\n            var angle = Math.PI / 2.0;\n        }\n        angles.push(angle);\n    }\n    if (!radians) {\n        angles = angles.map(utils.radToDeg);\n    }\n    return [lengths, angles];\n}\nmodule.exports.cellToCellpar = cellToCellpar;\n\n/**\n *  Convert a cell into lengths and angles representation to cartesian form\n *  @param  {Array} cellpar     Lengths and angles form of cell (must be 2x3)\n *  @param  {Array} ab_normal   Desired direction for the normal to the AB plane\n *  @param  {Array} a_direction Direction for the a parameter\n *  @param  {bool}  radians     If true, consider the angles in radians\n *  @return {Array}             Cell in Cartesian form\n */\nfunction cellparToCell(cellpar, ab_normal, a_direction, radians) {\n\n    ab_normal = ab_normal || [0, 0, 1]; // Default is the XY plane\n\n    if (!a_direction) {\n        if (nm.norm2(utils.cross(ab_normal, [1, 0, 0])) < 1e-5) {\n            a_direction = [0, 0, 1]; // Only if the AB plane contains X\n        } else {\n            a_direction = [1, 0, 0];\n        }\n    }\n\n    // Define rotated X,Y,Z-system, with Z along ab_normal and X along\n    // the projection of a_direction onto the normal plane of Z.\n    var ad = utils.unit(a_direction);\n    var Z = utils.unit(ab_normal);\n    var X = utils.unit(nm.sub(ad, nm.mul(nm.dot(ad, Z), Z)));\n    var Y = utils.cross(Z, X);\n\n    // Express va, vb and vc in the X,Y,Z-system\n    var l = cellpar[0];\n    var angs = cellpar[1];\n\n    if (!radians) {\n        angs = angs.map(utils.degToRad);\n    }\n\n    var cosa = angs.map(Math.cos);\n    var sina = angs.map(Math.sin);\n\n    for (var i = 0; i < 3; ++i) {\n        // Round for orthorombic cells\n        if (Math.abs(Math.abs(sina[i]) - 1) < 1e-14) {\n            sina[i] = Math.sign(sina[i]);\n            cosa[i] = 0.0;\n        }\n    }\n\n    // Build the cell vectors\n    var va = [l[0], 0, 0];\n    var vb = [l[1] * cosa[2], l[1] * sina[2], 0];\n    var vc = [l[2] * cosa[1],\n        l[2] * (cosa[0] - cosa[1] * cosa[2]) / sina[2],\n        0\n    ];\n    vc[2] = Math.sqrt(l[2] * l[2] - vc[0] * vc[0] - vc[1] * vc[1]);\n\n    // Convert to the Cartesian x, y, z - system\n    var cell = nm.dot([va, vb, vc], [X, Y, Z]);\n\n    return cell\n}\nmodule.exports.cellparToCell = cellparToCell;\n\n/** \n *  A class holding a crystallographic structure. Inspired by the Atoms class\n *  of the Atomic Simulation Environment.\n *  @class\n *  @param {Array}  elems       Array of element symbols or atomic numbers\n *  @param {Array}  positions   Array of 3D positions\n *  @param {Array}  cell        Array describing the unit cell. Can be any of\n *                              the following:\n *                              - false/null: no periodic boundary\n *                              - Single float: cubic cell with that parameter\n *                              - Array of 3 floats: orthorombic cell with \n *                                those parameters\n *                              - Array of 3x3 floats: full carthesian cell\n *                                definition\n *                              - Any of the previous two, but with one or two\n *                                elements replaced by false/null: partial \n *                                periodicity\n *  @param {Object} info        Additional data attached to the structure\n *  @param {bool}   scaled      If true, interpret the positions as scaled\n *                              instead of absolute\n *  @param {bool}   tolerant    If true, accept even symbols of elements that\n *                              do not exist in the periodic table\n */\nvar Atoms = function(elems, positions, cell, info, scaled, tolerant) {\n\n    // Sanity checks\n    var symbols = [];\n    var numbers = [];\n    for (var i = 0; i < elems.length; ++i) {\n        var el = elems[i];\n        var a;\n        var is_num = (typeof(el) == 'number');\n        if (is_num) {\n            a = mndtable.getAtomic(el);\n        } else {\n            a = mndtable.getElement(el);\n        }\n        if (a === null) {\n            if (is_num || !tolerant) {\n                throw 'Non-existing element passed to Atoms';\n            } else {\n                a = {\n                    'symbol': el, // Default for unknown element symbols\n                    'number': -1\n                }\n            }\n        }\n        symbols.push(a.symbol);\n        numbers.push(a.number);\n    }\n\n    this._arrays = {\n        'symbols': symbols,\n        'numbers': numbers,\n    }\n    this._N = symbols.length;\n\n    // Now on to storing the cell\n    this._pbc = [true, true, true];\n    this._inv_cell = null;\n    if (!cell) {\n        this._pbc = [false, false, false];\n        this._cell = null;\n    } else if (typeof(cell) == 'number') {\n        var a = cell;\n        this._cell = [\n            [a, 0, 0],\n            [0, a, 0],\n            [0, 0, a]\n        ];\n    } else if (cell.length != 3) {\n        throw 'Invalid cell passed to set_cell';\n    } else {\n        this._cell = [];\n        for (var i = 0; i < 3; ++i) {\n            if (!cell[i]) {\n                this._cell.push(null);\n                this._pbc[i] = false;\n            } else if (typeof(cell[i]) == 'number') {\n                var row = [0, 0, 0];\n                row[i] = cell[i];\n                this._cell.push(row);\n            } else if (cell[i].length != 3) {\n                throw 'Invalid cell passed to set_cell';\n            } else {\n                this._cell.push(cell[i]);\n            }\n        }\n    }\n\n    if (cell && !(this._cell.includes(null)))\n        this._inv_cell = nm.inv(this._cell);\n\n    // Check that the positions are the right size\n    var check_pos = (positions.length == this._N);\n    for (var i = 0; i < positions.length; ++i) {\n        check_pos = check_pos && (positions[i].length == 3);\n    }\n    if (!check_pos) {\n        throw 'Invalid positions array passed to Atoms';\n    }\n\n    if (scaled) {\n        if (this._inv_cell === null) {\n            // Periodicity isn't full!\n            throw 'Impossible to use scaled coordinates with non-periodic system';\n        }\n        positions = nm.dot(positions, this._cell);\n    }\n\n    this.set_array('positions', positions);\n\n\n    info = info || {};\n    this.info = info;\n}\n\n// Prototype for Atoms. We focus on getters, not setters, because it's not \n// meant to be modified besides its arrays.\nAtoms.prototype = {\n    length: function() {\n        return this._N;\n    },\n    set_array: function(name, arr) {\n        // Check that it's the right shape\n        if (!(arr.length == this._N)) {\n            throw 'Invalid array size';\n        }\n        this._arrays[name] = arr;\n    },\n    get_array: function(name) {\n        return this._arrays[name];\n    },\n    get_chemical_symbols: function() {\n        return utils.deepClone(this.get_array('symbols'));\n    },\n    get_atomic_numbers: function() {\n        return utils.deepClone(this.get_array('numbers'));\n    },\n    get_cell: function() {\n        return utils.deepClone(this._cell);\n    },\n    get_inv_cell: function() {\n        return utils.deepClone(this._inv_cell);\n    },\n    get_pbc: function() {\n        return utils.deepClone(this._pbc);\n    },\n    get_positions: function() {\n        return utils.deepClone(this.get_array('positions'));\n    },\n    get_scaled_positions: function() {\n        var pos = this.get_array('positions');\n        return nm.dot(pos, this._inv_cell);\n    }\n}\n\n// Utility functions needed for CIF parsing. Not meant for outside use!\n\n/** \n *  This function extracts a series of tags from a cif block. It searches for\n *  them and, if they are loops, only returns the ones that are as long as the\n *  FIRST element of tags (which is assumed obligatory; if not found, null is\n *  returned)\n */\nfunction _extract_tags(cblock, tags) {\n    var extracted = tags.map(function(tag) {\n        return cblock[tag];\n    });\n    if (extracted[0] === undefined)\n        return null;\n    // Verify that, in case of loops, all tags have the same length\n    var basetype = extracted[0].type;\n    var baselen = null;\n    if (basetype == 'loop') {\n        baselen = extracted[0].value.length;\n    }\n\n    extracted = extracted.map(function(x) {\n        if (x === undefined)\n            return null;\n        if (x.type != basetype)\n            return null;\n        if (basetype == 'loop' && x.value.length != baselen)\n            return null;\n\n        if (basetype == 'loop') {\n            return x.value;\n        } else {\n            return [x.value];\n        }\n    });\n\n    return extracted;\n}\n\nfunction _atom_types(cblock) {\n    // Extract atom types from cblock\n    var atype_tags = ['_atom_type_symbol',\n        '_atom_type_description',\n        '_atom_type_radius_bond'\n    ];\n    var typevals = _extract_tags(cblock, atype_tags);\n    if (!typevals) {\n        return null; // No types found\n    }\n\n    var atypes = {};\n    for (var i = 0; i < typevals[0].length; ++i) {\n        var sym = typevals[0][i].text;\n        atypes[sym] = {};\n        for (var j = 1; j < atype_tags.length; ++j) {\n            if (typevals[j] != null)\n                atypes[sym][atype_tags[j].slice(11)] =\n                typevals[j][i].get_value();\n        }\n    }\n\n    return atypes;\n}\n\nfunction _atom_sites(cblock) {\n    // Extract atom sites from cblock\n    var asite_tags = ['_atom_site_label',\n        '_atom_site_type_symbol',\n        '_atom_site_Cartn_x',\n        '_atom_site_Cartn_y',\n        '_atom_site_Cartn_z',\n        '_atom_site_fract_x',\n        '_atom_site_fract_y',\n        '_atom_site_fract_z'\n    ];\n    var sitevals = _extract_tags(cblock, asite_tags);\n    if (!sitevals) {\n        return null; // No sites found\n    }\n\n    var asites = [];\n    for (var i = 0; i < sitevals[0].length; ++i) {\n        asites.push({});\n        for (var j = 0; j < asite_tags.length; ++j) {\n            if (sitevals[j] != null)\n                asites[i][asite_tags[j].slice(11)] = sitevals[j][i].get_value();\n        }\n    }\n\n    return asites;\n}\n\nfunction _cellpars(cblock) {\n\n    var cell_tags = [\n        '_cell_length_a',\n        '_cell_length_b',\n        '_cell_length_c',\n        '_cell_angle_alpha',\n        '_cell_angle_beta',\n        '_cell_angle_gamma'\n    ];\n\n    var cellpars = [\n        [],\n        []\n    ];\n    for (var i = 0; i < 6; ++i) {\n        var val = cblock[cell_tags[i]];\n        if (val === undefined)\n            return null;\n        cellpars[Math.floor(i / 3)].push(val.value.get_value());\n    }\n\n    // If any of a, b, c is zero, then it's invalid\n    if (cellpars[0].some(function(x) { return (x == 0);})) {\n        return null;\n    }\n\n    return cellpars;\n}\n\nfunction _symops(cblock) {\n\n    // Look for either tag\n    var symopvals = (cblock._space_group_symop_operation_xyz ||\n        cblock._symmetry_equiv_pos_as_xyz);\n\n    // Hall symbol?\n    var hallsymbol = (cblock._space_group_name_Hall ||\n        cblock._symmetry_space_group_name_Hall);\n\n    var symops = null;\n\n    if (symopvals) {\n        symops = [];\n        if (symopvals.type == 'single' ||\n            symopvals.value.length == 1) {\n            // Either way is pointless (only one value means identity)\n            return null;\n        }\n\n        for (var i = 1; i < symopvals.value.length; ++i) {\n            symops.push(symmetry.parseSymOp(symopvals.value[i].text));\n        }\n    } else if (hallsymbol) {\n        symops = symmetry.interpretHallSymbol(hallsymbol);\n    }\n\n    return symops;\n}\n\n/** CIF to Atoms parser\n *  @static\n *  @param  {string}    cif     CIF file in text format\n *  @return {Object}            Dictionary of parsed crystal structures\n */\nAtoms.readCif = function(cif) {\n\n    var cifdict = parseCif(cif);\n\n    // Consider any data block\n    var structs = {};\n    for (var bname in cifdict) {\n        var block = cifdict[bname];\n        if ('_atom_site_label' in block) {\n            structs[bname] = block;\n        }\n    }\n\n    for (var sname in structs) {\n        var cblock = cifdict[sname];\n        // Start by identifying atom types, if present\n        var atypes = _atom_types(cblock);\n        var asites = _atom_sites(cblock);\n        var cellpars = _cellpars(cblock);\n\n        // Is this system periodic?\n        var pbc = (cellpars !== null);\n        if (pbc) {\n            var cell = cellparToCell(cellpars);\n        }\n\n        // Extract symbols, labels, and positions\n        var symbols = [];\n        var labels = [];\n        var positions = [];\n        for (var i = 0; i < asites.length; ++i) {\n            symbols.push(asites[i].type_symbol);\n            labels.push(asites[i].label);\n            var p = [asites[i].Cartn_x, asites[i].Cartn_y, asites[i].Cartn_z];\n            if (p.some(function(x) { return x === undefined; })) {\n                // Then we need the fractional ones!\n                if (!pbc) {\n                    // Does not make sense...\n                    throw 'Absolute coordinates are necessary without a unit cell';\n                }\n                p = [asites[i].fract_x, asites[i].fract_y, asites[i].fract_z];\n                p = nm.dot(p, cell);\n            }\n            positions.push(p);\n        }\n\n        // Now for symmetry oprations...\n        if (pbc) {\n            var symops = _symops(cblock);\n            if (symops){\n                var fpos = nm.dot(positions, nm.inv(cell));\n                var allfpos = [];\n                var allsyms = [];\n                var alllabs = [];\n                // Otherwise, find the new positions\n                for (var i = 0; i < positions.length; ++i) {\n                    var p0 = fpos[i];\n                    var allp = [p0];\n                    for (var j = 0; j < symops.length; ++j) {\n                        var rot = symops[j][0];\n                        var tr = symops[j][1];\n                        var p = nm.add(nm.dot(rot, p0), tr);\n                        p = utils.mod1(p);\n                        // Is it equivalent to something else?\n                        var eq = false;\n                        for (var k = 0; k < allp.length; ++k) {\n                            var r = nm.norm2(nm.sub(p, allp[k]));\n                            if (r < 1e-8) {\n                                eq = true;\n                                break;\n                            }\n                        }\n                        if (!eq) {\n                            allp.push(p);\n                        }\n                    }\n                    // Concatenate\n                    allfpos = allfpos.concat(allp);\n                    allsyms = allsyms.concat(Array(allp.length).fill(symbols[i]));\n                    alllabs = alllabs.concat(Array(allp.length).fill(labels[i]));\n                }\n                symbols = allsyms;\n                labels = alllabs;\n                positions = nm.dot(allfpos, cell);\n            }\n        }\n\n        // Create the atoms object\n        var a = new Atoms(symbols, positions, cell, {});\n        a.set_array('labels', labels);\n\n        structs[sname] = a;\n    }\n\n    return structs;\n}\n\nmodule.exports.Atoms = Atoms;","'use strict';\n\n\nvar parser = require('./lib/parse.js');\nvar Atoms = require('./lib/cryst.js').Atoms;\n\n/**\n * Parses a cif file in string format, returning it as a data structure\n * @param  {string} ciftext CIF file as a string\n * @return {Object}\n */\nmodule.exports.parseCifStructures = function(ciftext) {\n    return Atoms.readCif(ciftext);\n}\n\n// Additional exports\nmodule.exports.Atoms = Atoms;\nmodule.exports.parseCif = parser.parseCif;","export var DEFAULT_CONFIG = {\n  // minimum relative difference between two compared values,\n  // used by all comparison functions\n  epsilon: 1e-12,\n  // type of default matrix output. Choose 'matrix' (default) or 'array'\n  matrix: 'Matrix',\n  // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n  number: 'number',\n  // number of significant digits in BigNumbers\n  precision: 64,\n  // predictable output type of functions. When true, output type depends only\n  // on the input types. When false (default), output type can vary depending\n  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n  // predictable is false, and returns `NaN` when true.\n  predictable: false,\n  // random seed for seeded pseudo random number generation\n  // null = randomly seed\n  randomSeed: null\n};","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\nexport function isNumber(x) {\n  return typeof x === 'number';\n}\nexport function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber === true || false;\n}\nexport function isComplex(x) {\n  return x && _typeof(x) === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nexport function isFraction(x) {\n  return x && _typeof(x) === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nexport function isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nexport function isString(x) {\n  return typeof x === 'string';\n}\nexport var isArray = Array.isArray;\nexport function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\n\nexport function isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nexport function isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nexport function isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nexport function isBoolean(x) {\n  return typeof x === 'boolean';\n}\nexport function isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nexport function isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\nexport function isDate(x) {\n  return x instanceof Date;\n}\nexport function isRegExp(x) {\n  return x instanceof RegExp;\n}\nexport function isObject(x) {\n  return !!(x && _typeof(x) === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\nexport function isNull(x) {\n  return x === null;\n}\nexport function isUndefined(x) {\n  return x === undefined;\n}\nexport function isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nexport function typeOf(x) {\n  var t = _typeof(x);\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null';\n    if (Array.isArray(x)) return 'Array';\n    if (x instanceof Date) return 'Date';\n    if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n    if (isBigNumber(x)) return 'BigNumber';\n    if (isComplex(x)) return 'Complex';\n    if (isFraction(x)) return 'Fraction';\n    if (isMatrix(x)) return 'Matrix';\n    if (isUnit(x)) return 'Unit';\n    if (isIndex(x)) return 'Index';\n    if (isRange(x)) return 'Range';\n    if (isResultSet(x)) return 'ResultSet';\n    if (isNode(x)) return x.type;\n    if (isChain(x)) return 'Chain';\n    if (isHelp(x)) return 'Help';\n    return 'Object';\n  }\n\n  if (t === 'function') return 'Function';\n  return t; // can be 'string', 'number', 'boolean', ...\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { isBigNumber } from './is';\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\n\nexport function clone(x) {\n  var type = _typeof(x); // immutable primitive types\n\n\n  if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\n    return x;\n  } // use clone function of the object when available\n\n\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  } // array\n\n\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Date) return new Date(x.valueOf());\n  if (isBigNumber(x)) return x; // bignumbers are immutable\n\n  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp\n  // object\n\n  return mapObject(x, clone);\n}\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\n\nexport function mapObject(object, callback) {\n  var clone = {};\n\n  for (var key in object) {\n    if (hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n\n  return clone;\n}\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\n\nexport function extend(a, b) {\n  for (var prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n\n  return a;\n}\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\n\nexport function deepExtend(a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n\n        if (a[prop] && a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        } else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n\n  return a;\n}\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * Compares values and functions strictly (ie. 2 is not the same as '2').\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\n\nexport function deepStrictEqual(a, b) {\n  var prop, i, len;\n\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!deepStrictEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else if (typeof a === 'function') {\n    return a === b;\n  } else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in b) || !deepStrictEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    for (prop in b) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in a) || !deepStrictEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return a === b;\n  }\n}\n/**\n * Recursively flatten a nested object.\n * @param {Object} nestedObject\n * @return {Object} Returns the flattened object\n */\n\nexport function deepFlatten(nestedObject) {\n  var flattenedObject = {};\n\n  _deepFlatten(nestedObject, flattenedObject);\n\n  return flattenedObject;\n} // helper function used by deepFlatten\n\nfunction _deepFlatten(nestedObject, flattenedObject) {\n  for (var prop in nestedObject) {\n    if (hasOwnProperty(nestedObject, prop)) {\n      var value = nestedObject[prop];\n\n      if (_typeof(value) === 'object' && value !== null) {\n        _deepFlatten(value, flattenedObject);\n      } else {\n        flattenedObject[prop] = value;\n      }\n    }\n  }\n}\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\n\n\nexport function canDefineProperty() {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', {\n        get: function get() {}\n      });\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n}\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n *\n * @param {Object} object         Object where to add the property\n * @param {string} prop           Property name\n * @param {Function} valueResolver Function returning the property value. Called\n *                                without arguments.\n */\n\nexport function lazy(object, prop, valueResolver) {\n  var _uninitialized = true;\n\n  var _value;\n\n  Object.defineProperty(object, prop, {\n    get: function get() {\n      if (_uninitialized) {\n        _value = valueResolver();\n        _uninitialized = false;\n      }\n\n      return _value;\n    },\n    set: function set(value) {\n      _value = value;\n      _uninitialized = false;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string | string[]} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\n\nexport function traverse(object, path) {\n  if (path && typeof path === 'string') {\n    return traverse(object, path.split('.'));\n  }\n\n  var obj = object;\n\n  if (path) {\n    for (var i = 0; i < path.length; i++) {\n      var key = path[i];\n\n      if (!(key in obj)) {\n        obj[key] = {};\n      }\n\n      obj = obj[key];\n    }\n  }\n\n  return obj;\n}\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\n\nexport function hasOwnProperty(object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n}\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\n\nexport function isLegacyFactory(object) {\n  return object && typeof object.factory === 'function';\n}\n/**\n * Get a nested property from an object\n * @param {Object} object\n * @param {string | string[]} path\n * @returns {Object}\n */\n\nexport function get(object, path) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return get(object, path.split('.'));\n    } else {\n      return object[path];\n    }\n  }\n\n  var child = object;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n    child = child ? child[key] : undefined;\n  }\n\n  return child;\n}\n/**\n * Set a nested property in an object\n * Mutates the object itself\n * If the path doesn't exist, it will be created\n * @param {Object} object\n * @param {string | string[]} path\n * @param {*} value\n * @returns {Object}\n */\n\nexport function set(object, path, value) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return set(object, path.split('.'), value);\n    } else {\n      object[path] = value;\n      return object;\n    }\n  }\n\n  var child = object;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    var key = path[i];\n\n    if (child[key] === undefined) {\n      child[key] = {};\n    }\n\n    child = child[key];\n  }\n\n  if (path.length > 0) {\n    var lastKey = path[path.length - 1];\n    child[lastKey] = value;\n  }\n\n  return object;\n}\n/**\n * Create an object composed of the picked object properties\n * @param {Object} object\n * @param {string[]} properties\n * @param {function} [transform] Optional value to transform a value when picking it\n * @return {Object}\n */\n\nexport function pick(object, properties, transform) {\n  var copy = {};\n\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = get(object, key);\n\n    if (value !== undefined) {\n      set(copy, key, transform ? transform(value, key) : value);\n    }\n  }\n\n  return copy;\n}\n/**\n * Shallow version of pick, creating an object composed of the picked object properties\n * but not for nested properties\n * @param {Object} object\n * @param {string[]} properties\n * @return {Object}\n */\n\nexport function pickShallow(object, properties) {\n  var copy = {};\n\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = object[key];\n\n    if (value !== undefined) {\n      copy[key] = value;\n    }\n  }\n\n  return copy;\n}\nexport function values(object) {\n  return Object.keys(object).map(function (key) {\n    return object[key];\n  });\n} // helper function to test whether a string contains a path like 'user.name'\n\nfunction isPath(str) {\n  return str.indexOf('.') !== -1;\n}","import { clone, mapObject, deepExtend } from '../../utils/object';\nimport { DEFAULT_CONFIG } from '../config';\nexport var MATRIX_OPTIONS = ['Matrix', 'Array']; // valid values for option matrix\n\nexport var NUMBER_OPTIONS = ['number', 'BigNumber', 'Fraction']; // valid values for option number\n\nexport function configFactory(config, emit) {\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * This function is only available on a mathjs instance created using `create`.\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *\n   *     import { create, all } from 'mathjs'\n   *\n   *     // create a mathjs instance\n   *     const math = create(all)\n   *\n   *     math.config().number                // outputs 'number'\n   *     math.evaluate('0.4')                // outputs number 0.4\n   *     math.config({number: 'Fraction'})\n   *     math.evaluate('0.4')                // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config(options) {\n    if (options) {\n      var prev = mapObject(config, clone); // validate some of the options\n\n      validateOption(options, 'matrix', MATRIX_OPTIONS);\n      validateOption(options, 'number', NUMBER_OPTIONS); // merge options\n\n      deepExtend(config, options);\n      var curr = mapObject(config, clone);\n      var changes = mapObject(options, clone); // emit 'config' event\n\n      emit('config', curr, prev, changes);\n      return curr;\n    } else {\n      return mapObject(config, clone);\n    }\n  } // attach the valid options to the function so they can be extended\n\n\n  _config.MATRIX_OPTIONS = MATRIX_OPTIONS;\n  _config.NUMBER_OPTIONS = NUMBER_OPTIONS; // attach the config properties as readonly properties to the config function\n\n  Object.keys(DEFAULT_CONFIG).forEach(function (key) {\n    Object.defineProperty(_config, key, {\n      get: function get() {\n        return config[key];\n      },\n      enumerable: true,\n      configurable: true\n    });\n  });\n  return _config;\n}\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\n\nfunction contains(array, item) {\n  return array.indexOf(item) !== -1;\n}\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\n\n\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    // unknown value\n    console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". ' + 'Available options: ' + values.map(function (value) {\n      return JSON.stringify(value);\n    }).join(', ') + '.');\n  }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { DEFAULT_CONFIG } from '../core/config';\nimport { MATRIX_OPTIONS, NUMBER_OPTIONS } from '../core/function/config'; // create a read-only version of config\n\nexport var config = /* #__PURE__ */function config(options) {\n  if (options) {\n    throw new Error('The global config is readonly. \\n' + 'Please create a mathjs instance if you want to change the default configuration. \\n' + 'Example:\\n' + '\\n' + '  import { create, all } from \\'mathjs\\';\\n' + '  const mathjs = create(all);\\n' + '  mathjs.config({ number: \\'BigNumber\\' });\\n');\n  }\n\n  return Object.freeze(DEFAULT_CONFIG);\n};\n\n_extends(config, DEFAULT_CONFIG, {\n  MATRIX_OPTIONS: MATRIX_OPTIONS,\n  NUMBER_OPTIONS: NUMBER_OPTIONS\n});","/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n'use strict';\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // OldNode. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like OldNode.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.typed = factory();\n  }\n}(this, function () {\n\n  function ok () {\n    return true;\n  }\n\n  function notOk () {\n    return false;\n  }\n\n  function undef () {\n    return undefined;\n  }\n\n  /**\n   * @typedef {{\n   *   params: Param[],\n   *   fn: function\n   * }} Signature\n   *\n   * @typedef {{\n   *   types: Type[],\n   *   restParam: boolean\n   * }} Param\n   *\n   * @typedef {{\n   *   name: string,\n   *   typeIndex: number,\n   *   test: function,\n   *   conversion?: ConversionDef,\n   *   conversionIndex: number,\n   * }} Type\n   *\n   * @typedef {{\n   *   from: string,\n   *   to: string,\n   *   convert: function (*) : *\n   * }} ConversionDef\n   *\n   * @typedef {{\n   *   name: string,\n   *   test: function(*) : boolean\n   * }} TypeDef\n   */\n\n  // create a new instance of typed-function\n  function create () {\n    // data type tests\n    var _types = [\n      { name: 'number',    test: function (x) { return typeof x === 'number' } },\n      { name: 'string',    test: function (x) { return typeof x === 'string' } },\n      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n      { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n      { name: 'Array',     test: Array.isArray },\n      { name: 'Date',      test: function (x) { return x instanceof Date } },\n      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n      { name: 'Object',    test: function (x) {\n        return typeof x === 'object' && x !== null && x.constructor === Object\n      }},\n      { name: 'null',      test: function (x) { return x === null } },\n      { name: 'undefined', test: function (x) { return x === undefined } }\n    ];\n\n    var anyType = {\n      name: 'any',\n      test: ok\n    }\n\n    // types which need to be ignored\n    var _ignore = [];\n\n    // type conversions\n    var _conversions = [];\n\n    // This is a temporary object, will be replaced with a typed function at the end\n    var typed = {\n      types: _types,\n      conversions: _conversions,\n      ignore: _ignore\n    };\n\n    /**\n     * Find the test function for a type\n     * @param {String} typeName\n     * @return {TypeDef} Returns the type definition when found,\n     *                    Throws a TypeError otherwise\n     */\n    function findTypeByName (typeName) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.name === typeName;\n      });\n\n      if (entry) {\n        return entry;\n      }\n\n      if (typeName === 'any') { // special baked-in case 'any'\n        return anyType;\n      }\n\n      var hint = findInArray(typed.types, function (entry) {\n        return entry.name.toLowerCase() === typeName.toLowerCase();\n      });\n\n      throw new TypeError('Unknown type \"' + typeName + '\"' +\n          (hint ? ('. Did you mean \"' + hint.name + '\"?') : ''));\n    }\n\n    /**\n     * Find the index of a type definition. Handles special case 'any'\n     * @param {TypeDef} type\n     * @return {number}\n     */\n    function findTypeIndex(type) {\n      if (type === anyType) {\n        return 999;\n      }\n\n      return typed.types.indexOf(type);\n    }\n\n    /**\n     * Find a type that matches a value.\n     * @param {*} value\n     * @return {string} Returns the name of the first type for which\n     *                  the type test matches the value.\n     */\n    function findTypeName(value) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.test(value);\n      });\n\n      if (entry) {\n        return entry.name;\n      }\n\n      throw new TypeError('Value has unknown type. Value: ' + value);\n    }\n\n    /**\n     * Find a specific signature from a (composed) typed function, for example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an error when no signature\n     *                                        is found.\n     */\n    function find (fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      }\n\n      // normalize input\n      var arr;\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      }\n      else if (Array.isArray(signature)) {\n        arr = signature;\n      }\n      else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(',');\n\n      // find an exact match\n      var match = fn.signatures[str];\n      if (match) {\n        return match;\n      }\n\n      // TODO: extend find to match non-exact signatures\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n    function convert (value, type) {\n      var from = findTypeName(value);\n\n      // check conversion is needed\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n    \n    /**\n     * Stringify parameters in a normalized way\n     * @param {Param[]} params\n     * @return {string}\n     */\n    function stringifyParams (params) {\n      return params\n          .map(function (param) {\n            var typeNames = param.types.map(getTypeName);\n\n            return (param.restParam ? '...' : '') + typeNames.join('|');\n          })\n          .join(',');\n    }\n\n    /**\n     * Parse a parameter, like \"...number | boolean\"\n     * @param {string} param\n     * @param {ConversionDef[]} conversions\n     * @return {Param} param\n     */\n    function parseParam (param, conversions) {\n      var restParam = param.indexOf('...') === 0;\n      var types = (!restParam)\n          ? param\n          : (param.length > 3)\n              ? param.slice(3)\n              : 'any';\n\n      var typeNames = types.split('|').map(trim)\n          .filter(notEmpty)\n          .filter(notIgnore);\n\n      var matchingConversions = filterConversions(conversions, typeNames);\n\n      var exactTypes = typeNames.map(function (typeName) {\n        var type = findTypeByName(typeName);\n\n        return {\n          name: typeName,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: null,\n          conversionIndex: -1\n        };\n      });\n\n      var convertibleTypes = matchingConversions.map(function (conversion) {\n        var type = findTypeByName(conversion.from);\n\n        return {\n          name: conversion.from,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: conversion,\n          conversionIndex: conversions.indexOf(conversion)\n        };\n      });\n\n      return {\n        types: exactTypes.concat(convertibleTypes),\n        restParam: restParam\n      };\n    }\n\n    /**\n     * Parse a signature with comma separated parameters,\n     * like \"number | boolean, ...string\"\n     * @param {string} signature\n     * @param {function} fn\n     * @param {ConversionDef[]} conversions\n     * @return {Signature | null} signature\n     */\n    function parseSignature (signature, fn, conversions) {\n      var params = [];\n\n      if (signature.trim() !== '') {\n        params = signature\n            .split(',')\n            .map(trim)\n            .map(function (param, index, array) {\n              var parsedParam = parseParam(param, conversions);\n\n              if (parsedParam.restParam && (index !== array.length - 1)) {\n                throw new SyntaxError('Unexpected rest parameter \"' + param + '\": ' +\n                    'only allowed for the last parameter');\n              }\n\n              return parsedParam;\n          });\n      }\n\n      if (params.some(isInvalidParam)) {\n        // invalid signature: at least one parameter has no types\n        // (they may have been filtered)\n        return null;\n      }\n\n      return {\n        params: params,\n        fn: fn\n      };\n    }\n\n    /**\n     * Test whether a set of params contains a restParam\n     * @param {Param[]} params\n     * @return {boolean} Returns true when the last parameter is a restParam\n     */\n    function hasRestParam(params) {\n      var param = last(params)\n      return param ? param.restParam : false;\n    }\n\n    /**\n     * Test whether a parameter contains conversions\n     * @param {Param} param\n     * @return {boolean} Returns true when at least one of the parameters\n     *                   contains a conversion.\n     */\n    function hasConversions(param) {\n      return param.types.some(function (type) {\n        return type.conversion != null;\n      });\n    }\n\n    /**\n     * Create a type test for a single parameter, which can have one or multiple\n     * types.\n     * @param {Param} param\n     * @return {function(x: *) : boolean} Returns a test function\n     */\n    function compileTest(param) {\n      if (!param || param.types.length === 0) {\n        // nothing to do\n        return ok;\n      }\n      else if (param.types.length === 1) {\n        return findTypeByName(param.types[0].name).test;\n      }\n      else if (param.types.length === 2) {\n        var test0 = findTypeByName(param.types[0].name).test;\n        var test1 = findTypeByName(param.types[1].name).test;\n        return function or(x) {\n          return test0(x) || test1(x);\n        }\n      }\n      else { // param.types.length > 2\n        var tests = param.types.map(function (type) {\n          return findTypeByName(type.name).test;\n        })\n        return function or(x) {\n          for (var i = 0; i < tests.length; i++) {\n            if (tests[i](x)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n    }\n\n    /**\n     * Create a test for all parameters of a signature\n     * @param {Param[]} params\n     * @return {function(args: Array<*>) : boolean}\n     */\n    function compileTests(params) {\n      var tests, test0, test1;\n\n      if (hasRestParam(params)) {\n        // variable arguments like '...number'\n        tests = initial(params).map(compileTest);\n        var varIndex = tests.length;\n        var lastTest = compileTest(last(params));\n        var testRestParam = function (args) {\n          for (var i = varIndex; i < args.length; i++) {\n            if (!lastTest(args[i])) {\n              return false;\n            }\n          }\n          return true;\n        }\n\n        return function testArgs(args) {\n          for (var i = 0; i < tests.length; i++) {\n            if (!tests[i](args[i])) {\n              return false;\n            }\n          }\n          return testRestParam(args) && (args.length >= varIndex + 1);\n        };\n      }\n      else {\n        // no variable arguments\n        if (params.length === 0) {\n          return function testArgs(args) {\n            return args.length === 0;\n          };\n        }\n        else if (params.length === 1) {\n          test0 = compileTest(params[0]);\n          return function testArgs(args) {\n            return test0(args[0]) && args.length === 1;\n          };\n        }\n        else if (params.length === 2) {\n          test0 = compileTest(params[0]);\n          test1 = compileTest(params[1]);\n          return function testArgs(args) {\n            return test0(args[0]) && test1(args[1]) && args.length === 2;\n          };\n        }\n        else { // arguments.length > 2\n          tests = params.map(compileTest);\n          return function testArgs(args) {\n            for (var i = 0; i < tests.length; i++) {\n              if (!tests[i](args[i])) {\n                return false;\n              }\n            }\n            return args.length === tests.length;\n          };\n        }\n      }\n    }\n\n    /**\n     * Find the parameter at a specific index of a signature.\n     * Handles rest parameters.\n     * @param {Signature} signature\n     * @param {number} index\n     * @return {Param | null} Returns the matching parameter when found,\n     *                        null otherwise.\n     */\n    function getParamAtIndex(signature, index) {\n      return index < signature.params.length\n          ? signature.params[index]\n          : hasRestParam(signature.params)\n              ? last(signature.params)\n              : null\n    }\n\n    /**\n     * Get all type names of a parameter\n     * @param {Signature} signature\n     * @param {number} index\n     * @param {boolean} excludeConversions\n     * @return {string[]} Returns an array with type names\n     */\n    function getExpectedTypeNames (signature, index, excludeConversions) {\n      var param = getParamAtIndex(signature, index);\n      var types = param\n          ? excludeConversions\n                  ? param.types.filter(isExactType)\n                  : param.types\n          : [];\n\n      return types.map(getTypeName);\n    }\n\n    /**\n     * Returns the name of a type\n     * @param {Type} type\n     * @return {string} Returns the type name\n     */\n    function getTypeName(type) {\n      return type.name;\n    }\n\n    /**\n     * Test whether a type is an exact type or conversion\n     * @param {Type} type\n     * @return {boolean} Returns true when\n     */\n    function isExactType(type) {\n      return type.conversion === null || type.conversion === undefined;\n    }\n\n    /**\n     * Helper function for creating error messages: create an array with\n     * all available types on a specific argument index.\n     * @param {Signature[]} signatures\n     * @param {number} index\n     * @return {string[]} Returns an array with available types\n     */\n    function mergeExpectedParams(signatures, index) {\n      var typeNames = uniq(flatMap(signatures, function (signature) {\n        return getExpectedTypeNames(signature, index, false);\n      }));\n\n      return (typeNames.indexOf('any') !== -1) ? ['any'] : typeNames;\n    }\n\n    /**\n     * Create\n     * @param {string} name             The name of the function\n     * @param {array.<*>} args          The actual arguments passed to the function\n     * @param {Signature[]} signatures  A list with available signatures\n     * @return {TypeError} Returns a type error with additional data\n     *                     attached to it in the property `data`\n     */\n    function createError(name, args, signatures) {\n      var err, expected;\n      var _name = name || 'unnamed';\n\n      // test for wrong type at some index\n      var matchingSignatures = signatures;\n      var index;\n      for (index = 0; index < args.length; index++) {\n        var nextMatchingDefs = matchingSignatures.filter(function (signature) {\n          var test = compileTest(getParamAtIndex(signature, index));\n          return (index < signature.params.length || hasRestParam(signature.params)) &&\n              test(args[index]);\n        });\n\n        if (nextMatchingDefs.length === 0) {\n          // no matching signatures anymore, throw error \"wrong type\"\n          expected = mergeExpectedParams(matchingSignatures, index);\n          if (expected.length > 0) {\n            var actualType = findTypeName(args[index]);\n\n            err = new TypeError('Unexpected type of argument in function ' + _name +\n                ' (expected: ' + expected.join(' or ') +\n                ', actual: ' + actualType + ', index: ' + index + ')');\n            err.data = {\n              category: 'wrongType',\n              fn: _name,\n              index: index,\n              actual: actualType,\n              expected: expected\n            }\n            return err;\n          }\n        }\n        else {\n          matchingSignatures = nextMatchingDefs;\n        }\n      }\n\n      // test for too few arguments\n      var lengths = matchingSignatures.map(function (signature) {\n        return hasRestParam(signature.params) ? Infinity : signature.params.length;\n      });\n      if (args.length < Math.min.apply(null, lengths)) {\n        expected = mergeExpectedParams(matchingSignatures, index);\n        err = new TypeError('Too few arguments in function ' + _name +\n            ' (expected: ' + expected.join(' or ') +\n            ', index: ' + args.length + ')');\n        err.data = {\n          category: 'tooFewArgs',\n          fn: _name,\n          index: args.length,\n          expected: expected\n        }\n        return err;\n      }\n\n      // test for too many arguments\n      var maxLength = Math.max.apply(null, lengths);\n      if (args.length > maxLength) {\n        err = new TypeError('Too many arguments in function ' + _name +\n            ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n        err.data = {\n          category: 'tooManyArgs',\n          fn: _name,\n          index: args.length,\n          expectedLength: maxLength\n        }\n        return err;\n      }\n\n      err = new TypeError('Arguments of type \"' + args.join(', ') +\n          '\" do not match any of the defined signatures of function ' + _name + '.');\n      err.data = {\n        category: 'mismatch',\n        actual: args.map(findTypeName)\n      }\n      return err;\n    }\n\n    /**\n     * Find the lowest index of all exact types of a parameter (no conversions)\n     * @param {Param} param\n     * @return {number} Returns the index of the lowest type in typed.types\n     */\n    function getLowestTypeIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].typeIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Find the lowest index of the conversion of all types of the parameter\n     * having a conversion\n     * @param {Param} param\n     * @return {number} Returns the lowest index of the conversions of this type\n     */\n    function getLowestConversionIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (!isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].conversionIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Compare two params\n     * @param {Param} param1\n     * @param {Param} param2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareParams (param1, param2) {\n      var c;\n\n      // compare having a rest parameter or not\n      c = param1.restParam - param2.restParam;\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare having conversions or not\n      c = hasConversions(param1) - hasConversions(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of the types\n      c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of any conversion\n      return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n    }\n\n    /**\n     * Compare two signatures\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareSignatures (signature1, signature2) {\n      var len = Math.min(signature1.params.length, signature2.params.length);\n      var i;\n      var c;\n\n      // compare whether the params have conversions at all or not\n      c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions)\n      if (c !== 0) {\n        return c;\n      }\n\n      // next compare whether the params have conversions one by one\n      for (i = 0; i < len; i++) {\n        c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the types of the params one by one\n      for (i = 0; i < len; i++) {\n        c = compareParams(signature1.params[i], signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the number of params\n      return signature1.params.length - signature2.params.length;\n    }\n\n    /**\n     * Get params containing all types that can be converted to the defined types.\n     *\n     * @param {ConversionDef[]} conversions\n     * @param {string[]} typeNames\n     * @return {ConversionDef[]} Returns the conversions that are available\n     *                        for every type (if any)\n     */\n    function filterConversions(conversions, typeNames) {\n      var matches = {};\n\n      conversions.forEach(function (conversion) {\n        if (typeNames.indexOf(conversion.from) === -1 &&\n            typeNames.indexOf(conversion.to) !== -1 &&\n            !matches[conversion.from]) {\n          matches[conversion.from] = conversion;\n        }\n      });\n\n      return Object.keys(matches).map(function (from) {\n        return matches[from];\n      });\n    }\n\n    /**\n     * Preprocess arguments before calling the original function:\n     * - if needed convert the parameters\n     * - in case of rest parameters, move the rest parameters into an Array\n     * @param {Param[]} params\n     * @param {function} fn\n     * @return {function} Returns a wrapped function\n     */\n    function compileArgsPreprocessing(params, fn) {\n      var fnConvert = fn;\n\n      // TODO: can we make this wrapper function smarter/simpler?\n\n      if (params.some(hasConversions)) {\n        var restParam = hasRestParam(params);\n        var compiledConversions = params.map(compileArgConversion)\n\n        fnConvert = function convertArgs() {\n          var args = [];\n          var last = restParam ? arguments.length - 1 : arguments.length;\n          for (var i = 0; i < last; i++) {\n            args[i] = compiledConversions[i](arguments[i]);\n          }\n          if (restParam) {\n            args[last] = arguments[last].map(compiledConversions[last]);\n          }\n\n          return fn.apply(this, args);\n        }\n      }\n\n      var fnPreprocess = fnConvert;\n      if (hasRestParam(params)) {\n        var offset = params.length - 1;\n\n        fnPreprocess = function preprocessRestParams () {\n          return fnConvert.apply(this,\n              slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n        }\n      }\n\n      return fnPreprocess;\n    }\n\n    /**\n     * Compile conversion for a parameter to the right type\n     * @param {Param} param\n     * @return {function} Returns the wrapped function that will convert arguments\n     *\n     */\n    function compileArgConversion(param) {\n      var test0, test1, conversion0, conversion1;\n      var tests = [];\n      var conversions = [];\n\n      param.types.forEach(function (type) {\n        if (type.conversion) {\n          tests.push(findTypeByName(type.conversion.from).test);\n          conversions.push(type.conversion.convert);\n        }\n      });\n\n      // create optimized conversion functions depending on the number of conversions\n      switch (conversions.length) {\n        case 0:\n          return function convertArg(arg) {\n            return arg;\n          }\n\n        case 1:\n          test0 = tests[0]\n          conversion0 = conversions[0];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            return arg;\n          }\n\n        case 2:\n          test0 = tests[0]\n          test1 = tests[1]\n          conversion0 = conversions[0];\n          conversion1 = conversions[1];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            if (test1(arg)) {\n              return conversion1(arg)\n            }\n            return arg;\n          }\n\n        default:\n          return function convertArg(arg) {\n            for (var i = 0; i < conversions.length; i++) {\n              if (tests[i](arg)) {\n                return conversions[i](arg);\n              }\n            }\n            return arg;\n          }\n      }\n    }\n\n    /**\n     * Convert an array with signatures into a map with signatures,\n     * where signatures with union types are split into separate signatures\n     *\n     * Throws an error when there are conflicting types\n     *\n     * @param {Signature[]} signatures\n     * @return {Object.<string, function>}  Returns a map with signatures\n     *                                      as key and the original function\n     *                                      of this signature as value.\n     */\n    function createSignaturesMap(signatures) {\n      var signaturesMap = {};\n      signatures.forEach(function (signature) {\n        if (!signature.params.some(hasConversions)) {\n          splitParams(signature.params, true).forEach(function (params) {\n            signaturesMap[stringifyParams(params)] = signature.fn;\n          });\n        }\n      });\n\n      return signaturesMap;\n    }\n\n    /**\n     * Split params with union types in to separate params.\n     *\n     * For example:\n     *\n     *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n     *     // returns:\n     *     // [\n     *     //   ['Array', 'string'],\n     *     //   ['Array', 'RegExp'],\n     *     //   ['Object', 'string'],\n     *     //   ['Object', 'RegExp']\n     *     // ]\n     *\n     * @param {Param[]} params\n     * @param {boolean} ignoreConversionTypes\n     * @return {Param[]}\n     */\n    function splitParams(params, ignoreConversionTypes) {\n      function _splitParams(params, index, types) {\n        if (index < params.length) {\n          var param = params[index]\n          var filteredTypes = ignoreConversionTypes\n              ? param.types.filter(isExactType)\n              : param.types;\n          var typeGroups\n\n          if (param.restParam) {\n            // split the types of a rest parameter in two:\n            // one with only exact types, and one with exact types and conversions\n            var exactTypes = filteredTypes.filter(isExactType)\n            typeGroups = exactTypes.length < filteredTypes.length\n                ? [exactTypes, filteredTypes]\n                : [filteredTypes]\n\n          }\n          else {\n            // split all the types of a regular parameter into one type per group\n            typeGroups = filteredTypes.map(function (type) {\n              return [type]\n            })\n          }\n\n          // recurse over the groups with types\n          return flatMap(typeGroups, function (typeGroup) {\n            return _splitParams(params, index + 1, types.concat([typeGroup]));\n          });\n\n        }\n        else {\n          // we've reached the end of the parameters. Now build a new Param\n          var splittedParams = types.map(function (type, typeIndex) {\n            return {\n              types: type,\n              restParam: (typeIndex === params.length - 1) && hasRestParam(params)\n            }\n          });\n\n          return [splittedParams];\n        }\n      }\n\n      return _splitParams(params, 0, []);\n    }\n\n    /**\n     * Test whether two signatures have a conflicting signature\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {boolean} Returns true when the signatures conflict, false otherwise.\n     */\n    function hasConflictingParams(signature1, signature2) {\n      var ii = Math.max(signature1.params.length, signature2.params.length);\n\n      for (var i = 0; i < ii; i++) {\n        var typesNames1 = getExpectedTypeNames(signature1, i, true);\n        var typesNames2 = getExpectedTypeNames(signature2, i, true);\n\n        if (!hasOverlap(typesNames1, typesNames2)) {\n          return false;\n        }\n      }\n\n      var len1 = signature1.params.length;\n      var len2 = signature2.params.length;\n      var restParam1 = hasRestParam(signature1.params);\n      var restParam2 = hasRestParam(signature2.params);\n\n      return restParam1\n          ? restParam2 ? (len1 === len2) : (len2 >= len1)\n          : restParam2 ? (len1 >= len2)  : (len1 === len2)\n    }\n\n    /**\n     * Create a typed function\n     * @param {String} name               The name for the typed function\n     * @param {Object.<string, function>} signaturesMap\n     *                                    An object with one or\n     *                                    multiple signatures as key, and the\n     *                                    function corresponding to the\n     *                                    signature as value.\n     * @return {function}  Returns the created typed function.\n     */\n    function createTypedFunction(name, signaturesMap) {\n      if (Object.keys(signaturesMap).length === 0) {\n        throw new SyntaxError('No signatures provided');\n      }\n\n      // parse the signatures, and check for conflicts\n      var parsedSignatures = [];\n      Object.keys(signaturesMap)\n          .map(function (signature) {\n            return parseSignature(signature, signaturesMap[signature], typed.conversions);\n          })\n          .filter(notNull)\n          .forEach(function (parsedSignature) {\n            // check whether this parameter conflicts with already parsed signatures\n            var conflictingSignature = findInArray(parsedSignatures, function (s) {\n              return hasConflictingParams(s, parsedSignature)\n            });\n            if (conflictingSignature) {\n              throw new TypeError('Conflicting signatures \"' +\n                  stringifyParams(conflictingSignature.params) + '\" and \"' +\n                  stringifyParams(parsedSignature.params) + '\".');\n            }\n\n            parsedSignatures.push(parsedSignature);\n          });\n\n      // split and filter the types of the signatures, and then order them\n      var signatures = flatMap(parsedSignatures, function (parsedSignature) {\n        var params = parsedSignature ? splitParams(parsedSignature.params, false) : []\n\n        return params.map(function (params) {\n          return {\n            params: params,\n            fn: parsedSignature.fn\n          };\n        });\n      }).filter(notNull);\n\n      signatures.sort(compareSignatures);\n\n      // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n      var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n      var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n      var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n      var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n      var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n      var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n      var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;\n\n      // compile the tests\n      var tests = signatures.map(function (signature) {\n        return compileTests(signature.params);\n      });\n\n      var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n      var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n      var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n      var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n      var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n      var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n\n      var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n      var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n      var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n      var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n      var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n      var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;\n\n      // compile the functions\n      var fns = signatures.map(function(signature) {\n        return compileArgsPreprocessing(signature.params, signature.fn);\n      });\n\n      var fn0 = ok0 ? fns[0] : undef;\n      var fn1 = ok1 ? fns[1] : undef;\n      var fn2 = ok2 ? fns[2] : undef;\n      var fn3 = ok3 ? fns[3] : undef;\n      var fn4 = ok4 ? fns[4] : undef;\n      var fn5 = ok5 ? fns[5] : undef;\n\n      var len0 = ok0 ? signatures[0].params.length : -1;\n      var len1 = ok1 ? signatures[1].params.length : -1;\n      var len2 = ok2 ? signatures[2].params.length : -1;\n      var len3 = ok3 ? signatures[3].params.length : -1;\n      var len4 = ok4 ? signatures[4].params.length : -1;\n      var len5 = ok5 ? signatures[5].params.length : -1;\n\n      // simple and generic, but also slow\n      var iStart = allOk ? 6 : 0;\n      var iEnd = signatures.length;\n      var generic = function generic() {\n        'use strict';\n\n        for (var i = iStart; i < iEnd; i++) {\n          if (tests[i](arguments)) {\n            return fns[i].apply(this, arguments);\n          }\n        }\n\n        throw createError(name, arguments, signatures);\n      }\n\n      // create the typed function\n      // fast, specialized version. Falls back to the slower, generic one if needed\n      var fn = function fn(arg0, arg1) {\n        'use strict';\n\n        if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(fn, arguments); }\n        if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(fn, arguments); }\n        if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(fn, arguments); }\n        if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(fn, arguments); }\n        if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(fn, arguments); }\n        if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(fn, arguments); }\n\n        return generic.apply(fn, arguments);\n      }\n\n      // attach name the typed function\n      try {\n        Object.defineProperty(fn, 'name', {value: name});\n      }\n      catch (err) {\n        // old browsers do not support Object.defineProperty and some don't support setting the name property\n        // the function name is not essential for the functioning, it's mostly useful for debugging,\n        // so it's fine to have unnamed functions.\n      }\n\n      // attach signatures to the function\n      fn.signatures = createSignaturesMap(signatures);\n\n      return fn;\n    }\n\n    /**\n     * Test whether a type should be NOT be ignored\n     * @param {string} typeName\n     * @return {boolean}\n     */\n    function notIgnore(typeName) {\n      return typed.ignore.indexOf(typeName) === -1;\n    }\n\n    /**\n     * trim a string\n     * @param {string} str\n     * @return {string}\n     */\n    function trim(str) {\n      return str.trim();\n    }\n\n    /**\n     * Test whether a string is not empty\n     * @param {string} str\n     * @return {boolean}\n     */\n    function notEmpty(str) {\n      return !!str;\n    }\n\n    /**\n     * test whether a value is not strict equal to null\n     * @param {*} value\n     * @return {boolean}\n     */\n    function notNull(value) {\n      return value !== null;\n    }\n\n    /**\n     * Test whether a parameter has no types defined\n     * @param {Param} param\n     * @return {boolean}\n     */\n    function isInvalidParam (param) {\n      return param.types.length === 0;\n    }\n\n    /**\n     * Return all but the last items of an array\n     * @param {Array} arr\n     * @return {Array}\n     */\n    function initial(arr) {\n      return arr.slice(0, arr.length - 1);\n    }\n\n    /**\n     * return the last item of an array\n     * @param {Array} arr\n     * @return {*}\n     */\n    function last(arr) {\n      return arr[arr.length - 1];\n    }\n\n    /**\n     * Slice an array or function Arguments\n     * @param {Array | Arguments | IArguments} arr\n     * @param {number} start\n     * @param {number} [end]\n     * @return {Array}\n     */\n    function slice(arr, start, end) {\n      return Array.prototype.slice.call(arr, start, end);\n    }\n\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n\n    /**\n     * Test whether two arrays have overlapping items\n     * @param {Array} array1\n     * @param {Array} array2\n     * @return {boolean} Returns true when at least one item exists in both arrays\n     */\n    function hasOverlap(array1, array2) {\n      for (var i = 0; i < array1.length; i++) {\n        if (contains(array2, array1[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Return the first item from an array for which test(arr[i]) returns true\n     * @param {Array} arr\n     * @param {function} test\n     * @return {* | undefined} Returns the first matching item\n     *                         or undefined when there is no match\n     */\n    function findInArray(arr, test) {\n      for (var i = 0; i < arr.length; i++) {\n        if (test(arr[i])) {\n          return arr[i];\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * Filter unique items of an array with strings\n     * @param {string[]} arr\n     * @return {string[]}\n     */\n    function uniq(arr) {\n      var entries = {}\n      for (var i = 0; i < arr.length; i++) {\n        entries[arr[i]] = true;\n      }\n      return Object.keys(entries);\n    }\n\n    /**\n     * Flat map the result invoking a callback for every item in an array.\n     * https://gist.github.com/samgiles/762ee337dff48623e729\n     * @param {Array} arr\n     * @param {function} callback\n     * @return {Array}\n     */\n    function flatMap(arr, callback) {\n      return Array.prototype.concat.apply([], arr.map(callback));\n    }\n\n    /**\n     * Retrieve the function name from a set of typed functions,\n     * and check whether the name of all functions match (if given)\n     * @param {function[]} fns\n     */\n    function getName (fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // check whether the names are the same when defined\n        if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {\n          if (name === '') {\n            name = fn.name;\n          }\n          else if (name !== fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    }\n\n    // extract and merge all signatures of a list with typed functions\n    function extractSignatures(fns) {\n      var err;\n      var signaturesMap = {};\n\n      function validateUnique(_signature, _fn) {\n        if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {\n          err = new Error('Signature \"' + _signature + '\" is defined twice');\n          err.data = {signature: _signature};\n          throw err;\n          // else: both signatures point to the same function, that's fine\n        }\n      }\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // test whether this is a typed-function\n        if (typeof fn.signatures === 'object') {\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              validateUnique(signature, fn.signatures[signature]);\n              signaturesMap[signature] = fn.signatures[signature];\n            }\n          }\n        }\n        else if (typeof fn.signature === 'string') {\n          validateUnique(fn.signature, fn);\n          signaturesMap[fn.signature] = fn;\n        }\n        else {\n          err = new TypeError('Function is no typed-function (index: ' + i + ')');\n          err.data = {index: i};\n          throw err;\n        }\n      }\n\n      return signaturesMap;\n    }\n\n    typed = createTypedFunction('typed', {\n      'string, Object': createTypedFunction,\n      'Object': function (signaturesMap) {\n        // find existing name\n        var fns = [];\n        for (var signature in signaturesMap) {\n          if (signaturesMap.hasOwnProperty(signature)) {\n            fns.push(signaturesMap[signature]);\n          }\n        }\n        var name = getName(fns);\n        return createTypedFunction(name, signaturesMap);\n      },\n      '...Function': function (fns) {\n        return createTypedFunction(getName(fns), extractSignatures(fns));\n      },\n      'string, ...Function': function (name, fns) {\n        return createTypedFunction(name, extractSignatures(fns));\n      }\n    });\n\n    typed.create = create;\n    typed.types = _types;\n    typed.conversions = _conversions;\n    typed.ignore = _ignore;\n    typed.convert = convert;\n    typed.find = find;\n\n    /**\n     * add a type\n     * @param {{name: string, test: function}} type\n     * @param {boolean} [beforeObjectTest=true]\n     *                          If true, the new test will be inserted before\n     *                          the test with name 'Object' (if any), since\n     *                          tests for Object match Array and classes too.\n     */\n    typed.addType = function (type, beforeObjectTest) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      if (beforeObjectTest !== false) {\n        for (var i = 0; i < typed.types.length; i++) {\n          if (typed.types[i].name === 'Object') {\n            typed.types.splice(i, 0, type);\n            return\n          }\n        }\n      }\n\n      typed.types.push(type);\n    };\n\n    // add a conversion\n    typed.addConversion = function (conversion) {\n      if (!conversion\n          || typeof conversion.from !== 'string'\n          || typeof conversion.to !== 'string'\n          || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n}));\n","import { isNumber } from './is';\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\n\nexport function isInteger(value) {\n  if (typeof value === 'boolean') {\n    return true;\n  }\n\n  return isFinite(value) ? value === Math.round(value) : false; // Note: we use ==, not ===, as we can have Booleans as well\n}\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var sign = /* #__PURE__ */Math.sign || function (x) {\n  if (x > 0) {\n    return 1;\n  } else if (x < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n/**\n * Calculate the base-2 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var log2 = /* #__PURE__ */Math.log2 || function log2(x) {\n  return Math.log(x) / Math.LN2;\n};\n/**\n * Calculate the base-10 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var log10 = /* #__PURE__ */Math.log10 || function log10(x) {\n  return Math.log(x) / Math.LN10;\n};\n/**\n * Calculate the natural logarithm of a number + 1\n * @param {number} x\n * @returns {number}\n */\n\nexport var log1p = /* #__PURE__ */Math.log1p || function (x) {\n  return Math.log(x + 1);\n};\n/**\n * Calculate cubic root for a number\n *\n * Code from es6-shim.js:\n *   https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L1564-L1577\n *\n * @param {number} x\n * @returns {number} Returns the cubic root of x\n */\n\nexport var cbrt = /* #__PURE__ */Math.cbrt || function cbrt(x) {\n  if (x === 0) {\n    return x;\n  }\n\n  var negate = x < 0;\n  var result;\n\n  if (negate) {\n    x = -x;\n  }\n\n  if (isFinite(x)) {\n    result = Math.exp(Math.log(x) / 3); // from https://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n\n    result = (x / (result * result) + 2 * result) / 3;\n  } else {\n    result = x;\n  }\n\n  return negate ? -result : result;\n};\n/**\n * Calculates exponentiation minus 1\n * @param {number} x\n * @return {number} res\n */\n\nexport var expm1 = /* #__PURE__ */Math.expm1 || function expm1(x) {\n  return x >= 2e-4 || x <= -2e-4 ? Math.exp(x) - 1 : x + x * x / 2 + x * x * x / 6;\n};\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lowerExp` and `upperExp` bounds, and\n *                                          uses exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default,\n *                                          not rounding any digits.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12.071, {notation: 'fixed'})                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\n\nexport function format(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (value === Infinity) {\n    return 'Infinity';\n  } else if (value === -Infinity) {\n    return '-Infinity';\n  } else if (isNaN(value)) {\n    return 'NaN';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if (isNumber(options)) {\n      precision = options;\n    } else if (isNumber(options.precision)) {\n      precision = options.precision;\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision);\n\n    case 'exponential':\n      return toExponential(value, precision);\n\n    case 'engineering':\n      return toEngineering(value, precision);\n\n    case 'auto':\n      // remove trailing zeros after the decimal point\n      return toPrecision(value, precision, options && options).replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return digits !== '.' ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n}\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\n\nexport function splitNumber(value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value);\n  }\n\n  var sign = match[1];\n  var digits = match[2];\n  var exponent = parseFloat(match[4] || '0');\n  var dot = digits.indexOf('.');\n  exponent += dot !== -1 ? dot - 1 : digits.length - 1;\n  var coefficients = digits.replace('.', '') // remove the dot (must be removed before removing leading zeros)\n  .replace(/^0*/, function (zeros) {\n    // remove leading zeros, add their count to the exponent\n    exponent -= zeros.length;\n    return '';\n  }).replace(/0*$/, '') // remove trailing zeros\n  .split('').map(function (d) {\n    return parseInt(d);\n  });\n\n  if (coefficients.length === 0) {\n    coefficients.push(0);\n    exponent++;\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  };\n}\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\n\nexport function toEngineering(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var split = splitNumber(value);\n  var rounded = roundDigits(split, precision);\n  var e = rounded.exponent;\n  var c = rounded.coefficients; // find nearest lower multiple of 3 for exponent\n\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;\n\n  if (isNumber(precision)) {\n    // add zeroes to give correct sig figs\n    while (precision > c.length || e - newExp + 1 > c.length) {\n      c.push(0);\n    }\n  } else {\n    // concatenate coefficients with necessary zeros\n    // add zeros if necessary (for example: 1e+8 -> 100e+6)\n    var missingZeros = Math.abs(e - newExp) - (c.length - 1);\n\n    for (var i = 0; i < missingZeros; i++) {\n      c.push(0);\n    }\n  } // find difference in exponents\n\n\n  var expDiff = Math.abs(e - newExp);\n  var decimalIdx = 1; // push decimal index over by expDiff times\n\n  while (expDiff > 0) {\n    decimalIdx++;\n    expDiff--;\n  } // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n\n\n  var decimals = c.slice(decimalIdx).join('');\n  var decimalVal = isNumber(precision) && decimals.length || decimals.match(/[1-9]/) ? '.' + decimals : '';\n  var str = c.slice(0, decimalIdx).join('') + decimalVal + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  return rounded.sign + str;\n}\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=undefined]  Optional number of decimals after the\n *                                        decimal point. null by default.\n */\n\nexport function toFixed(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var splitValue = splitNumber(value);\n  var rounded = typeof precision === 'number' ? roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n  // append zeros if needed\n\n  var pp = p + (precision || 0);\n\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  } // prepend zeros if needed\n\n\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  } // insert a dot if needed\n\n\n  if (p < c.length) {\n    c.splice(p, 0, p === 0 ? '0.' : '.');\n  }\n\n  return rounded.sign + c.join('');\n}\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\n\nexport function toExponential(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // round if needed, else create a clone\n\n\n  var split = splitNumber(value);\n  var rounded = precision ? roundDigits(split, precision) : split;\n  var c = rounded.coefficients;\n  var e = rounded.exponent; // append zeros if needed\n\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  } // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n\n\n  var first = c.shift();\n  return rounded.sign + first + (c.length > 0 ? '.' + c.join('') : '') + 'e' + (e >= 0 ? '+' : '') + e;\n}\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n *                                       By default:\n *                                         lowerExp = -3 (incl)\n *                                         upper = +5 (excl)\n * @return {string}\n */\n\nexport function toPrecision(value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // determine lower and upper bound for exponential notation.\n\n\n  var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n  var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5;\n  var split = splitNumber(value);\n  var rounded = precision ? roundDigits(split, precision) : split;\n\n  if (rounded.exponent < lowerExp || rounded.exponent >= upperExp) {\n    // exponential notation\n    return toExponential(value, precision);\n  } else {\n    var c = rounded.coefficients;\n    var e = rounded.exponent; // append trailing zeros\n\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    } // append trailing zeros\n    // TODO: simplify the next statement\n\n\n    c = c.concat(zeros(e - c.length + 1 + (c.length < precision ? precision - c.length : 0))); // prepend zeros\n\n    c = zeros(-e).concat(c);\n    var dot = e > 0 ? e : 0;\n\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n\n    return rounded.sign + c.join('');\n  }\n}\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\n\nexport function roundDigits(split, precision) {\n  // create a clone\n  var rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  };\n  var c = rounded.coefficients; // prepend zeros if needed\n\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n\n  if (c.length > precision) {\n    var removed = c.splice(precision, c.length - precision);\n\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n\n      while (c[i] === 10) {\n        c.pop();\n\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n\n        i--;\n        c[i]++;\n      }\n    }\n  }\n\n  return rounded;\n}\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\n\nfunction zeros(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n\n  return arr;\n}\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\n\n\nexport function digits(value) {\n  return value.toExponential().replace(/e.*$/, '') // remove exponential notation\n  .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n  .length;\n}\n/**\n * Minimum number added to one that makes the result different than one\n */\n\nexport var DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\n\nexport function nearlyEqual(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x === y;\n  }\n\n  if (x === y) {\n    return true;\n  } // NaN\n\n\n  if (isNaN(x) || isNaN(y)) {\n    return false;\n  } // at this point x and y should be finite\n\n\n  if (isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = Math.abs(x - y);\n\n    if (diff < DBL_EPSILON) {\n      return true;\n    } else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n    }\n  } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n  return false;\n}\n/**\n * Calculate the hyperbolic arccos of a number\n * @param {number} x\n * @return {number}\n */\n\nexport var acosh = Math.acosh || function (x) {\n  return Math.log(Math.sqrt(x * x - 1) + x);\n};\nexport var asinh = Math.asinh || function (x) {\n  return Math.log(Math.sqrt(x * x + 1) + x);\n};\n/**\n * Calculate the hyperbolic arctangent of a number\n * @param {number} x\n * @return {number}\n */\n\nexport var atanh = Math.atanh || function (x) {\n  return Math.log((1 + x) / (1 - x)) / 2;\n};\n/**\n * Calculate the hyperbolic cosine of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var cosh = Math.cosh || function (x) {\n  return (Math.exp(x) + Math.exp(-x)) / 2;\n};\n/**\n * Calculate the hyperbolic sine of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var sinh = Math.sinh || function (x) {\n  return (Math.exp(x) - Math.exp(-x)) / 2;\n};\n/**\n * Calculate the hyperbolic tangent of a number\n * @param {number} x\n * @returns {number}\n */\n\nexport var tanh = Math.tanh || function (x) {\n  var e = Math.exp(2 * x);\n  return (e - 1) / (e + 1);\n};","/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexport function format(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : value.gt(0) ? 'Infinity' : '-Infinity';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if (typeof options === 'number') {\n      precision = options;\n    } else if (options.precision) {\n      precision = options.precision;\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision);\n\n    case 'exponential':\n      return toExponential(value, precision);\n\n    case 'engineering':\n      return toEngineering(value, precision);\n\n    case 'auto':\n      {\n        // determine lower and upper bound for exponential notation.\n        // TODO: implement support for upper and lower to be BigNumbers themselves\n        var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n        var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5; // handle special case zero\n\n        if (value.isZero()) return '0'; // determine whether or not to output exponential notation\n\n        var str;\n        var rounded = value.toSignificantDigits(precision);\n        var exp = rounded.e;\n\n        if (exp >= lowerExp && exp < upperExp) {\n          // normal number notation\n          str = rounded.toFixed();\n        } else {\n          // exponential notation\n          str = toExponential(value, precision);\n        } // remove trailing zeros after the decimal point\n\n\n        return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          var digits = arguments[2];\n          var e = arguments[4];\n          return digits !== '.' ? digits + e : e;\n        });\n      }\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n}\n/**\n * Format a BigNumber in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {BigNumber | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\n\nexport function toEngineering(value, precision) {\n  // find nearest lower multiple of 3 for exponent\n  var e = value.e;\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3; // find difference in exponents, and calculate the value without exponent\n\n  var valueWithoutExp = value.mul(Math.pow(10, -newExp));\n  var valueStr = valueWithoutExp.toPrecision(precision);\n\n  if (valueStr.indexOf('e') !== -1) {\n    valueStr = valueWithoutExp.toString();\n  }\n\n  return valueStr + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n}\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\n\nexport function toExponential(value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  } else {\n    return value.toExponential();\n  }\n}\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=undefined] Optional number of decimals after the\n *                                       decimal point. Undefined by default.\n */\n\nexport function toFixed(value, precision) {\n  return value.toFixed(precision);\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { isBigNumber, isString, typeOf } from './is';\nimport { format as formatNumber } from './number';\nimport { format as formatBigNumber } from './bignumber/formatter';\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\n\nexport function endsWith(text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return text.substring(start, end) === search;\n}\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7)                // '0.2857142857142857'\n *     math.format(math.pi, 3)         // '3.14'\n *     math.format(new Complex(2, 3))  // '2 + 3i'\n *     math.format('hello')            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\n\nexport function format(value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options);\n  }\n\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options);\n  } // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n\n\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return value.s * value.n + '/' + value.d;\n    } else {\n      // output as decimal, like '0.(3)'\n      return value.toString();\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n\n  if (isString(value)) {\n    return '\"' + value + '\"';\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function';\n  }\n\n  if (value && _typeof(value) === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    } else if (value && value.toString(options) !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString(options);\n    } else {\n      var entries = Object.keys(value).map(function (key) {\n        return '\"' + key + '\": ' + format(value[key], options);\n      });\n      return '{' + entries.join(', ') + '}';\n    }\n  }\n\n  return String(value);\n}\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\n\nexport function stringify(value) {\n  var text = String(value);\n  var escaped = '';\n  var i = 0;\n\n  while (i < text.length) {\n    var c = text.charAt(i);\n\n    if (c === '\\\\') {\n      escaped += c;\n      i++;\n      c = text.charAt(i);\n\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\'; // no valid escape character -> escape it\n      }\n\n      escaped += c;\n    } else if (c === '\"') {\n      escaped += '\\\\\"';\n    } else {\n      escaped += c;\n    }\n\n    i++;\n  }\n\n  return '\"' + escaped + '\"';\n}\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\n\nexport function escape(value) {\n  var text = String(value);\n  text = text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return text;\n}\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\n\nfunction formatArray(array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n\n    for (var i = 0; i < len; i++) {\n      if (i !== 0) {\n        str += ', ';\n      }\n\n      str += formatArray(array[i], options);\n    }\n\n    str += ']';\n    return str;\n  } else {\n    return format(array, options);\n  }\n}\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction looksLikeFraction(value) {\n  return value && _typeof(value) === 'object' && typeof value.s === 'number' && typeof value.n === 'number' && typeof value.d === 'number' || false;\n}\n/**\n * Compare two strings\n * @param {string} x\n * @param {string} y\n * @returns {number}\n */\n\n\nexport function compareText(x, y) {\n  // we don't want to convert numbers to string, only accept string input\n  if (!isString(x)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + typeOf(x) + ', index: 0)');\n  }\n\n  if (!isString(y)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + typeOf(y) + ', index: 1)');\n  }\n\n  return x === y ? 0 : x > y ? 1 : -1;\n}","/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nexport function DimensionError(actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.actual = actual;\n  this.expected = expected;\n  this.relation = relation;\n  this.message = 'Dimension mismatch (' + (Array.isArray(actual) ? '[' + actual.join(', ') + ']' : actual) + ' ' + (this.relation || '!=') + ' ' + (Array.isArray(expected) ? '[' + expected.join(', ') + ']' : expected) + ')';\n  this.stack = new Error().stack;\n}\nDimensionError.prototype = new RangeError();\nDimensionError.prototype.constructor = RangeError;\nDimensionError.prototype.name = 'DimensionError';\nDimensionError.prototype.isDimensionError = true;","/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nexport function IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.index = index;\n\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  } else {\n    this.min = min;\n    this.max = max;\n  }\n\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  } else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  } else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n\n  this.stack = new Error().stack;\n}\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;","import { isInteger } from './number';\nimport { isNumber } from './is';\nimport { format } from './string';\nimport { DimensionError } from '../error/DimensionError';\nimport { IndexError } from '../error/IndexError';\n/**\n * Calculate the size of a multi dimensional array.\n * This function checks the size of the first entry, it does not validate\n * whether all dimensions match. (use function `validate` for that)\n * @param {Array} x\n * @Return {Number[]} size\n */\n\nexport function arraySize(x) {\n  var s = [];\n\n  while (Array.isArray(x)) {\n    s.push(x.length);\n    x = x[0];\n  }\n\n  return s;\n}\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @param {number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\n\nfunction _validate(array, size, dim) {\n  var i;\n  var len = array.length;\n\n  if (len !== size[dim]) {\n    throw new DimensionError(len, size[dim]);\n  }\n\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    var dimNext = dim + 1;\n\n    for (i = 0; i < len; i++) {\n      var child = array[i];\n\n      if (!Array.isArray(child)) {\n        throw new DimensionError(size.length - 1, size.length, '<');\n      }\n\n      _validate(array[i], size, dimNext);\n    }\n  } else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (Array.isArray(array[i])) {\n        throw new DimensionError(size.length + 1, size.length, '>');\n      }\n    }\n  }\n}\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\n\n\nexport function validate(array, size) {\n  var isScalar = size.length === 0;\n\n  if (isScalar) {\n    // scalar\n    if (Array.isArray(array)) {\n      throw new DimensionError(array.length, 0);\n    }\n  } else {\n    // array\n    _validate(array, size, 0);\n  }\n}\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * when length is provided\n * @param {number} index    Zero-based index\n * @param {number} [length] Length of the array\n */\n\nexport function validateIndex(index, length) {\n  if (!isNumber(index) || !isInteger(index)) {\n    throw new TypeError('Index must be an integer (value: ' + index + ')');\n  }\n\n  if (index < 0 || typeof length === 'number' && index >= length) {\n    throw new IndexError(index, length);\n  }\n}\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array} array         Array to be resized\n * @param {Array.<number>} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. Specify for example `null`,\n *                              to clearly see entries that are not explicitly\n *                              set.\n * @return {Array} array         The resized array\n */\n\nexport function resize(array, size, defaultValue) {\n  // TODO: add support for scalars, having size=[] ?\n  // check the type of the arguments\n  if (!Array.isArray(array) || !Array.isArray(size)) {\n    throw new TypeError('Array expected');\n  }\n\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported');\n  } // check whether size contains positive integers\n\n\n  size.forEach(function (value) {\n    if (!isNumber(value) || !isInteger(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + format(size) + ')');\n    }\n  }); // recursively resize the array\n\n  var _defaultValue = defaultValue !== undefined ? defaultValue : 0;\n\n  _resize(array, size, 0, _defaultValue);\n\n  return array;\n}\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {number[]} size       Array with the size of each dimension\n * @param {number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\n\nfunction _resize(array, size, dim, defaultValue) {\n  var i;\n  var elem;\n  var oldLen = array.length;\n  var newLen = size[dim];\n  var minLen = Math.min(oldLen, newLen); // apply new length\n\n  array.length = newLen;\n\n  if (dim < size.length - 1) {\n    // non-last dimension\n    var dimNext = dim + 1; // resize existing child arrays\n\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i];\n\n      if (!Array.isArray(elem)) {\n        elem = [elem]; // add a dimension\n\n        array[i] = elem;\n      }\n\n      _resize(elem, size, dimNext, defaultValue);\n    } // create new child arrays\n\n\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = [];\n      array[i] = elem; // resize new child array\n\n      _resize(elem, size, dimNext, defaultValue);\n    }\n  } else {\n    // last dimension\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (Array.isArray(array[i])) {\n        array[i] = array[i][0];\n      }\n    } // fill new elements with the default value\n\n\n    for (i = minLen; i < newLen; i++) {\n      array[i] = defaultValue;\n    }\n  }\n}\n/**\n * Re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\n\n\nexport function reshape(array, sizes) {\n  var flatArray = flatten(array);\n  var newArray;\n\n  function product(arr) {\n    return arr.reduce(function (prev, curr) {\n      return prev * curr;\n    });\n  }\n\n  if (!Array.isArray(array) || !Array.isArray(sizes)) {\n    throw new TypeError('Array expected');\n  }\n\n  if (sizes.length === 0) {\n    throw new DimensionError(0, product(arraySize(array)), '!=');\n  }\n\n  var totalSize = 1;\n\n  for (var sizeIndex = 0; sizeIndex < sizes.length; sizeIndex++) {\n    totalSize *= sizes[sizeIndex];\n  }\n\n  if (flatArray.length !== totalSize) {\n    throw new DimensionError(product(sizes), product(arraySize(array)), '!=');\n  }\n\n  try {\n    newArray = _reshape(flatArray, sizes);\n  } catch (e) {\n    if (e instanceof DimensionError) {\n      throw new DimensionError(product(sizes), product(arraySize(array)), '!=');\n    }\n\n    throw e;\n  }\n\n  return newArray;\n}\n/**\n * Iteratively re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n */\n\nfunction _reshape(array, sizes) {\n  // testing if there are enough elements for the requested shape\n  var tmpArray = array;\n  var tmpArray2; // for each dimensions starting by the last one and ignoring the first one\n\n  for (var sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {\n    var size = sizes[sizeIndex];\n    tmpArray2 = []; // aggregate the elements of the current tmpArray in elements of the requested size\n\n    var length = tmpArray.length / size;\n\n    for (var i = 0; i < length; i++) {\n      tmpArray2.push(tmpArray.slice(i * size, (i + 1) * size));\n    } // set it as the new tmpArray for the next loop turn or for return\n\n\n    tmpArray = tmpArray2;\n  }\n\n  return tmpArray;\n}\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n */\n\n\nexport function squeeze(array, size) {\n  var s = size || arraySize(array); // squeeze outer dimensions\n\n  while (Array.isArray(array) && array.length === 1) {\n    array = array[0];\n    s.shift();\n  } // find the first dimension to be squeezed\n\n\n  var dims = s.length;\n\n  while (s[dims - 1] === 1) {\n    dims--;\n  } // squeeze inner dimensions\n\n\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0);\n    s.length = dims;\n  }\n\n  return array;\n}\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\n\nfunction _squeeze(array, dims, dim) {\n  var i, ii;\n\n  if (dim < dims) {\n    var next = dim + 1;\n\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next);\n    }\n  } else {\n    while (Array.isArray(array)) {\n      array = array[0];\n    }\n  }\n\n  return array;\n}\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n *\n * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n *\n * @param {Array} array\n * @param {number} dims       Desired number of dimensions of the array\n * @param {number} [outer]    Number of outer dimensions to be added\n * @param {Array} [size] Current size of array.\n * @returns {Array} returns the array itself\n * @private\n */\n\n\nexport function unsqueeze(array, dims, outer, size) {\n  var s = size || arraySize(array); // unsqueeze outer dimensions\n\n  if (outer) {\n    for (var i = 0; i < outer; i++) {\n      array = [array];\n      s.unshift(1);\n    }\n  } // unsqueeze inner dimensions\n\n\n  array = _unsqueeze(array, dims, 0);\n\n  while (s.length < dims) {\n    s.push(1);\n  }\n\n  return array;\n}\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\n\nfunction _unsqueeze(array, dims, dim) {\n  var i, ii;\n\n  if (Array.isArray(array)) {\n    var next = dim + 1;\n\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next);\n    }\n  } else {\n    for (var d = dim; d < dims; d++) {\n      array = [array];\n    }\n  }\n\n  return array;\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n */\n\n\nexport function flatten(array) {\n  if (!Array.isArray(array)) {\n    // if not an array, return as is\n    return array;\n  }\n\n  var flat = [];\n  array.forEach(function callback(value) {\n    if (Array.isArray(value)) {\n      value.forEach(callback); // traverse through sub-arrays recursively\n    } else {\n      flat.push(value);\n    }\n  });\n  return flat;\n}\n/**\n * A safe map\n * @param {Array} array\n * @param {function} callback\n */\n\nexport function map(array, callback) {\n  return Array.prototype.map.call(array, callback);\n}\n/**\n * A safe forEach\n * @param {Array} array\n * @param {function} callback\n */\n\nexport function forEach(array, callback) {\n  Array.prototype.forEach.call(array, callback);\n}\n/**\n * A safe filter\n * @param {Array} array\n * @param {function} callback\n */\n\nexport function filter(array, callback) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, callback);\n}\n/**\n * Filter values in a callback given a regular expression\n * @param {Array} array\n * @param {RegExp} regexp\n * @return {Array} Returns the filtered array\n * @private\n */\n\nexport function filterRegExp(array, regexp) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, function (entry) {\n    return regexp.test(entry);\n  });\n}\n/**\n * A safe join\n * @param {Array} array\n * @param {string} separator\n */\n\nexport function join(array, separator) {\n  return Array.prototype.join.call(array, separator);\n}\n/**\n * Assign a numeric identifier to every element of a sorted array\n * @param {Array} a  An array\n * @return {Array} An array of objects containing the original value and its identifier\n */\n\nexport function identify(a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected');\n  }\n\n  if (a.length === 0) {\n    return a;\n  }\n\n  var b = [];\n  var count = 0;\n  b[0] = {\n    value: a[0],\n    identifier: 0\n  };\n\n  for (var i = 1; i < a.length; i++) {\n    if (a[i] === a[i - 1]) {\n      count++;\n    } else {\n      count = 0;\n    }\n\n    b.push({\n      value: a[i],\n      identifier: count\n    });\n  }\n\n  return b;\n}\n/**\n * Remove the numeric identifier from the elements\n * @param {array} a  An array\n * @return {array} An array of values without identifiers\n */\n\nexport function generalize(a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected');\n  }\n\n  if (a.length === 0) {\n    return a;\n  }\n\n  var b = [];\n\n  for (var i = 0; i < a.length; i++) {\n    b.push(a[i].value);\n  }\n\n  return b;\n}\n/**\n * Check the datatype of a given object\n * This is a low level implementation that should only be used by\n * parent Matrix classes such as SparseMatrix or DenseMatrix\n * This method does not validate Array Matrix shape\n * @param {Array} array\n * @param {function} typeOf   Callback function to use to determine the type of a value\n * @return string\n */\n\nexport function getArrayDataType(array, typeOf) {\n  var type; // to hold type info\n\n  var length = 0; // to hold length value to ensure it has consistent sizes\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n    var isArray = Array.isArray(item); // Saving the target matrix row size\n\n    if (i === 0 && isArray) {\n      length = item.length;\n    } // If the current item is an array but the length does not equal the targetVectorSize\n\n\n    if (isArray && item.length !== length) {\n      return undefined;\n    }\n\n    var itemType = isArray ? getArrayDataType(item, typeOf) // recurse into a nested array\n    : typeOf(item);\n\n    if (type === undefined) {\n      type = itemType; // first item\n    } else if (type !== itemType) {\n      return 'mixed';\n    } else {// we're good, everything has the same type so far\n    }\n  }\n\n  return type;\n}\n/**\n * Return the last item from an array\n * @param array\n * @returns {*}\n */\n\nexport function last(array) {\n  return array[array.length - 1];\n}\n/**\n * Get all but the last element of array.\n */\n\nexport function initial(array) {\n  return array.slice(0, array.length - 1);\n}\n/**\n * Test whether an array or string contains an item\n * @param {Array | string} array\n * @param {*} item\n * @return {boolean}\n */\n\nexport function contains(array, item) {\n  return array.indexOf(item) !== -1;\n}","import { contains } from './array';\nimport { pickShallow } from './object';\n/**\n * Create a factory function, which can be used to inject dependencies.\n *\n * The created functions are memoized, a consecutive call of the factory\n * with the exact same inputs will return the same function instance.\n * The memoized cache is exposed on `factory.cache` and can be cleared\n * if needed.\n *\n * Example:\n *\n *     const name = 'log'\n *     const dependencies = ['config', 'typed', 'divideScalar', 'Complex']\n *\n *     export const createLog = factory(name, dependencies, ({ typed, config, divideScalar, Complex }) => {\n *       // ... create the function log here and return it\n *     }\n *\n * @param {string} name           Name of the function to be created\n * @param {string[]} dependencies The names of all required dependencies\n * @param {function} create       Callback function called with an object with all dependencies\n * @param {Object} [meta]         Optional object with meta information that will be attached\n *                                to the created factory function as property `meta`.\n * @returns {function}\n */\n\nexport function factory(name, dependencies, create, meta) {\n  function assertAndCreate(scope) {\n    // we only pass the requested dependencies to the factory function\n    // to prevent functions to rely on dependencies that are not explicitly\n    // requested.\n    var deps = pickShallow(scope, dependencies.map(stripOptionalNotation));\n    assertDependencies(name, dependencies, scope);\n    return create(deps);\n  }\n\n  assertAndCreate.isFactory = true;\n  assertAndCreate.fn = name;\n  assertAndCreate.dependencies = dependencies.slice().sort();\n\n  if (meta) {\n    assertAndCreate.meta = meta;\n  }\n\n  return assertAndCreate;\n}\n/**\n * Sort all factories such that when loading in order, the dependencies are resolved.\n *\n * @param {Array} factories\n * @returns {Array} Returns a new array with the sorted factories.\n */\n\nexport function sortFactories(factories) {\n  var factoriesByName = {};\n  factories.forEach(function (factory) {\n    factoriesByName[factory.fn] = factory;\n  });\n\n  function containsDependency(factory, dependency) {\n    // TODO: detect circular references\n    if (isFactory(factory)) {\n      if (contains(factory.dependencies, dependency.fn || dependency.name)) {\n        return true;\n      }\n\n      if (factory.dependencies.some(function (d) {\n        return containsDependency(factoriesByName[d], dependency);\n      })) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var sorted = [];\n\n  function addFactory(factory) {\n    var index = 0;\n\n    while (index < sorted.length && !containsDependency(sorted[index], factory)) {\n      index++;\n    }\n\n    sorted.splice(index, 0, factory);\n  } // sort regular factory functions\n\n\n  factories.filter(isFactory).forEach(addFactory); // sort legacy factory functions AFTER the regular factory functions\n\n  factories.filter(function (factory) {\n    return !isFactory(factory);\n  }).forEach(addFactory);\n  return sorted;\n} // TODO: comment or cleanup if unused in the end\n\nexport function create(factories) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  sortFactories(factories).forEach(function (factory) {\n    return factory(scope);\n  });\n  return scope;\n}\n/**\n * Test whether an object is a factory. This is the case when it has\n * properties name, dependencies, and a function create.\n * @param {*} obj\n * @returns {boolean}\n */\n\nexport function isFactory(obj) {\n  return typeof obj === 'function' && typeof obj.fn === 'string' && Array.isArray(obj.dependencies);\n}\n/**\n * Assert that all dependencies of a list with dependencies are available in the provided scope.\n *\n * Will throw an exception when there are dependencies missing.\n *\n * @param {string} name   Name for the function to be created. Used to generate a useful error message\n * @param {string[]} dependencies\n * @param {Object} scope\n */\n\nexport function assertDependencies(name, dependencies, scope) {\n  var allDefined = dependencies.filter(function (dependency) {\n    return !isOptionalDependency(dependency);\n  }) // filter optionals\n  .every(function (dependency) {\n    return scope[dependency] !== undefined;\n  });\n\n  if (!allDefined) {\n    var missingDependencies = dependencies.filter(function (dependency) {\n      return scope[dependency] === undefined;\n    }); // TODO: create a custom error class for this, a MathjsError or something like that\n\n    throw new Error(\"Cannot create function \\\"\".concat(name, \"\\\", \") + \"some dependencies are missing: \".concat(missingDependencies.map(function (d) {\n      return \"\\\"\".concat(d, \"\\\"\");\n    }).join(', '), \".\"));\n  }\n}\nexport function isOptionalDependency(dependency) {\n  return dependency && dependency[0] === '?';\n}\nexport function stripOptionalNotation(dependency) {\n  return dependency && dependency[0] === '?' ? dependency.slice(1) : dependency;\n}","/**\n * Create a typed-function which checks the types of the arguments and\n * can match them against multiple provided signatures. The typed-function\n * automatically converts inputs in order to find a matching signature.\n * Typed functions throw informative errors in case of wrong input arguments.\n *\n * See the library [typed-function](https://github.com/josdejong/typed-function)\n * for detailed documentation.\n *\n * Syntax:\n *\n *     math.typed(name, signatures) : function\n *     math.typed(signatures) : function\n *\n * Examples:\n *\n *     // create a typed function with multiple types per argument (type union)\n *     const fn2 = typed({\n *       'number | boolean': function (b) {\n *         return 'b is a number or boolean'\n *       },\n *       'string, number | boolean': function (a, b) {\n *         return 'a is a string, b is a number or boolean'\n *       }\n *     })\n *\n *     // create a typed function with an any type argument\n *     const log = typed({\n *       'string, any': function (event, data) {\n *         console.log('event: ' + event + ', data: ' + JSON.stringify(data))\n *       }\n *     })\n *\n * @param {string} [name]                          Optional name for the typed-function\n * @param {Object<string, function>} signatures   Object with one or multiple function signatures\n * @returns {function} The created typed-function.\n */\nimport { isAccessorNode, isArray, isArrayNode, isAssignmentNode, isBigNumber, isBlockNode, isBoolean, isChain, isComplex, isConditionalNode, isConstantNode, isDate, isDenseMatrix, isFraction, isFunction, isFunctionAssignmentNode, isFunctionNode, isHelp, isIndex, isIndexNode, isMatrix, isNode, isNull, isNumber, isObject, isObjectNode, isOperatorNode, isParenthesisNode, isRange, isRangeNode, isRegExp, isResultSet, isSparseMatrix, isString, isSymbolNode, isUndefined, isUnit } from '../../utils/is';\nimport typedFunction from 'typed-function';\nimport { digits } from '../../utils/number';\nimport { factory } from '../../utils/factory'; // returns a new instance of typed-function\n\nvar _createTyped2 = function _createTyped() {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  _createTyped2 = typedFunction.create;\n  return typedFunction;\n};\n\nvar dependencies = ['?BigNumber', '?Complex', '?DenseMatrix', '?Fraction'];\n/**\n * Factory function for creating a new typed instance\n * @param {Object} dependencies   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\n\nexport var createTyped = /* #__PURE__ */factory('typed', dependencies, function createTyped(_ref) {\n  var BigNumber = _ref.BigNumber,\n      Complex = _ref.Complex,\n      DenseMatrix = _ref.DenseMatrix,\n      Fraction = _ref.Fraction;\n\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n  // get a new instance of typed-function\n  var typed = _createTyped2(); // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n\n\n  typed.types = [{\n    name: 'number',\n    test: isNumber\n  }, {\n    name: 'Complex',\n    test: isComplex\n  }, {\n    name: 'BigNumber',\n    test: isBigNumber\n  }, {\n    name: 'Fraction',\n    test: isFraction\n  }, {\n    name: 'Unit',\n    test: isUnit\n  }, {\n    name: 'string',\n    test: isString\n  }, {\n    name: 'Chain',\n    test: isChain\n  }, {\n    name: 'Array',\n    test: isArray\n  }, {\n    name: 'Matrix',\n    test: isMatrix\n  }, {\n    name: 'DenseMatrix',\n    test: isDenseMatrix\n  }, {\n    name: 'SparseMatrix',\n    test: isSparseMatrix\n  }, {\n    name: 'Range',\n    test: isRange\n  }, {\n    name: 'Index',\n    test: isIndex\n  }, {\n    name: 'boolean',\n    test: isBoolean\n  }, {\n    name: 'ResultSet',\n    test: isResultSet\n  }, {\n    name: 'Help',\n    test: isHelp\n  }, {\n    name: 'function',\n    test: isFunction\n  }, {\n    name: 'Date',\n    test: isDate\n  }, {\n    name: 'RegExp',\n    test: isRegExp\n  }, {\n    name: 'null',\n    test: isNull\n  }, {\n    name: 'undefined',\n    test: isUndefined\n  }, {\n    name: 'AccessorNode',\n    test: isAccessorNode\n  }, {\n    name: 'ArrayNode',\n    test: isArrayNode\n  }, {\n    name: 'AssignmentNode',\n    test: isAssignmentNode\n  }, {\n    name: 'BlockNode',\n    test: isBlockNode\n  }, {\n    name: 'ConditionalNode',\n    test: isConditionalNode\n  }, {\n    name: 'ConstantNode',\n    test: isConstantNode\n  }, {\n    name: 'FunctionNode',\n    test: isFunctionNode\n  }, {\n    name: 'FunctionAssignmentNode',\n    test: isFunctionAssignmentNode\n  }, {\n    name: 'IndexNode',\n    test: isIndexNode\n  }, {\n    name: 'Node',\n    test: isNode\n  }, {\n    name: 'ObjectNode',\n    test: isObjectNode\n  }, {\n    name: 'OperatorNode',\n    test: isOperatorNode\n  }, {\n    name: 'ParenthesisNode',\n    test: isParenthesisNode\n  }, {\n    name: 'RangeNode',\n    test: isRangeNode\n  }, {\n    name: 'SymbolNode',\n    test: isSymbolNode\n  }, {\n    name: 'Object',\n    test: isObject\n  } // order 'Object' last, it matches on other classes too\n  ];\n  typed.conversions = [{\n    from: 'number',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      } // note: conversion from number to BigNumber can fail if x has >15 digits\n\n\n      if (digits(x) > 15) {\n        throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');\n      }\n\n      return new BigNumber(x);\n    }\n  }, {\n    from: 'number',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      return new Complex(x, 0);\n    }\n  }, {\n    from: 'number',\n    to: 'string',\n    convert: function convert(x) {\n      return x + '';\n    }\n  }, {\n    from: 'BigNumber',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      return new Complex(x.toNumber(), 0);\n    }\n  }, {\n    from: 'Fraction',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n    }\n  }, {\n    from: 'Fraction',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      return new Complex(x.valueOf(), 0);\n    }\n  }, {\n    from: 'number',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n\n      var f = new Fraction(x);\n\n      if (f.valueOf() !== x) {\n        throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');\n      }\n\n      return f;\n    }\n  }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf()\n    //  }\n    // }, {\n    from: 'string',\n    to: 'number',\n    convert: function convert(x) {\n      var n = Number(x);\n\n      if (isNaN(n)) {\n        throw new Error('Cannot convert \"' + x + '\" to a number');\n      }\n\n      return n;\n    }\n  }, {\n    from: 'string',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n\n      try {\n        return new BigNumber(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n\n      try {\n        return new Fraction(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Fraction');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      try {\n        return new Complex(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Complex');\n      }\n    }\n  }, {\n    from: 'boolean',\n    to: 'number',\n    convert: function convert(x) {\n      return +x;\n    }\n  }, {\n    from: 'boolean',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n\n      return new BigNumber(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n\n      return new Fraction(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'string',\n    convert: function convert(x) {\n      return String(x);\n    }\n  }, {\n    from: 'Array',\n    to: 'Matrix',\n    convert: function convert(array) {\n      if (!DenseMatrix) {\n        throwNoMatrix();\n      }\n\n      return new DenseMatrix(array);\n    }\n  }, {\n    from: 'Matrix',\n    to: 'Array',\n    convert: function convert(matrix) {\n      return matrix.valueOf();\n    }\n  }];\n  return typed;\n});\n\nfunction throwNoBignumber(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a BigNumber: no class 'BigNumber' provided\"));\n}\n\nfunction throwNoComplex(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Complex number: no class 'Complex' provided\"));\n}\n\nfunction throwNoMatrix() {\n  throw new Error('Cannot convert array into a Matrix: no class \\'DenseMatrix\\' provided');\n}\n\nfunction throwNoFraction(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Fraction, no class 'Fraction' provided.\"));\n}",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.2.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { name: '[object Decimal]' };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or Â±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is Â±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is Â±Infinity.\r\n      // Return x if both are Â±Infinity with different signs.\r\n      // Return NaN if both are Â±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is Â±Infinity or NaN, or y is NaN or Â±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is Â±Infinity or x is Â±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is Â±Infinity.\r\n      // Return x if both are Â±Infinity with the same sign.\r\n      // Return NaN if both are Â±Infinity with different signs.\r\n      // Return y if x is finite and y is Â±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '1e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, Â±Infinity or Â±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is Â±0 and y is Â±Infinity, or y is Â±0 and x is Â±Infinity.\r\n        ? NaN\r\n\r\n        // Return Â±Infinity if either is Â±Infinity.\r\n        // Return Â±0 if either is Â±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, Â±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, Â±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either Â±Infinity, NaN or Â±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n  // Add aliases to match BigDecimal method names.\r\n  // P.add = P.plus;\r\n  P.subtract = P.minus;\r\n  P.multiply = P.times;\r\n  P.divide = P.div;\r\n  P.remainder = P.mod;\r\n  P.compareTo = P.cmp;\r\n  P.negate = P.neg;\r\n   */\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, y,\r\n      len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return Â±0 if x is 0 or y is Â±Infinity, or return Â±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(Â±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // Â±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) return taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(Â±0, -0)               = Â±pi\r\n   * atan2(Â±0, +0)               = Â±0\r\n   * atan2(Â±0, -x)               = Â±pi for x > 0\r\n   * atan2(Â±0, x)                = Â±0 for x > 0\r\n   * atan2(-y, Â±0)               = -pi/2 for y > 0\r\n   * atan2(y, Â±0)                = pi/2 for y > 0\r\n   * atan2(Â±y, -Infinity)        = Â±pi for finite y > 0\r\n   * atan2(Â±y, +Infinity)        = Â±0 for finite y > 0\r\n   * atan2(Â±Infinity, x)         = Â±pi/2 for finite x\r\n   * atan2(Â±Infinity, -Infinity) = Â±3*pi/4\r\n   * atan2(Â±Infinity, +Infinity) = Â±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both Â±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is Â±Infinity or y is Â±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is Â±Infinity or x is Â±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (v instanceof Decimal) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory';\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nexport var createBigNumberClass = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var on = _ref.on,\n      config = _ref.config;\n  var BigNumber = Decimal.clone({\n    precision: config.precision\n  });\n  /**\n   * Attach type information\n   */\n\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n\n\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n\n  return BigNumber;\n}, {\n  isClass: true\n});","/**\n * @license Complex.js v2.0.11 11/02/2016\n *\n * Copyright (c) 2016, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * var c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n\n(function(root) {\n\n  'use strict';\n\n  var cosh = function(x) {\n    return (Math.exp(x) + Math.exp(-x)) * 0.5;\n  };\n\n  var sinh = function(x) {\n    return (Math.exp(x) - Math.exp(-x)) * 0.5;\n  };\n\n  /**\n   * Calculates cos(x) - 1 using Taylor series if x is small.\n   *\n   * @param {number} x\n   * @returns {number} cos(x) - 1\n   */\n\n  var cosm1 = function(x) {\n    var limit = Math.PI/4;\n    if (x < -limit || x > limit) {\n      return (Math.cos(x) - 1.0);\n    }\n\n    var xx = x * x;\n    return xx *\n      (-0.5 + xx *\n        (1/24 + xx *\n          (-1/720 + xx *\n            (1/40320 + xx *\n              (-1/3628800 + xx *\n                (1/4790014600 + xx *\n                  (-1/87178291200 + xx *\n                    (1/20922789888000)\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n  };\n\n  var hypot = function(x, y) {\n\n    var a = Math.abs(x);\n    var b = Math.abs(y);\n\n    if (a < 3000 && b < 3000) {\n      return Math.sqrt(a * a + b * b);\n    }\n\n    if (a < b) {\n      a = b;\n      b = x / y;\n    } else {\n      b = y / x;\n    }\n    return a * Math.sqrt(1 + b * b);\n  };\n\n  var parser_exit = function() {\n    throw SyntaxError('Invalid Param');\n  };\n\n  /**\n   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n   *\n   * @param {number} a\n   * @param {number} b\n   * @returns {number}\n   */\n  function logHypot(a, b) {\n\n    var _a = Math.abs(a);\n    var _b = Math.abs(b);\n\n    if (a === 0) {\n      return Math.log(_b);\n    }\n\n    if (b === 0) {\n      return Math.log(_a);\n    }\n\n    if (_a < 3000 && _b < 3000) {\n      return Math.log(a * a + b * b) * 0.5;\n    }\n\n    /* I got 4 ideas to compute this property without overflow:\n     *\n     * Testing 1000000 times with random samples for a,b â [1, 1000000000] against a big decimal library to get an error estimate\n     *\n     * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n\n     Math.log(a * a + b * b) / 2\n\n     *\n     *\n     * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n\n     var fn = function(a, b) {\n     a = Math.abs(a);\n     b = Math.abs(b);\n     var t = Math.min(a, b);\n     a = Math.max(a, b);\n     t = t / a;\n\n     return Math.log(a) + Math.log(1 + t * t) / 2;\n     };\n\n     * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n\n     Math.log(a / Math.cos(Math.atan2(b, a)))\n\n     * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n\n     Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n\n     */\n\n    return Math.log(a / Math.cos(Math.atan2(b, a)));\n  }\n\n  var parse = function(a, b) {\n\n    var z = {'re': 0, 'im': 0};\n\n    if (a === undefined || a === null) {\n      z['re'] =\n              z['im'] = 0;\n    } else if (b !== undefined) {\n      z['re'] = a;\n      z['im'] = b;\n    } else\n      switch (typeof a) {\n\n        case 'object':\n\n          if ('im' in a && 're' in a) {\n            z['re'] = a['re'];\n            z['im'] = a['im'];\n          } else if ('abs' in a && 'arg' in a) {\n            if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['abs'] * Math.cos(a['arg']);\n            z['im'] = a['abs'] * Math.sin(a['arg']);\n          } else if ('r' in a && 'phi' in a) {\n            if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['r'] * Math.cos(a['phi']);\n            z['im'] = a['r'] * Math.sin(a['phi']);\n          } else if (a.length === 2) { // Quick array check\n            z['re'] = a[0];\n            z['im'] = a[1];\n          } else {\n            parser_exit();\n          }\n          break;\n\n        case 'string':\n\n          z['im'] = /* void */\n                  z['re'] = 0;\n\n          var tokens = a.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n          var plus = 1;\n          var minus = 0;\n\n          if (tokens === null) {\n            parser_exit();\n          }\n\n          for (var i = 0; i < tokens.length; i++) {\n\n            var c = tokens[i];\n\n            if (c === ' ' || c === '\\t' || c === '\\n') {\n              /* void */\n            } else if (c === '+') {\n              plus++;\n            } else if (c === '-') {\n              minus++;\n            } else if (c === 'i' || c === 'I') {\n\n              if (plus + minus === 0) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n                i++;\n              } else {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n              }\n              plus = minus = 0;\n\n            } else {\n\n              if (plus + minus === 0 || isNaN(c)) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n                i++;\n              } else {\n                z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n              }\n              plus = minus = 0;\n            }\n          }\n\n          // Still something on the stack\n          if (plus + minus > 0) {\n            parser_exit();\n          }\n          break;\n\n        case 'number':\n          z['im'] = 0;\n          z['re'] = a;\n          break;\n\n        default:\n          parser_exit();\n      }\n\n    if (isNaN(z['re']) || isNaN(z['im'])) {\n      // If a calculation is NaN, we treat it as NaN and don't throw\n      //parser_exit();\n    }\n\n    return z;\n  };\n\n  /**\n   * @constructor\n   * @returns {Complex}\n   */\n  function Complex(a, b) {\n\n    if (!(this instanceof Complex)) {\n      return new Complex(a, b);\n    }\n\n    var z = parse(a, b);\n\n    this['re'] = z['re'];\n    this['im'] = z['im'];\n  }\n\n  Complex.prototype = {\n\n    're': 0,\n    'im': 0,\n\n    /**\n     * Calculates the sign of a complex number, which is a normalized complex\n     *\n     * @returns {Complex}\n     */\n    'sign': function() {\n\n      var abs = this['abs']();\n\n      return new Complex(\n              this['re'] / abs,\n              this['im'] / abs);\n    },\n\n    /**\n     * Adds two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'add': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity + Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity + z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n              this['re'] + z['re'],\n              this['im'] + z['im']);\n    },\n\n    /**\n     * Subtracts two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'sub': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity - Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity - z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n              this['re'] - z['re'],\n              this['im'] - z['im']);\n    },\n\n    /**\n     * Multiplies two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'mul': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity * 0 = NaN\n      if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity * z = Infinity { where z != 0 }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      // Short circuit for real values\n      if (z['im'] === 0 && this['im'] === 0) {\n        return new Complex(this['re'] * z['re'], 0);\n      }\n\n      return new Complex(\n              this['re'] * z['re'] - this['im'] * z['im'],\n              this['re'] * z['im'] + this['im'] * z['re']);\n    },\n\n    /**\n     * Divides two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'div': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // 0 / 0 = NaN and Infinity / Infinity = NaN\n      if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity / 0 = Infinity\n      if (this['isInfinite']() || z['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      // 0 / Infinity = 0\n      if (this['isZero']() || z['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      a = this['re'];\n      b = this['im'];\n\n      var c = z['re'];\n      var d = z['im'];\n      var t, x;\n\n      if (0 === d) {\n        // Divisor is real\n        return new Complex(a / c, b / c);\n      }\n\n      if (Math.abs(c) < Math.abs(d)) {\n\n        x = c / d;\n        t = c * x + d;\n\n        return new Complex(\n                (a * x + b) / t,\n                (b * x - a) / t);\n\n      } else {\n\n        x = d / c;\n        t = d * x + c;\n\n        return new Complex(\n                (a + b * x) / t,\n                (b - a * x) / t);\n      }\n    },\n\n    /**\n     * Calculate the power of two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'pow': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      a = this['re'];\n      b = this['im'];\n\n      if (z['isZero']()) {\n        return Complex['ONE'];\n      }\n\n      // If the exponent is real\n      if (z['im'] === 0) {\n\n        if (b === 0 && a >= 0) {\n\n          return new Complex(Math.pow(a, z['re']), 0);\n\n        } else if (a === 0) { // If base is fully imaginary\n\n          switch ((z['re'] % 4 + 4) % 4) {\n            case 0:\n              return new Complex(Math.pow(b, z['re']), 0);\n            case 1:\n              return new Complex(0, Math.pow(b, z['re']));\n            case 2:\n              return new Complex(-Math.pow(b, z['re']), 0);\n            case 3:\n              return new Complex(0, -Math.pow(b, z['re']));\n          }\n        }\n      }\n\n      /* I couldn't find a good formula, so here is a derivation and optimization\n       *\n       * z_1^z_2 = (a + bi)^(c + di)\n       *         = exp((c + di) * log(a + bi)\n       *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n       * =>...\n       * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       *\n       * =>...\n       * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       *\n       * =>\n       * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n       * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n       *\n       */\n\n      if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {\n        return Complex['ZERO'];\n      }\n\n      var arg = Math.atan2(b, a);\n      var loh = logHypot(a, b);\n\n      a = Math.exp(z['re'] * loh - z['im'] * arg);\n      b = z['im'] * loh + z['re'] * arg;\n      return new Complex(\n              a * Math.cos(b),\n              a * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex square root\n     *\n     * @returns {Complex}\n     */\n    'sqrt': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var r = this['abs']();\n\n      var re, im;\n\n      if (a >= 0) {\n\n        if (b === 0) {\n          return new Complex(Math.sqrt(a), 0);\n        }\n\n        re = 0.5 * Math.sqrt(2.0 * (r + a));\n      } else {\n        re = Math.abs(b) / Math.sqrt(2 * (r - a));\n      }\n\n      if (a <= 0) {\n        im = 0.5 * Math.sqrt(2.0 * (r - a));\n      } else {\n        im = Math.abs(b) / Math.sqrt(2 * (r + a));\n      }\n\n      return new Complex(re, b < 0 ? -im : im);\n    },\n\n    /**\n     * Calculate the complex exponent\n     *\n     * @returns {Complex}\n     */\n    'exp': function() {\n\n      var tmp = Math.exp(this['re']);\n\n      if (this['im'] === 0) {\n        //return new Complex(tmp, 0);\n      }\n      return new Complex(\n              tmp * Math.cos(this['im']),\n              tmp * Math.sin(this['im']));\n    },\n\n    /**\n     * Calculate the complex exponent and subtracts one.\n     *\n     * This may be more accurate than `Complex(x).exp().sub(1)` if\n     * `x` is small.\n     *\n     * @returns {Complex}\n     */\n    'expm1': function() {\n\n      /**\n       * exp(a + i*b) - 1\n       = exp(a) * (cos(b) + j*sin(b)) - 1\n       = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n       */\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.expm1(a) * Math.cos(b) + cosm1(b),\n              Math.exp(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the natural log\n     *\n     * @returns {Complex}\n     */\n    'log': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0 && a > 0) {\n        //return new Complex(Math.log(a), 0);\n      }\n\n      return new Complex(\n              logHypot(a, b),\n              Math.atan2(b, a));\n    },\n\n    /**\n     * Calculate the magnitude of the complex number\n     *\n     * @returns {number}\n     */\n    'abs': function() {\n\n      return hypot(this['re'], this['im']);\n    },\n\n    /**\n     * Calculate the angle of the complex number\n     *\n     * @returns {number}\n     */\n    'arg': function() {\n\n      return Math.atan2(this['im'], this['re']);\n    },\n\n    /**\n     * Calculate the sine of the complex number\n     *\n     * @returns {Complex}\n     */\n    'sin': function() {\n\n      // sin(c) = (e^b - e^(-b)) / (2i)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.sin(a) * cosh(b),\n              Math.cos(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the cosine\n     *\n     * @returns {Complex}\n     */\n    'cos': function() {\n\n      // cos(z) = (e^b + e^(-b)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              Math.cos(a) * cosh(b),\n              -Math.sin(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the tangent\n     *\n     * @returns {Complex}\n     */\n    'tan': function() {\n\n      // tan(c) = (e^(ci) - e^(-ci)) / (i(e^(ci) + e^(-ci)))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) + cosh(b);\n\n      return new Complex(\n              Math.sin(a) / d,\n              sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cotangent\n     *\n     * @returns {Complex}\n     */\n    'cot': function() {\n\n      // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) - cosh(b);\n\n      return new Complex(\n              -Math.sin(a) / d,\n              sinh(b) / d);\n    },\n\n    /**\n     * Calculate the secant\n     *\n     * @returns {Complex}\n     */\n    'sec': function() {\n\n      // sec(c) = 2 / (e^(ci) + e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n              Math.cos(a) * cosh(b) / d,\n              Math.sin(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cosecans\n     *\n     * @returns {Complex}\n     */\n    'csc': function() {\n\n      // csc(c) = 2i / (e^(ci) - e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n              Math.sin(a) * cosh(b) / d,\n              -Math.cos(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the complex arcus sinus\n     *\n     * @returns {Complex}\n     */\n    'asin': function() {\n\n      // asin(c) = -i * log(ci + sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n              b * b - a * a + 1,\n              -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n              t1['re'] - b,\n              t1['im'] + a)['log']();\n\n      return new Complex(t2['im'], -t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cosinus\n     *\n     * @returns {Complex}\n     */\n    'acos': function() {\n\n      // acos(c) = i * log(c - i * sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n              b * b - a * a + 1,\n              -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n              t1['re'] - b,\n              t1['im'] + a)['log']();\n\n      return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus tangent\n     *\n     * @returns {Complex}\n     */\n    'atan': function() {\n\n      // atan(c) = i / 2 log((i + x) / (i - x))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0) {\n\n        if (b === 1) {\n          return new Complex(0, Infinity);\n        }\n\n        if (b === -1) {\n          return new Complex(0, -Infinity);\n        }\n      }\n\n      var d = a * a + (1.0 - b) * (1.0 - b);\n\n      var t1 = new Complex(\n              (1 - b * b - a * a) / d,\n              -2 * a / d).log();\n\n      return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cotangent\n     *\n     * @returns {Complex}\n     */\n    'acot': function() {\n\n      // acot(c) = i / 2 log((c - i) / (c + i))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n        return new Complex(Math.atan2(1, a), 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).atan()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).atan();\n    },\n\n    /**\n     * Calculate the complex arcus secant\n     *\n     * @returns {Complex}\n     */\n    'asec': function() {\n\n      // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).acos()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).acos();\n    },\n\n    /**\n     * Calculate the complex arcus cosecans\n     *\n     * @returns {Complex}\n     */\n    'acsc': function() {\n\n      // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(Math.PI / 2, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).asin()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).asin();\n    },\n\n    /**\n     * Calculate the complex sinh\n     *\n     * @returns {Complex}\n     */\n    'sinh': function() {\n\n      // sinh(c) = (e^c - e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              sinh(a) * Math.cos(b),\n              cosh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex cosh\n     *\n     * @returns {Complex}\n     */\n    'cosh': function() {\n\n      // cosh(c) = (e^c + e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n              cosh(a) * Math.cos(b),\n              sinh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex tanh\n     *\n     * @returns {Complex}\n     */\n    'tanh': function() {\n\n      // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) + Math.cos(b);\n\n      return new Complex(\n              sinh(a) / d,\n              Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'coth': function() {\n\n      // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) - Math.cos(b);\n\n      return new Complex(\n              sinh(a) / d,\n              -Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'csch': function() {\n\n      // csch(c) = 2 / (e^c - e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) - cosh(2 * a);\n\n      return new Complex(\n              -2 * sinh(a) * Math.cos(b) / d,\n              2 * cosh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex sech\n     *\n     * @returns {Complex}\n     */\n    'sech': function() {\n\n      // sech(c) = 2 / (e^c + e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) + cosh(2 * a);\n\n      return new Complex(\n              2 * cosh(a) * Math.cos(b) / d,\n              -2 * sinh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'asinh': function() {\n\n      // asinh(c) = log(c + sqrt(c^2 + 1))\n\n      var tmp = this['im'];\n      this['im'] = -this['re'];\n      this['re'] = tmp;\n      var res = this['asin']();\n\n      this['re'] = -this['im'];\n      this['im'] = tmp;\n      tmp = res['re'];\n\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n      return res;\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'acosh': function() {\n\n      // acosh(c) = log(c + sqrt(c^2 - 1))\n\n      var res = this['acos']();\n      if (res['im'] <= 0) {\n        var tmp = res['re'];\n        res['re'] = -res['im'];\n        res['im'] = tmp;\n      } else {\n        var tmp = res['im'];\n        res['im'] = -res['re'];\n        res['re'] = tmp;\n      }\n      return res;\n    },\n\n    /**\n     * Calculate the complex atanh\n     *\n     * @returns {Complex}\n     */\n    'atanh': function() {\n\n      // atanh(c) = log((1+c) / (1-c)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var noIM = a > 1 && b === 0;\n      var oneMinus = 1 - a;\n      var onePlus = 1 + a;\n      var d = oneMinus * oneMinus + b * b;\n\n      var x = (d !== 0)\n              ? new Complex(\n                      (onePlus * oneMinus - b * b) / d,\n                      (b * oneMinus + onePlus * b) / d)\n              : new Complex(\n                      (a !== -1) ? (a / 0) : 0,\n                      (b !== 0) ? (b / 0) : 0);\n\n      var temp = x['re'];\n      x['re'] = logHypot(x['re'], x['im']) / 2;\n      x['im'] = Math.atan2(x['im'], temp) / 2;\n      if (noIM) {\n        x['im'] = -x['im'];\n      }\n      return x;\n    },\n\n    /**\n     * Calculate the complex acoth\n     *\n     * @returns {Complex}\n     */\n    'acoth': function() {\n\n      // acoth(c) = log((c+1) / (c-1)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Math.PI / 2);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).atanh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).atanh();\n    },\n\n    /**\n     * Calculate the complex acsch\n     *\n     * @returns {Complex}\n     */\n    'acsch': function() {\n\n      // acsch(c) = log((1+sqrt(1+c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n\n        return new Complex(\n                (a !== 0)\n                ? Math.log(a + Math.sqrt(a * a + 1))\n                : Infinity, 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).asinh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).asinh();\n    },\n\n    /**\n     * Calculate the complex asech\n     *\n     * @returns {Complex}\n     */\n    'asech': function() {\n\n      // asech(c) = log((1+sqrt(1-c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n              ? new Complex(\n                      a / d,\n                      -b / d).acosh()\n              : new Complex(\n                      (a !== 0) ? a / 0 : 0,\n                      (b !== 0) ? -b / 0 : 0).acosh();\n    },\n\n    /**\n     * Calculate the complex inverse 1/z\n     *\n     * @returns {Complex}\n     */\n    'inverse': function() {\n\n      // 1 / 0 = Infinity and 1 / Infinity = 0\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      if (this['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var d = a * a + b * b;\n\n      return new Complex(a / d, -b / d);\n    },\n\n    /**\n     * Returns the complex conjugate\n     *\n     * @returns {Complex}\n     */\n    'conjugate': function() {\n\n      return new Complex(this['re'], -this['im']);\n    },\n\n    /**\n     * Gets the negated complex number\n     *\n     * @returns {Complex}\n     */\n    'neg': function() {\n\n      return new Complex(-this['re'], -this['im']);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'ceil': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.ceil(this['re'] * places) / places,\n              Math.ceil(this['im'] * places) / places);\n    },\n\n    /**\n     * Floors the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'floor': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.floor(this['re'] * places) / places,\n              Math.floor(this['im'] * places) / places);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'round': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n              Math.round(this['re'] * places) / places,\n              Math.round(this['im'] * places) / places);\n    },\n\n    /**\n     * Compares two complex numbers\n     *\n     * **Note:** new Complex(Infinity).equals(Infinity) === false\n     *\n     * @returns {boolean}\n     */\n    'equals': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&\n              Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * @returns {Complex}\n     */\n    'clone': function() {\n\n      return new Complex(this['re'], this['im']);\n    },\n\n    /**\n     * Gets a string of the actual complex number\n     *\n     * @returns {string}\n     */\n    'toString': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var ret = '';\n\n      if (this['isNaN']()) {\n        return 'NaN';\n      }\n\n      if (this['isZero']()) {\n        return '0';\n      }\n\n      if (this['isInfinite']()) {\n        return 'Infinity';\n      }\n\n      if (a !== 0) {\n        ret += a;\n      }\n\n      if (b !== 0) {\n\n        if (a !== 0) {\n          ret += b < 0 ? ' - ' : ' + ';\n        } else if (b < 0) {\n          ret += '-';\n        }\n\n        b = Math.abs(b);\n\n        if (1 !== b) {\n          ret += b;\n        }\n        ret += 'i';\n      }\n\n      if (!ret)\n        return '0';\n\n      return ret;\n    },\n\n    /**\n     * Returns the actual number as a vector\n     *\n     * @returns {Array}\n     */\n    'toVector': function() {\n\n      return [this['re'], this['im']];\n    },\n\n    /**\n     * Returns the actual real value of the current object\n     *\n     * @returns {number|null}\n     */\n    'valueOf': function() {\n\n      if (this['im'] === 0) {\n        return this['re'];\n      }\n      return null;\n    },\n\n    /**\n     * Determines whether a complex number is not on the Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isNaN': function() {\n      return isNaN(this['re']) || isNaN(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the zero pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isZero': function() {\n      return (\n              (this['re'] === 0 || this['re'] === -0) &&\n              (this['im'] === 0 || this['im'] === -0)\n              );\n    },\n\n    /**\n     * Determines whether a complex number is not at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isFinite': function() {\n      return isFinite(this['re']) && isFinite(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isInfinite': function() {\n      return !(this['isNaN']() || this['isFinite']());\n    }\n  };\n\n  Complex['ZERO'] = new Complex(0, 0);\n  Complex['ONE'] = new Complex(1, 0);\n  Complex['I'] = new Complex(0, 1);\n  Complex['PI'] = new Complex(Math.PI, 0);\n  Complex['E'] = new Complex(Math.E, 0);\n  Complex['INFINITY'] = new Complex(Infinity, Infinity);\n  Complex['NAN'] = new Complex(NaN, NaN);\n  Complex['EPSILON'] = 1e-16;\n\n  if (typeof define === 'function' && define['amd']) {\n    define([], function() {\n      return Complex;\n    });\n  } else if (typeof exports === 'object') {\n    Object.defineProperty(exports, \"__esModule\", {'value': true});\n    Complex['default'] = Complex;\n    Complex['Complex'] = Complex;\n    module['exports'] = Complex;\n  } else {\n    root['Complex'] = Complex;\n  }\n\n})(this);\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport Complex from 'complex.js';\nimport { format } from '../../utils/number';\nimport { isNumber, isUnit } from '../../utils/is';\nimport { factory } from '../../utils/factory';\nvar name = 'Complex';\nvar dependencies = [];\nexport var createComplexClass = /* #__PURE__ */factory(name, dependencies, function () {\n  /**\n   * Attach type information\n   */\n  Complex.prototype.type = 'Complex';\n  Complex.prototype.isComplex = true;\n  /**\n   * Get a JSON representation of the complex number\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}`\n   */\n\n  Complex.prototype.toJSON = function () {\n    return {\n      mathjs: 'Complex',\n      re: this.re,\n      im: this.im\n    };\n  };\n  /*\n   * Return the value of the complex number in polar notation\n   * The angle phi will be set in the interval of [-pi, pi].\n   * @return {{r: number, phi: number}} Returns and object with properties r and phi.\n   */\n\n\n  Complex.prototype.toPolar = function () {\n    return {\n      r: this.abs(),\n      phi: this.arg()\n    };\n  };\n  /**\n   * Get a string representation of the complex number,\n   * with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string} str\n   */\n\n\n  Complex.prototype.format = function (options) {\n    var str = '';\n    var im = this.im;\n    var re = this.re;\n    var strRe = format(this.re, options);\n    var strIm = format(this.im, options); // round either re or im when smaller than the configured precision\n\n    var precision = isNumber(options) ? options : options ? options.precision : null;\n\n    if (precision !== null) {\n      var epsilon = Math.pow(10, -precision);\n\n      if (Math.abs(re / im) < epsilon) {\n        re = 0;\n      }\n\n      if (Math.abs(im / re) < epsilon) {\n        im = 0;\n      }\n    }\n\n    if (im === 0) {\n      // real value\n      str = strRe;\n    } else if (re === 0) {\n      // purely complex value\n      if (im === 1) {\n        str = 'i';\n      } else if (im === -1) {\n        str = '-i';\n      } else {\n        str = strIm + 'i';\n      }\n    } else {\n      // complex value\n      if (im < 0) {\n        if (im === -1) {\n          str = strRe + ' - i';\n        } else {\n          str = strRe + ' - ' + strIm.substring(1) + 'i';\n        }\n      } else {\n        if (im === 1) {\n          str = strRe + ' + i';\n        } else {\n          str = strRe + ' + ' + strIm + 'i';\n        }\n      }\n    }\n\n    return str;\n  };\n  /**\n   * Create a complex number from polar coordinates\n   *\n   * Usage:\n   *\n   *     Complex.fromPolar(r: number, phi: number) : Complex\n   *     Complex.fromPolar({r: number, phi: number}) : Complex\n   *\n   * @param {*} args...\n   * @return {Complex}\n   */\n\n\n  Complex.fromPolar = function (args) {\n    switch (arguments.length) {\n      case 1:\n        {\n          var arg = arguments[0];\n\n          if (_typeof(arg) === 'object') {\n            return Complex(arg);\n          } else {\n            throw new TypeError('Input has to be an object with r and phi keys.');\n          }\n        }\n\n      case 2:\n        {\n          var r = arguments[0];\n          var phi = arguments[1];\n\n          if (isNumber(r)) {\n            if (isUnit(phi) && phi.hasBase('ANGLE')) {\n              // convert unit to a number in radians\n              phi = phi.toNumber('rad');\n            }\n\n            if (isNumber(phi)) {\n              return new Complex({\n                r: r,\n                phi: phi\n              });\n            }\n\n            throw new TypeError('Phi is not a number nor an angle unit.');\n          } else {\n            throw new TypeError('Radius r is not a number.');\n          }\n        }\n\n      default:\n        throw new SyntaxError('Wrong number of arguments in function fromPolar');\n    }\n  };\n\n  Complex.prototype.valueOf = Complex.prototype.toString;\n  /**\n   * Create a Complex number from a JSON object\n   * @param {Object} json  A JSON Object structured as\n   *                       {\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}\n   *                       All properties are optional, default values\n   *                       for `re` and `im` are 0.\n   * @return {Complex} Returns a new Complex number\n   */\n\n  Complex.fromJSON = function (json) {\n    return new Complex(json);\n  };\n  /**\n   * Compare two complex numbers, `a` and `b`:\n   *\n   * - Returns 1 when the real part of `a` is larger than the real part of `b`\n   * - Returns -1 when the real part of `a` is smaller than the real part of `b`\n   * - Returns 1 when the real parts are equal\n   *   and the imaginary part of `a` is larger than the imaginary part of `b`\n   * - Returns -1 when the real parts are equal\n   *   and the imaginary part of `a` is smaller than the imaginary part of `b`\n   * - Returns 0 when both real and imaginary parts are equal.\n   *\n   * @params {Complex} a\n   * @params {Complex} b\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n\n\n  Complex.compare = function (a, b) {\n    if (a.re > b.re) {\n      return 1;\n    }\n\n    if (a.re < b.re) {\n      return -1;\n    }\n\n    if (a.im > b.im) {\n      return 1;\n    }\n\n    if (a.im < b.im) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  return Complex;\n}, {\n  isClass: true\n});","/**\n * @license Fraction.js v4.0.12 09/09/2015\n * http://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2015, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function createError(name) {\n\n    function errorConstructor() {\n      var temp = Error.apply(this, arguments);\n      temp['name'] = this['name'] = name;\n      this['stack'] = temp['stack'];\n      this['message'] = temp['message'];\n    }\n\n    /**\n     * Error constructor\n     *\n     * @constructor\n     */\n    function IntermediateInheritor() {}\n    IntermediateInheritor.prototype = Error.prototype;\n    errorConstructor.prototype = new IntermediateInheritor();\n\n    return errorConstructor;\n  }\n\n  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');\n  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throwInvalidParam();\n    }\n    return n * s;\n  }\n\n  function throwInvalidParam() {\n    throw new InvalidParameter();\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n        {\n          if (\"d\" in p1 && \"n\" in p1) {\n            n = p1[\"n\"];\n            d = p1[\"d\"];\n            if (\"s\" in p1)\n              n *= p1[\"s\"];\n          } else if (0 in p1) {\n            n = p1[0];\n            if (1 in p1)\n              d = p1[1];\n          } else {\n            throwInvalidParam();\n          }\n          s = n * d;\n          break;\n        }\n        case \"number\":\n        {\n          if (p1 < 0) {\n            s = p1;\n            p1 = -p1;\n          }\n\n          if (p1 % 1 === 0) {\n            n = p1;\n          } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n            if (p1 >= 1) {\n              z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n              p1 /= z;\n            }\n\n            // Using Farey Sequences\n            // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n            while (B <= N && D <= N) {\n              M = (A + C) / (B + D);\n\n              if (p1 === M) {\n                if (B + D <= N) {\n                  n = A + C;\n                  d = B + D;\n                } else if (D > B) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n                break;\n\n              } else {\n\n                if (p1 > M) {\n                  A += C;\n                  B += D;\n                } else {\n                  C += A;\n                  D += B;\n                }\n\n                if (B > N) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n              }\n            }\n            n *= z;\n          } else if (isNaN(p1) || isNaN(p2)) {\n            d = n = NaN;\n          }\n          break;\n        }\n        case \"string\":\n        {\n          B = p1.match(/\\d+|./g);\n\n          if (B === null)\n            throwInvalidParam();\n\n          if (B[A] === '-') {// Check for minus sign at the beginning\n            s = -1;\n            A++;\n          } else if (B[A] === '+') {// Check for plus sign at the beginning\n            A++;\n          }\n\n          if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n            w = assign(B[A++], s);\n          } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n            if (B[A] !== '.') { // Handle 0.5 and .5\n              v = assign(B[A++], s);\n            }\n            A++;\n\n            // Check for decimal places\n            if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n              w = assign(B[A], s);\n              y = Math.pow(10, B[A].length);\n              A++;\n            }\n\n            // Check for repeating places\n            if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n              x = assign(B[A + 1], s);\n              z = Math.pow(10, B[A + 1].length) - 1;\n              A += 3;\n            }\n\n          } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n            w = assign(B[A], s);\n            y = assign(B[A + 2], 1);\n            A += 3;\n          } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n            v = assign(B[A], s);\n            w = assign(B[A + 2], s);\n            y = assign(B[A + 4], 1);\n            A += 5;\n          }\n\n          if (B.length <= A) { // Check for more tokens on the stack\n            d = y * z;\n            s = /* void */\n                    n = x + d * v + z * w;\n            break;\n          }\n\n          /* Fall through on error */\n        }\n        default:\n          throwInvalidParam();\n      }\n\n    if (d === 0) {\n      throw new DivisionByZero();\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n            d /= 2) {\n    }\n\n    for (; d % 5 === 0;\n            d /= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n     function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a %= b;\n      if (!a)\n        return b;\n      b %= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    if (!(this instanceof Fraction)) {\n      return new Fraction(a, b);\n    }\n\n    parse(a, b);\n\n    if (Fraction['REDUCE']) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse a\n    } else {\n      a = 1;\n    }\n\n    this[\"s\"] = P[\"s\"];\n    this[\"n\"] = P[\"n\"] / a;\n    this[\"d\"] = P[\"d\"] / a;\n  }\n\n  /**\n   * Boolean global variable to be able to disable automatic reduction of the fraction\n   *\n   */\n  Fraction['REDUCE'] = 1;\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return new Fraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return new Fraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n              this[\"d\"] * P[\"n\"]\n              );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return new Fraction(this);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return new Fraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        Fraction(0, 0); // Throw DivisionByZero\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return new Fraction(\n              this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n              P[\"d\"] * this[\"d\"]\n              );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return new Fraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return new Fraction;\n      }\n      return new Fraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denumerator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return new Fraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some integer exponent\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(m) {\n\n      if (m < 0) {\n        return new Fraction(Math.pow(this['s'] * this[\"d\"], -m), Math.pow(this[\"n\"], -m));\n      } else {\n        return new Fraction(Math.pow(this['s'] * this[\"n\"], m), Math.pow(this[\"d\"], m));\n      }\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      // First naive implementation, needs improvement\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      var cont = this['abs']()['toContinued']();\n\n      eps = eps || 0.001;\n\n      function rec(a) {\n        if (a.length === 1)\n          return new Fraction(a[0]);\n        return rec(a.slice(1))['inverse']()['add'](a[0]);\n      }\n\n      for (var i = 0; i < cont.length; i++) {\n        var tmp = rec(cont.slice(0, i + 1));\n        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {\n          return tmp['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction() => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          str += \" \";\n          n %= d;\n        }\n\n        str += n;\n        str += '/';\n        str += d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          n %= d;\n        }\n\n        str += \"\\\\frac{\";\n        str += n;\n        str += '}{';\n        str += d;\n        str += '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var g;\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      if (!Fraction['REDUCE']) {\n        g = gcd(N, D);\n        N /= g;\n        D /= g;\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repitation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] === -1 ? \"-\" : \"\";\n\n      str += N / D | 0;\n\n      N %= D;\n      N *= 10;\n\n      if (N)\n        str += \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \"(\";\n        for (var i = cycLen; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \")\";\n      } else {\n        for (var i = dec; N && i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(exports, \"__esModule\", {'value': true});\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n","import Fraction from 'fraction.js';\nimport { factory } from '../../utils/factory';\nvar name = 'Fraction';\nvar dependencies = [];\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, function () {\n  /**\n   * Attach type information\n   */\n  Fraction.prototype.type = 'Fraction';\n  Fraction.prototype.isFraction = true;\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   */\n\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    };\n  };\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   * @return {BigNumber}\n   */\n\n\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json);\n  };\n\n  return Fraction;\n}, {\n  isClass: true\n});","import { factory } from '../../utils/factory';\nvar name = 'Matrix';\nvar dependencies = [];\nexport var createMatrixClass = /* #__PURE__ */factory(name, dependencies, function () {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *\n   *     let matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *\n   *     let matrix = math.matrix([[1, 2], [3, 4]])\n   *     matix.size()              // [2, 2]\n   *     matrix.resize([3, 2], 5)\n   *     matrix.valueOf()          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix() {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Matrix.prototype.type = 'Matrix';\n  Matrix.prototype.isMatrix = true;\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface');\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n\n\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface');\n  };\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n\n\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface');\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface');\n  };\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface');\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n\n\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface');\n  };\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface');\n  };\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface');\n  };\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n\n\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface');\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n\n\n  Matrix.prototype.size = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface');\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n\n\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface');\n  };\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n\n\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface');\n  };\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n\n\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface');\n  };\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n\n\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface');\n  };\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface');\n  };\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n\n\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface');\n  };\n\n  return Matrix;\n}, {\n  isClass: true\n});","import { isArray, isBigNumber, isCollection, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is';\nimport { arraySize, getArrayDataType, reshape, resize, unsqueeze, validate, validateIndex } from '../../utils/array';\nimport { format } from '../../utils/string';\nimport { isInteger } from '../../utils/number';\nimport { clone, deepStrictEqual } from '../../utils/object';\nimport { DimensionError } from '../../error/DimensionError';\nimport { factory } from '../../utils/factory';\nvar name = 'DenseMatrix';\nvar dependencies = ['Matrix'];\nexport var createDenseMatrixClass = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var Matrix = _ref.Matrix;\n\n  /**\n   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.\n   * @class DenseMatrix\n   */\n  function DenseMatrix(data, datatype) {\n    if (!(this instanceof DenseMatrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (datatype && !isString(datatype)) {\n      throw new Error('Invalid datatype: ' + datatype);\n    }\n\n    if (isMatrix(data)) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = clone(data._data);\n        this._size = clone(data._size);\n        this._datatype = datatype || data._datatype;\n      } else {\n        // build data from existing matrix\n        this._data = data.toArray();\n        this._size = data.size();\n        this._datatype = datatype || data._datatype;\n      }\n    } else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size; // verify the dimensions of the array\n\n      validate(this._data, this._size);\n      this._datatype = datatype || data.datatype;\n    } else if (isArray(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data); // get the dimensions of the array\n\n      this._size = arraySize(this._data); // verify the dimensions of the array, TODO: compute size while processing array\n\n      validate(this._data, this._size); // data type unknown\n\n      this._datatype = datatype;\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')');\n    } else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n    }\n  }\n\n  DenseMatrix.prototype = new Matrix();\n  /**\n   * Create a new DenseMatrix\n   */\n\n  DenseMatrix.prototype.createDenseMatrix = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n  /**\n   * Attach type information\n   */\n\n\n  DenseMatrix.prototype.type = 'DenseMatrix';\n  DenseMatrix.prototype.isDenseMatrix = true;\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf DenseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n\n  DenseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._data, typeOf);\n  };\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()  // retrieve storage format\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The storage format.\n   */\n\n\n  DenseMatrix.prototype.storage = function () {\n    return 'dense';\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()   // retrieve matrix datatype\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The datatype.\n   */\n\n\n  DenseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n  /**\n   * Create a new DenseMatrix\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n\n\n  DenseMatrix.prototype.create = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof DenseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index);\n      // intentional fall through\n\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  /**\n   * Get a single element from the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  DenseMatrix.prototype.get = function (index) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length !== this._size.length) {\n      throw new DimensionError(index.length, this._size.length);\n    } // check index\n\n\n    for (var x = 0; x < index.length; x++) {\n      validateIndex(index[x], this._size[x]);\n    }\n\n    var data = this._data;\n\n    for (var i = 0, ii = index.length; i < ii; i++) {\n      var indexI = index[i];\n      validateIndex(indexI, data.length);\n      data = data[indexI];\n    }\n\n    return data;\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n\n\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length < this._size.length) {\n      throw new DimensionError(index.length, this._size.length, '<');\n    }\n\n    var i, ii, indexI; // enlarge matrix when needed\n\n    var size = index.map(function (i) {\n      return i + 1;\n    });\n\n    _fit(this, size, defaultValue); // traverse over the dimensions\n\n\n    var data = this._data;\n\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      indexI = index[i];\n      validateIndex(indexI, data.length);\n      data = data[indexI];\n    } // set new value\n\n\n    indexI = index[index.length - 1];\n    validateIndex(indexI, data.length);\n    data[indexI] = value;\n    return this;\n  };\n  /**\n   * Get a submatrix of this matrix\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n\n\n  function _get(matrix, index) {\n    if (!isIndex(index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = index.isScalar();\n\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    } else {\n      // validate dimensions\n      var size = index.size();\n\n      if (size.length !== matrix._size.length) {\n        throw new DimensionError(size.length, matrix._size.length);\n      } // validate if any of the ranges in the index is out of range\n\n\n      var min = index.min();\n      var max = index.max();\n\n      for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n        validateIndex(min[i], matrix._size[i]);\n        validateIndex(max[i], matrix._size[i]);\n      } // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n\n\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype);\n    }\n  }\n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n\n\n  function _getSubmatrix(data, index, dims, dim) {\n    var last = dim === dims - 1;\n    var range = index.dimension(dim);\n\n    if (last) {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        return data[i];\n      }).valueOf();\n    } else {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        var child = data[i];\n        return _getSubmatrix(child, index, dims, dim + 1);\n      }).valueOf();\n    }\n  }\n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n\n\n  function _set(matrix, index, submatrix, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    } // get index size and check whether the index contains a single value\n\n\n    var iSize = index.size();\n    var isScalar = index.isScalar(); // calculate the size of the submatrix, and convert it into an Array if needed\n\n    var sSize;\n\n    if (isMatrix(submatrix)) {\n      sSize = submatrix.size();\n      submatrix = submatrix.valueOf();\n    } else {\n      sSize = arraySize(submatrix);\n    }\n\n    if (isScalar) {\n      // set a scalar\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    } else {\n      // set a submatrix\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        } // unsqueeze both outer and inner dimensions\n\n\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize);\n      } // check whether the size of the submatrix matches the index size\n\n\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      } // enlarge matrix when needed\n\n\n      var size = index.max().map(function (i) {\n        return i + 1;\n      });\n\n      _fit(matrix, size, defaultValue); // insert the sub matrix\n\n\n      var dims = iSize.length;\n      var dim = 0;\n\n      _setSubmatrix(matrix._data, index, submatrix, dims, dim);\n    }\n\n    return matrix;\n  }\n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n\n\n  function _setSubmatrix(data, index, submatrix, dims, dim) {\n    var last = dim === dims - 1;\n    var range = index.dimension(dim);\n\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        data[dataIndex] = submatrix[subIndex[0]];\n      });\n    } else {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1);\n      });\n    }\n  }\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof DenseMatrix\n   * @param {number[] || Matrix} size The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isCollection(size)) {\n      throw new TypeError('Array or Matrix expected');\n    } // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector\n\n\n    var sizeArray = size.valueOf().map(function (value) {\n      return Array.isArray(value) && value.length === 1 ? value[0] : value;\n    }); // matrix to resize\n\n    var m = copy ? this.clone() : this; // resize matrix\n\n    return _resize(m, sizeArray, defaultValue);\n  };\n\n  function _resize(matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      var v = matrix._data; // go deep\n\n      while (isArray(v)) {\n        v = v[0];\n      }\n\n      return v;\n    } // resize matrix\n\n\n    matrix._size = size.slice(0); // copy the array\n\n    matrix._data = resize(matrix._data, matrix._size, defaultValue); // return matrix\n\n    return matrix;\n  }\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  DenseMatrix.prototype.reshape = function (size, copy) {\n    var m = copy ? this.clone() : this;\n    m._data = reshape(m._data, size);\n    m._size = size.slice(0);\n    return m;\n  };\n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n\n\n  function _fit(matrix, size, defaultValue) {\n    var // copy the array\n    newSize = matrix._size.slice(0);\n\n    var changed = false; // add dimensions when needed\n\n    while (newSize.length < size.length) {\n      newSize.push(0);\n      changed = true;\n    } // enlarge size when needed\n\n\n    for (var i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue);\n    }\n  }\n  /**\n   * Create a clone of the matrix\n   * @memberof DenseMatrix\n   * @return {DenseMatrix} clone\n   */\n\n\n  DenseMatrix.prototype.clone = function () {\n    var m = new DenseMatrix({\n      data: clone(this._data),\n      size: clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof DenseMatrix\n   * @returns {number[]} size\n   */\n\n\n  DenseMatrix.prototype.size = function () {\n    return this._size.slice(0); // return a clone of _size\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n\n\n  DenseMatrix.prototype.map = function (callback) {\n    // matrix instance\n    var me = this;\n\n    var recurse = function recurse(value, index) {\n      if (isArray(value)) {\n        return value.map(function (child, i) {\n          return recurse(child, index.concat(i));\n        });\n      } else {\n        return callback(value, index, me);\n      }\n    }; // determine the new datatype when the original matrix has datatype defined\n    // TODO: should be done in matrix constructor instead\n\n\n    var data = recurse(this._data, []);\n    var datatype = this._datatype !== undefined ? getArrayDataType(data, typeOf) : undefined;\n    return new DenseMatrix(data, datatype);\n  };\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n\n\n  DenseMatrix.prototype.forEach = function (callback) {\n    // matrix instance\n    var me = this;\n\n    var recurse = function recurse(value, index) {\n      if (isArray(value)) {\n        value.forEach(function (child, i) {\n          recurse(child, index.concat(i));\n        });\n      } else {\n        callback(value, index, me);\n      }\n    };\n\n    recurse(this._data, []);\n  };\n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n\n\n  DenseMatrix.prototype.toArray = function () {\n    return clone(this._data);\n  };\n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n\n\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data;\n  };\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof DenseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  DenseMatrix.prototype.format = function (options) {\n    return format(this._data, options);\n  };\n  /**\n   * Get a string representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {string} str\n   */\n\n\n  DenseMatrix.prototype.toString = function () {\n    return format(this._data);\n  };\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {Object}\n   */\n\n\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof DenseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix with the diagonal values.\n   */\n\n\n  DenseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows & columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // number diagonal values\n\n    var n = Math.min(rows - kSub, columns - kSuper); // x is a matrix get diagonal from matrix\n\n    var data = []; // loop rows\n\n    for (var i = 0; i < n; i++) {\n      data[i] = this._data[i + kSub][i + kSuper];\n    } // create DenseMatrix\n\n\n    return new DenseMatrix({\n      data: data,\n      size: [n],\n      datatype: this._datatype\n    });\n  };\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {Array} size                     The matrix size.\n   * @param {number | Matrix | Array } value The values for the diagonal.\n   * @param {number | BigNumber} [k=0]       The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]          The default value for non-diagonal\n   * @param {string} [datatype]              The datatype for the diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n\n\n  DenseMatrix.diagonal = function (size, value, k, defaultValue) {\n    if (!isArray(size)) {\n      throw new TypeError('Array expected, size parameter');\n    }\n\n    if (size.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    } // map size & validate\n\n\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      } // validate arguments\n\n\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      }\n\n      return s;\n    }); // validate k if any\n\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows and columns\n\n    var rows = size[0];\n    var columns = size[1]; // number of non-zero items\n\n    var n = Math.min(rows - kSub, columns - kSuper); // value extraction function\n\n    var _value; // check value\n\n\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value[i];\n      };\n    } else if (isMatrix(value)) {\n      // matrix size\n      var ms = value.size(); // validate matrix\n\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    } else {\n      // define function\n      _value = function _value() {\n        // return value\n        return value;\n      };\n    } // discover default value if needed\n\n\n    if (!defaultValue) {\n      // check first value in array\n      defaultValue = isBigNumber(_value(0)) ? _value(0).mul(0) // trick to create a BigNumber with value zero\n      : 0;\n    } // empty array\n\n\n    var data = []; // check we need to resize array\n\n    if (size.length > 0) {\n      // resize array\n      data = resize(data, size, defaultValue); // fill diagonal\n\n      for (var d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d);\n      }\n    } // create DenseMatrix\n\n\n    return new DenseMatrix({\n      data: data,\n      size: [rows, columns]\n    });\n  };\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof DenseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n\n\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json);\n  };\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n\n\n  DenseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    } // check dimensions\n\n\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    } // validate index\n\n\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]); // swap rows\n\n    DenseMatrix._swapRows(i, j, this._data); // return current instance\n\n\n    return this;\n  };\n  /**\n   * Swap rows i and j in Dense Matrix data structure.\n   *\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   * @param {Array} data     Matrix data\n   */\n\n\n  DenseMatrix._swapRows = function (i, j, data) {\n    // swap values i <-> j\n    var vi = data[i];\n    data[i] = data[j];\n    data[j] = vi;\n  };\n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Replaces all nested Matrices with Arrays\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @return {Array} data\n   */\n\n\n  function preprocess(data) {\n    for (var i = 0, ii = data.length; i < ii; i++) {\n      var elem = data[i];\n\n      if (isArray(elem)) {\n        data[i] = preprocess(elem);\n      } else if (elem && elem.isMatrix === true) {\n        data[i] = preprocess(elem.valueOf());\n      }\n    }\n\n    return data;\n  }\n\n  return DenseMatrix;\n}, {\n  isClass: true\n});","import { isCollection, isMatrix } from './is';\nimport { IndexError } from '../error/IndexError';\nimport { arraySize } from './array';\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\n\nexport function containsCollections(array) {\n  for (var i = 0; i < array.length; i++) {\n    if (isCollection(array[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\n\nexport function deepForEach(array, callback) {\n  if (isMatrix(array)) {\n    array = array.valueOf();\n  }\n\n  for (var i = 0, ii = array.length; i < ii; i++) {\n    var value = array[i];\n\n    if (Array.isArray(value)) {\n      deepForEach(value, callback);\n    } else {\n      callback(value);\n    }\n  }\n}\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\n\nexport function deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n}\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\n\nexport function reduce(mat, dim, callback) {\n  var size = Array.isArray(mat) ? arraySize(mat) : mat.size();\n\n  if (dim < 0 || dim >= size.length) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new IndexError(dim, size.length);\n  }\n\n  if (isMatrix(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback));\n  } else {\n    return _reduce(mat, dim, callback);\n  }\n}\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\n\nfunction _reduce(mat, dim, callback) {\n  var i, ret, val, tran;\n\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0];\n\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i]);\n      }\n\n      return val;\n    } else {\n      tran = _switch(mat);\n      ret = [];\n\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback);\n      }\n\n      return ret;\n    }\n  } else {\n    ret = [];\n\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback);\n    }\n\n    return ret;\n  }\n}\n/**\n * Transpose a matrix\n * @param {Array} mat\n * @returns {Array} ret\n * @private\n */\n\n\nfunction _switch(mat) {\n  var I = mat.length;\n  var J = mat[0].length;\n  var i, j;\n  var ret = [];\n\n  for (j = 0; j < J; j++) {\n    var tmp = [];\n\n    for (i = 0; i < I; i++) {\n      tmp.push(mat[i][j]);\n    }\n\n    ret.push(tmp);\n  }\n\n  return ret;\n} // TODO: document function scatter\n\n\nexport function scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr; // vars\n\n  var k, k0, k1, i; // check we need to process values (pattern matrix)\n\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i); // x(i) = A, check we need to call function this time\n\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k]); // function was called on current row\n\n          u[i] = mark;\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k];\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k]); // function was called on current row\n\n        u[i] = mark;\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i);\n      } else {\n        // indicate function was called on current row\n        u[i] = mark;\n      }\n    }\n  }\n}","import { isInteger, log2, log10, cbrt, expm1, sign, toFixed, log1p } from '../../utils/number';\nvar n1 = 'number';\nvar n2 = 'number, number';\nexport function absNumber(a) {\n  return Math.abs(a);\n}\nabsNumber.signature = n1;\nexport function addNumber(a, b) {\n  return a + b;\n}\naddNumber.signature = n2;\nexport function subtractNumber(a, b) {\n  return a - b;\n}\nsubtractNumber.signature = n2;\nexport function multiplyNumber(a, b) {\n  return a * b;\n}\nmultiplyNumber.signature = n2;\nexport function divideNumber(a, b) {\n  return a / b;\n}\ndivideNumber.signature = n2;\nexport function unaryMinusNumber(x) {\n  return -x;\n}\nunaryMinusNumber.signature = n1;\nexport function unaryPlusNumber(x) {\n  return x;\n}\nunaryPlusNumber.signature = n1;\nexport function cbrtNumber(x) {\n  return cbrt(x);\n}\ncbrtNumber.signature = n1;\nexport function ceilNumber(x) {\n  return Math.ceil(x);\n}\nceilNumber.signature = n1;\nexport function cubeNumber(x) {\n  return x * x * x;\n}\ncubeNumber.signature = n1;\nexport function expNumber(x) {\n  return Math.exp(x);\n}\nexpNumber.signature = n1;\nexport function expm1Number(x) {\n  return expm1(x);\n}\nexpm1Number.signature = n1;\nexport function fixNumber(x) {\n  return x > 0 ? Math.floor(x) : Math.ceil(x);\n}\nfixNumber.signature = n1;\nexport function floorNumber(x) {\n  return Math.floor(x);\n}\nfloorNumber.signature = n1;\n/**\n * Calculate gcd for numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the greatest common denominator of a and b\n */\n\nexport function gcdNumber(a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function gcd must be integer numbers');\n  } // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\n\n  var r;\n\n  while (b !== 0) {\n    r = a % b;\n    a = b;\n    b = r;\n  }\n\n  return a < 0 ? -a : a;\n}\ngcdNumber.signature = n2;\n/**\n * Calculate lcm for two numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the least common multiple of a and b\n */\n\nexport function lcmNumber(a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function lcm must be integer numbers');\n  }\n\n  if (a === 0 || b === 0) {\n    return 0;\n  } // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  // evaluate lcm here inline to reduce overhead\n\n\n  var t;\n  var prod = a * b;\n\n  while (b !== 0) {\n    t = b;\n    b = a % t;\n    a = t;\n  }\n\n  return Math.abs(prod / a);\n}\nlcmNumber.signature = n2;\n/**\n * Calculate the logarithm of a value.\n * @param {number} x\n * @return {number}\n */\n\nexport function logNumber(x) {\n  return Math.log(x);\n}\nlogNumber.signature = n1;\n/**\n * Calculate the 10-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\n\nexport function log10Number(x) {\n  return log10(x);\n}\nlog10Number.signature = n1;\n/**\n * Calculate the 2-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\n\nexport function log2Number(x) {\n  return log2(x);\n}\nlog2Number.signature = n1;\n/**\n * Calculate the natural logarithm of a `number+1`\n * @param {number} x\n * @returns {number}\n */\n\nexport function log1pNumber(x) {\n  return log1p(x);\n}\nlog1pNumber.signature = n1;\n/**\n * Calculate the modulus of two numbers\n * @param {number} x\n * @param {number} y\n * @returns {number} res\n * @private\n */\n\nexport function modNumber(x, y) {\n  if (y > 0) {\n    // We don't use JavaScript's % operator here as this doesn't work\n    // correctly for x < 0 and x === 0\n    // see https://en.wikipedia.org/wiki/Modulo_operation\n    return x - y * Math.floor(x / y);\n  } else if (y === 0) {\n    return x;\n  } else {\n    // y < 0\n    // TODO: implement mod for a negative divisor\n    throw new Error('Cannot calculate mod for a negative divisor');\n  }\n}\nmodNumber.signature = n2;\n/**\n * Calculate the nth root of a, solve x^root == a\n * http://rosettacode.org/wiki/Nth_root#JavaScript\n * @param {number} a\n * @param {number} root\n * @private\n */\n\nexport function nthRootNumber(a, root) {\n  var inv = root < 0;\n\n  if (inv) {\n    root = -root;\n  }\n\n  if (root === 0) {\n    throw new Error('Root must be non-zero');\n  }\n\n  if (a < 0 && Math.abs(root) % 2 !== 1) {\n    throw new Error('Root must be odd when a is negative.');\n  } // edge cases zero and infinity\n\n\n  if (a === 0) {\n    return inv ? Infinity : 0;\n  }\n\n  if (!isFinite(a)) {\n    return inv ? 0 : a;\n  }\n\n  var x = Math.pow(Math.abs(a), 1 / root); // If a < 0, we require that root is an odd integer,\n  // so (-1) ^ (1/root) = -1\n\n  x = a < 0 ? -x : x;\n  return inv ? 1 / x : x; // Very nice algorithm, but fails with nthRoot(-2, 3).\n  // Newton's method has some well-known problems at times:\n  // https://en.wikipedia.org/wiki/Newton%27s_method#Failure_analysis\n\n  /*\n  let x = 1 // Initial guess\n  let xPrev = 1\n  let i = 0\n  const iMax = 10000\n  do {\n    const delta = (a / Math.pow(x, root - 1) - x) / root\n    xPrev = x\n    x = x + delta\n    i++\n  }\n  while (xPrev !== x && i < iMax)\n   if (xPrev !== x) {\n    throw new Error('Function nthRoot failed to converge')\n  }\n   return inv ? 1 / x : x\n  */\n}\nnthRootNumber.signature = n2;\nexport function signNumber(x) {\n  return sign(x);\n}\nsignNumber.signature = n1;\nexport function sqrtNumber(x) {\n  return Math.sqrt(x);\n}\nsqrtNumber.signature = n1;\nexport function squareNumber(x) {\n  return x * x;\n}\nsquareNumber.signature = n1;\n/**\n * Calculate xgcd for two numbers\n * @param {number} a\n * @param {number} b\n * @return {number} result\n * @private\n */\n\nexport function xgcdNumber(a, b) {\n  // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n  var t; // used to swap two variables\n\n  var q; // quotient\n\n  var r; // remainder\n\n  var x = 0;\n  var lastx = 1;\n  var y = 1;\n  var lasty = 0;\n\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function xgcd must be integer numbers');\n  }\n\n  while (b) {\n    q = Math.floor(a / b);\n    r = a - q * b;\n    t = x;\n    x = lastx - q * x;\n    lastx = t;\n    t = y;\n    y = lasty - q * y;\n    lasty = t;\n    a = b;\n    b = r;\n  }\n\n  var res;\n\n  if (a < 0) {\n    res = [-a, -lastx, -lasty];\n  } else {\n    res = [a, a ? lastx : 0, lasty];\n  }\n\n  return res;\n}\nxgcdNumber.signature = n2;\n/**\n * Calculates the power of x to y, x^y, for two numbers.\n * @param {number} x\n * @param {number} y\n * @return {number} res\n */\n\nexport function powNumber(x, y) {\n  // x^Infinity === 0 if -1 < x < 1\n  // A real number 0 is returned instead of complex(0)\n  if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {\n    return 0;\n  }\n\n  return Math.pow(x, y);\n}\npowNumber.signature = n2;\n/**\n * round a number to the given number of decimals, or to zero if decimals is\n * not provided\n * @param {number} value\n * @param {number} decimals       number of decimals, between 0 and 15 (0 by default)\n * @return {number} roundedValue\n */\n\nexport function roundNumber(value) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return parseFloat(toFixed(value, decimals));\n}\nroundNumber.signature = n2;\n/**\n * Calculate the norm of a number, the absolute value.\n * @param {number} x\n * @return {number}\n */\n\nexport function normNumber(x) {\n  return Math.abs(x);\n}\nnormNumber.signature = n1;","/**\n * Compares two BigNumbers.\n * @param {BigNumber} x       First value to compare\n * @param {BigNumber} y       Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n */\nexport function nearlyEqual(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x.eq(y);\n  } // use \"==\" operator, handles infinities\n\n\n  if (x.eq(y)) {\n    return true;\n  } // NaN\n\n\n  if (x.isNaN() || y.isNaN()) {\n    return false;\n  } // at this point x and y should be finite\n\n\n  if (x.isFinite() && y.isFinite()) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = x.minus(y).abs();\n\n    if (diff.isZero()) {\n      return true;\n    } else {\n      // use relative error\n      var max = x.constructor.max(x.abs(), y.abs());\n      return diff.lte(max.times(epsilon));\n    }\n  } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n  return false;\n}","import { nearlyEqual } from './number';\n/**\n * Test whether two complex values are equal provided a given epsilon.\n * Does not use or change the global Complex.EPSILON setting\n * @param {Complex} x\n * @param {Complex} y\n * @param {number} epsilon\n * @returns {boolean}\n */\n\nexport function complexEquals(x, y, epsilon) {\n  return nearlyEqual(x.re, y.re, epsilon) && nearlyEqual(x.im, y.im, epsilon);\n}","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual';\nimport { nearlyEqual } from '../../utils/number';\nimport { factory } from '../../utils/factory';\nimport { complexEquals } from '../../utils/complex';\nvar name = 'equalScalar';\nvar dependencies = ['typed', 'config'];\nexport var createEqualScalar = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config;\n\n  /**\n   * Test whether two scalar values are nearly equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x === y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return nearlyEqual(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.eq(y) || bigNearlyEqual(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.equals(y);\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return complexEquals(x, y, config.epsilon);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    }\n  });\n});\nexport var createEqualScalarNumber = factory(name, ['typed', 'config'], function (_ref2) {\n  var typed = _ref2.typed,\n      config = _ref2.config;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return nearlyEqual(x, y, config.epsilon);\n    }\n  });\n});","import { isArray, isBigNumber, isCollection, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is';\nimport { isInteger } from '../../utils/number';\nimport { format } from '../../utils/string';\nimport { clone, deepStrictEqual } from '../../utils/object';\nimport { arraySize, getArrayDataType, unsqueeze, validateIndex } from '../../utils/array';\nimport { factory } from '../../utils/factory';\nimport { DimensionError } from '../../error/DimensionError';\nvar name = 'SparseMatrix';\nvar dependencies = ['typed', 'equalScalar', 'Matrix'];\nexport var createSparseMatrixClass = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      equalScalar = _ref.equalScalar,\n      Matrix = _ref.Matrix;\n\n  /**\n   * Sparse Matrix implementation. This type implements a Compressed Column Storage format\n   * for sparse matrices.\n   * @class SparseMatrix\n   */\n  function SparseMatrix(data, datatype) {\n    if (!(this instanceof SparseMatrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (datatype && !isString(datatype)) {\n      throw new Error('Invalid datatype: ' + datatype);\n    }\n\n    if (isMatrix(data)) {\n      // create from matrix\n      _createFromMatrix(this, data, datatype);\n    } else if (data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values;\n      this._index = data.index;\n      this._ptr = data.ptr;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    } else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data, datatype);\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')');\n    } else {\n      // nothing provided\n      this._values = [];\n      this._index = [];\n      this._ptr = [0];\n      this._size = [0, 0];\n      this._datatype = datatype;\n    }\n  }\n\n  function _createFromMatrix(matrix, source, datatype) {\n    // check matrix type\n    if (source.type === 'SparseMatrix') {\n      // clone arrays\n      matrix._values = source._values ? clone(source._values) : undefined;\n      matrix._index = clone(source._index);\n      matrix._ptr = clone(source._ptr);\n      matrix._size = clone(source._size);\n      matrix._datatype = datatype || source._datatype;\n    } else {\n      // build from matrix data\n      _createFromArray(matrix, source.valueOf(), datatype || source._datatype);\n    }\n  }\n\n  function _createFromArray(matrix, data, datatype) {\n    // initialize fields\n    matrix._values = [];\n    matrix._index = [];\n    matrix._ptr = [];\n    matrix._datatype = datatype; // discover rows & columns, do not use math.size() to avoid looping array twice\n\n    var rows = data.length;\n    var columns = 0; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, datatype);\n    } // check we have rows (empty array)\n\n\n    if (rows > 0) {\n      // column index\n      var j = 0;\n\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._index.length); // loop rows\n\n\n        for (var i = 0; i < rows; i++) {\n          // current row\n          var row = data[i]; // check row is an array\n\n          if (isArray(row)) {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < row.length) {\n              columns = row.length;\n            } // check row has column\n\n\n            if (j < row.length) {\n              // value\n              var v = row[j]; // check value != 0\n\n              if (!eq(v, zero)) {\n                // store value\n                matrix._values.push(v); // index\n\n\n                matrix._index.push(i);\n              }\n            }\n          } else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1) {\n              columns = 1;\n            } // check value != 0 (row is a scalar)\n\n\n            if (!eq(row, zero)) {\n              // store value\n              matrix._values.push(row); // index\n\n\n              matrix._index.push(i);\n            }\n          }\n        } // increment index\n\n\n        j++;\n      } while (j < columns);\n    } // store number of values in ptr\n\n\n    matrix._ptr.push(matrix._index.length); // size\n\n\n    matrix._size = [rows, columns];\n  }\n\n  SparseMatrix.prototype = new Matrix();\n  /**\n   * Create a new SparseMatrix\n   */\n\n  SparseMatrix.prototype.createSparseMatrix = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n  /**\n   * Attach type information\n   */\n\n\n  SparseMatrix.prototype.type = 'SparseMatrix';\n  SparseMatrix.prototype.isSparseMatrix = true;\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf SparseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n\n  SparseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._values, typeOf);\n  };\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The storage format.\n   */\n\n\n  SparseMatrix.prototype.storage = function () {\n    return 'sparse';\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The datatype.\n   */\n\n\n  SparseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n  /**\n   * Create a new SparseMatrix\n   * @memberof SparseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n\n\n  SparseMatrix.prototype.create = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n  /**\n   * Get the matrix density.\n   *\n   * Usage:\n   *     const density = matrix.density()                   // retrieve matrix density\n   *\n   * @memberof SparseMatrix\n   * @return {number}           The matrix density.\n   */\n\n\n  SparseMatrix.prototype.density = function () {\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1]; // calculate density\n\n    return rows !== 0 && columns !== 0 ? this._index.length / (rows * columns) : 0;\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof SparseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke subset on a Pattern only matrix');\n    } // check arguments\n\n\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index);\n      // intentional fall through\n\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n\n  function _getsubset(matrix, idx) {\n    // check idx\n    if (!isIndex(idx)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = idx.isScalar();\n\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(idx.min());\n    } // validate dimensions\n\n\n    var size = idx.size();\n\n    if (size.length !== matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length);\n    } // vars\n\n\n    var i, ii, k, kk; // validate if any of the ranges in the index is out of range\n\n    var min = idx.min();\n    var max = idx.max();\n\n    for (i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i]);\n      validateIndex(max[i], matrix._size[i]);\n    } // matrix arrays\n\n\n    var mvalues = matrix._values;\n    var mindex = matrix._index;\n    var mptr = matrix._ptr; // rows & columns dimensions for result matrix\n\n    var rows = idx.dimension(0);\n    var columns = idx.dimension(1); // workspace & permutation vector\n\n    var w = [];\n    var pv = []; // loop rows in resulting matrix\n\n    rows.forEach(function (i, r) {\n      // update permutation vector\n      pv[i] = r[0]; // mark i in workspace\n\n      w[i] = true;\n    }); // result matrix arrays\n\n    var values = mvalues ? [] : undefined;\n    var index = [];\n    var ptr = []; // loop columns in result matrix\n\n    columns.forEach(function (j) {\n      // update ptr\n      ptr.push(index.length); // loop values in column j\n\n      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {\n        // row\n        i = mindex[k]; // check row is in result matrix\n\n        if (w[i] === true) {\n          // push index\n          index.push(pv[i]); // check we need to process values\n\n          if (values) {\n            values.push(mvalues[k]);\n          }\n        }\n      }\n    }); // update ptr\n\n    ptr.push(index.length); // return matrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: size,\n      datatype: matrix._datatype\n    });\n  }\n\n  function _setsubset(matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    } // get index size and check whether the index contains a single value\n\n\n    var iSize = index.size();\n    var isScalar = index.isScalar(); // calculate the size of the submatrix, and convert it into an Array if needed\n\n    var sSize;\n\n    if (isMatrix(submatrix)) {\n      // submatrix size\n      sSize = submatrix.size(); // use array representation\n\n      submatrix = submatrix.toArray();\n    } else {\n      // get submatrix size (array, scalar)\n      sSize = arraySize(submatrix);\n    } // check index is a scalar\n\n\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      } // set value\n\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    } else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      } // check submatrix and index have the same dimensions\n\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        } // unsqueeze both outer and inner dimensions\n\n\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize);\n      } // check whether the size of the submatrix matches the index size\n\n\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      } // offsets\n\n\n      var x0 = index.min()[0];\n      var y0 = index.min()[1]; // submatrix rows and columns\n\n      var m = sSize[0];\n      var n = sSize[1]; // loop submatrix\n\n      for (var x = 0; x < m; x++) {\n        // loop columns\n        for (var y = 0; y < n; y++) {\n          // value at i, j\n          var v = submatrix[x][y]; // invoke set (zero value will remove entry from matrix)\n\n          matrix.set([x + x0, y + y0], v, defaultValue);\n        }\n      }\n    }\n\n    return matrix;\n  }\n  /**\n   * Get a single element from the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  SparseMatrix.prototype.get = function (index) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length !== this._size.length) {\n      throw new DimensionError(index.length, this._size.length);\n    } // check it is a pattern matrix\n\n\n    if (!this._values) {\n      throw new Error('Cannot invoke get on a Pattern only matrix');\n    } // row and column\n\n\n    var i = index[0];\n    var j = index[1]; // check i, j are valid\n\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[1]); // find value index\n\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index); // check k is prior to next column k and it is in the correct row\n\n\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      return this._values[k];\n    }\n\n    return 0;\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} v\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {SparseMatrix} self\n   */\n\n\n  SparseMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length !== this._size.length) {\n      throw new DimensionError(index.length, this._size.length);\n    } // check it is a pattern matrix\n\n\n    if (!this._values) {\n      throw new Error('Cannot invoke set on a Pattern only matrix');\n    } // row and column\n\n\n    var i = index[0];\n    var j = index[1]; // rows & columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(this._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, this._datatype);\n    } // check we need to resize matrix\n\n\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue); // update rows & columns\n\n\n      rows = this._size[0];\n      columns = this._size[1];\n    } // check i, j are valid\n\n\n    validateIndex(i, rows);\n    validateIndex(j, columns); // find value index\n\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index); // check k is prior to next column k and it is in the correct row\n\n\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!eq(v, zero)) {\n        // update value\n        this._values[k] = v;\n      } else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr);\n      }\n    } else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr);\n    }\n\n    return this;\n  };\n\n  function _getValueIndex(i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0) {\n      return bottom;\n    } // loop rows [top, bottom[\n\n\n    for (var r = top; r < bottom; r++) {\n      // check we found value index\n      if (index[r] === i) {\n        return r;\n      }\n    } // we did not find row\n\n\n    return top;\n  }\n\n  function _remove(k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1);\n    index.splice(k, 1); // update pointers\n\n    for (var x = j + 1; x < ptr.length; x++) {\n      ptr[x]--;\n    }\n  }\n\n  function _insert(k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v); // update row for k\n\n    index.splice(k, 0, i); // update column pointers\n\n    for (var x = j + 1; x < ptr.length; x++) {\n      ptr[x]++;\n    }\n  }\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof SparseMatrix\n   * @param {number[] | Matrix} size  The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isCollection(size)) {\n      throw new TypeError('Array or Matrix expected');\n    } // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector\n\n\n    var sizeArray = size.valueOf().map(function (value) {\n      return Array.isArray(value) && value.length === 1 ? value[0] : value;\n    });\n\n    if (sizeArray.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    } // check sizes\n\n\n    sizeArray.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + format(sizeArray) + ')');\n      }\n    }); // matrix to resize\n\n    var m = copy ? this.clone() : this; // resize matrix\n\n    return _resize(m, sizeArray[0], sizeArray[1], defaultValue);\n  };\n\n  function _resize(matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    var value = defaultValue || 0; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, matrix._datatype); // convert value to the same datatype\n\n      value = typed.convert(value, matrix._datatype);\n    } // should we insert the value?\n\n\n    var ins = !eq(value, zero); // old columns and rows\n\n    var r = matrix._size[0];\n    var c = matrix._size[1];\n    var i, j, k; // check we need to increase columns\n\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length; // check we need to insert matrix._values\n\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value); // update matrix._index\n\n\n            matrix._index.push(i);\n          }\n        }\n      } // store number of matrix._values in matrix._ptr\n\n\n      matrix._ptr[columns] = matrix._values.length;\n    } else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns); // truncate matrix._values and matrix._index\n\n\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length);\n\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length);\n    } // update columns\n\n\n    c = columns; // check we need to increase rows\n\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        var n = 0; // loop columns\n\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n; // where to insert matrix._values\n\n          k = matrix._ptr[j + 1] + n; // pointer\n\n          var p = 0; // loop new rows, initialize pointer\n\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value); // update matrix._index\n\n\n            matrix._index.splice(k + p, 0, i); // increment inserts\n\n\n            n++;\n          }\n        } // store number of matrix._values in matrix._ptr\n\n\n        matrix._ptr[c] = matrix._values.length;\n      }\n    } else if (rows < r) {\n      // deletes\n      var d = 0; // loop columns\n\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d; // where matrix._values start for next column\n\n        var k0 = matrix._ptr[j];\n        var k1 = matrix._ptr[j + 1] - d; // loop matrix._index\n\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k]; // check we need to delete value and matrix._index\n\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1); // remove item from matrix._index\n\n\n            matrix._index.splice(k, 1); // increase deletes\n\n\n            d++;\n          }\n        }\n      } // update matrix._ptr for current column\n\n\n      matrix._ptr[j] = matrix._values.length;\n    } // update matrix._size\n\n\n    matrix._size[0] = rows;\n    matrix._size[1] = columns; // return matrix\n\n    return matrix;\n  }\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  SparseMatrix.prototype.reshape = function (size, copy) {\n    // validate arguments\n    if (!isArray(size)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (size.length !== 2) {\n      throw new Error('Sparse matrices can only be reshaped in two dimensions');\n    } // check sizes\n\n\n    size.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + format(size) + ')');\n      }\n    }); // m * n must not change\n\n    if (this._size[0] * this._size[1] !== size[0] * size[1]) {\n      throw new Error('Reshaping sparse matrix will result in the wrong number of elements');\n    } // matrix to reshape\n\n\n    var m = copy ? this.clone() : this; // return unchanged if the same shape\n\n    if (this._size[0] === size[0] && this._size[1] === size[1]) {\n      return m;\n    } // Convert to COO format (generate a column index)\n\n\n    var colIndex = [];\n\n    for (var i = 0; i < m._ptr.length; i++) {\n      for (var j = 0; j < m._ptr[i + 1] - m._ptr[i]; j++) {\n        colIndex.push(i);\n      }\n    } // Clone the values array\n\n\n    var values = m._values.slice(); // Clone the row index array\n\n\n    var rowIndex = m._index.slice(); // Transform the (row, column) indices\n\n\n    for (var _i = 0; _i < m._index.length; _i++) {\n      var r1 = rowIndex[_i];\n      var c1 = colIndex[_i];\n      var flat = r1 * m._size[1] + c1;\n      colIndex[_i] = flat % size[1];\n      rowIndex[_i] = Math.floor(flat / size[1]);\n    } // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored\n    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,\n    // sorting several arrays based on some other array.\n    // OR, we could easily just:\n    // 1. Remove all values from the matrix\n\n\n    m._values.length = 0;\n    m._index.length = 0;\n    m._ptr.length = size[1] + 1;\n    m._size = size.slice();\n\n    for (var _i2 = 0; _i2 < m._ptr.length; _i2++) {\n      m._ptr[_i2] = 0;\n    } // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)\n    // This step is probably the most time-consuming\n\n\n    for (var h = 0; h < values.length; h++) {\n      var _i3 = rowIndex[h];\n      var _j = colIndex[h];\n      var v = values[h];\n\n      var k = _getValueIndex(_i3, m._ptr[_j], m._ptr[_j + 1], m._index);\n\n      _insert(k, _i3, _j, v, m._values, m._index, m._ptr);\n    } // The value indices are inserted out of order, but apparently that's... still OK?\n\n\n    return m;\n  };\n  /**\n   * Create a clone of the matrix\n   * @memberof SparseMatrix\n   * @return {SparseMatrix} clone\n   */\n\n\n  SparseMatrix.prototype.clone = function () {\n    var m = new SparseMatrix({\n      values: this._values ? clone(this._values) : undefined,\n      index: clone(this._index),\n      ptr: clone(this._ptr),\n      size: clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof SparseMatrix\n   * @returns {number[]} size\n   */\n\n\n  SparseMatrix.prototype.size = function () {\n    return this._size.slice(0); // copy the Array\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {SparseMatrix} matrix\n   */\n\n\n  SparseMatrix.prototype.map = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke map on a Pattern only matrix');\n    } // matrix instance\n\n\n    var me = this; // rows and columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // invoke callback\n\n    var invoke = function invoke(v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me);\n    }; // invoke _map\n\n\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n\n\n  function _map(matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = []; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, matrix._datatype);\n    } // invoke callback\n\n\n    var invoke = function invoke(v, x, y) {\n      // invoke callback\n      v = callback(v, x, y); // check value != 0\n\n      if (!eq(v, zero)) {\n        // store value\n        values.push(v); // index\n\n        index.push(x);\n      }\n    }; // loop columns\n\n\n    for (var j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length); // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n\n      var k0 = matrix._ptr[j];\n      var k1 = matrix._ptr[j + 1];\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // row index\n          var i = matrix._index[k]; // check i is in range\n\n          if (i >= minRow && i <= maxRow) {\n            // value @ k\n            invoke(matrix._values[k], i - minRow, j - minColumn);\n          }\n        }\n      } else {\n        // create a cache holding all defined values\n        var _values = {};\n\n        for (var _k = k0; _k < k1; _k++) {\n          var _i4 = matrix._index[_k];\n          _values[_i4] = matrix._values[_k];\n        } // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n\n\n        for (var _i5 = minRow; _i5 <= maxRow; _i5++) {\n          var value = _i5 in _values ? _values[_i5] : 0;\n          invoke(value, _i5 - minRow, j - minColumn);\n        }\n      }\n    } // store number of values in ptr\n\n\n    ptr.push(values.length); // return sparse matrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    });\n  }\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   */\n\n\n  SparseMatrix.prototype.forEach = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke forEach on a Pattern only matrix');\n    } // matrix instance\n\n\n    var me = this; // rows and columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // row index\n          var i = this._index[k]; // value @ k\n\n          callback(this._values[k], [i, j], me);\n        }\n      } else {\n        // create a cache holding all defined values\n        var values = {};\n\n        for (var _k2 = k0; _k2 < k1; _k2++) {\n          var _i6 = this._index[_k2];\n          values[_i6] = this._values[_k2];\n        } // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n\n\n        for (var _i7 = 0; _i7 < rows; _i7++) {\n          var value = _i7 in values ? values[_i7] : 0;\n          callback(value, [_i7, j], me);\n        }\n      }\n    }\n  };\n  /**\n   * Create an Array with a copy of the data of the SparseMatrix\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n\n\n  SparseMatrix.prototype.toArray = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, true);\n  };\n  /**\n   * Get the primitive value of the SparseMatrix: a two dimensions array\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n\n\n  SparseMatrix.prototype.valueOf = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, false);\n  };\n\n  function _toArray(values, index, ptr, size, copy) {\n    // rows and columns\n    var rows = size[0];\n    var columns = size[1]; // result\n\n    var a = []; // vars\n\n    var i, j; // initialize array\n\n    for (i = 0; i < rows; i++) {\n      a[i] = [];\n\n      for (j = 0; j < columns; j++) {\n        a[i][j] = 0;\n      }\n    } // loop columns\n\n\n    for (j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1]; // loop k within [k0, k1[\n\n      for (var k = k0; k < k1; k++) {\n        // row index\n        i = index[k]; // set value (use one for pattern matrix)\n\n        a[i][j] = values ? copy ? clone(values[k]) : values[k] : 1;\n      }\n    }\n\n    return a;\n  }\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof SparseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  SparseMatrix.prototype.format = function (options) {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1]; // density\n\n    var density = this.density(); // rows & columns\n\n    var str = 'Sparse Matrix [' + format(rows, options) + ' x ' + format(columns, options) + '] density: ' + format(density, options) + '\\n'; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1]; // loop k within [k0, k1[\n\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k]; // append value\n\n        str += '\\n    (' + format(i, options) + ', ' + format(j, options) + ') ==> ' + (this._values ? format(this._values[k], options) : 'X');\n      }\n    }\n\n    return str;\n  };\n  /**\n   * Get a string representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {string} str\n   */\n\n\n  SparseMatrix.prototype.toString = function () {\n    return format(this.toArray());\n  };\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {Object}\n   */\n\n\n  SparseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'SparseMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof SparseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix vector with the diagonal values.\n   */\n\n\n  SparseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows & columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // number diagonal values\n\n    var n = Math.min(rows - kSub, columns - kSuper); // diagonal arrays\n\n    var values = [];\n    var index = [];\n    var ptr = []; // initial ptr value\n\n    ptr[0] = 0; // loop columns\n\n    for (var j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1]; // loop x within [k0, k1[\n\n      for (var x = k0; x < k1; x++) {\n        // row index\n        var i = this._index[x]; // check row\n\n        if (i === j - kSuper + kSub) {\n          // value on this column\n          values.push(this._values[x]); // store row\n\n          index[values.length - 1] = i - kSub; // exit loop\n\n          break;\n        }\n      }\n    } // close ptr\n\n\n    ptr.push(values.length); // return matrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [n, 1]\n    });\n  };\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof SparseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SparseMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {SparseMatrix}\n   */\n\n\n  SparseMatrix.fromJSON = function (json) {\n    return new SparseMatrix(json);\n  };\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {Array} size                       The matrix size.\n   * @param {number | Array | Matrix } value   The values for the diagonal.\n   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]            The default value for non-diagonal\n   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.\n   *\n   * @returns {SparseMatrix}\n   */\n\n\n  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size)) {\n      throw new TypeError('Array expected, size parameter');\n    }\n\n    if (size.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    } // map size & validate\n\n\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      } // validate arguments\n\n\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      }\n\n      return s;\n    }); // validate k if any\n\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    } // equal signature to use\n\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, datatype);\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows and columns\n\n    var rows = size[0];\n    var columns = size[1]; // number of non-zero items\n\n    var n = Math.min(rows - kSub, columns - kSuper); // value extraction function\n\n    var _value; // check value\n\n\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value[i];\n      };\n    } else if (isMatrix(value)) {\n      // matrix size\n      var ms = value.size(); // validate matrix\n\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    } else {\n      // define function\n      _value = function _value() {\n        // return value\n        return value;\n      };\n    } // create arrays\n\n\n    var values = [];\n    var index = [];\n    var ptr = []; // loop items\n\n    for (var j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length); // diagonal index\n\n      var i = j - kSuper; // check we need to set diagonal value\n\n      if (i >= 0 && i < n) {\n        // get value @ i\n        var v = _value(i); // check for zero\n\n\n        if (!eq(v, zero)) {\n          // column\n          index.push(i + kSub); // add value\n\n          values.push(v);\n        }\n      }\n    } // last value should be number of values\n\n\n    ptr.push(values.length); // create SparseMatrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    });\n  };\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n\n\n  SparseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    } // check dimensions\n\n\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    } // validate index\n\n\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]); // swap rows\n\n    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr); // return current instance\n\n\n    return this;\n  };\n  /**\n   * Loop rows with data in column j.\n   *\n   * @param {number} j            Column\n   * @param {Array} values        Matrix values\n   * @param {Array} index         Matrix row indeces\n   * @param {Array} ptr           Matrix column pointers\n   * @param {Function} callback   Callback function invoked for every row in column j\n   */\n\n\n  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {\n    // indeces for column j\n    var k0 = ptr[j];\n    var k1 = ptr[j + 1]; // loop\n\n    for (var k = k0; k < k1; k++) {\n      // invoke callback\n      callback(index[k], values[k]);\n    }\n  };\n  /**\n   * Swap rows x and y in Sparse Matrix data structures.\n   *\n   * @param {number} x         Matrix row index 1\n   * @param {number} y         Matrix row index 2\n   * @param {number} columns   Number of columns in matrix\n   * @param {Array} values     Matrix values\n   * @param {Array} index      Matrix row indeces\n   * @param {Array} ptr        Matrix column pointers\n   */\n\n\n  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1]; // find value index @ x\n\n      var kx = _getValueIndex(x, k0, k1, index); // find value index @ x\n\n\n      var ky = _getValueIndex(y, k0, k1, index); // check both rows exist in matrix\n\n\n      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {\n        // swap values (check for pattern matrix)\n        if (values) {\n          var v = values[kx];\n          values[kx] = values[ky];\n          values[ky] = v;\n        } // next column\n\n\n        continue;\n      } // check x row exist & no y row\n\n\n      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {\n        // value @ x (check for pattern matrix)\n        var vx = values ? values[kx] : undefined; // insert value @ y\n\n        index.splice(ky, 0, y);\n\n        if (values) {\n          values.splice(ky, 0, vx);\n        } // remove value @ x (adjust array index if needed)\n\n\n        index.splice(ky <= kx ? kx + 1 : kx, 1);\n\n        if (values) {\n          values.splice(ky <= kx ? kx + 1 : kx, 1);\n        } // next column\n\n\n        continue;\n      } // check y row exist & no x row\n\n\n      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {\n        // value @ y (check for pattern matrix)\n        var vy = values ? values[ky] : undefined; // insert value @ x\n\n        index.splice(kx, 0, x);\n\n        if (values) {\n          values.splice(kx, 0, vy);\n        } // remove value @ y (adjust array index if needed)\n\n\n        index.splice(kx <= ky ? ky + 1 : ky, 1);\n\n        if (values) {\n          values.splice(kx <= ky ? ky + 1 : ky, 1);\n        }\n      }\n    }\n  };\n\n  return SparseMatrix;\n}, {\n  isClass: true\n});","import { factory } from '../utils/factory';\nimport { deepMap } from '../utils/collection';\nvar name = 'number';\nvar dependencies = ['typed'];\nexport var createNumber = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Create a number or convert a string, boolean, or unit to a number.\n   * When value is a matrix, all elements will be converted to number.\n   *\n   * Syntax:\n   *\n   *    math.number(value)\n   *    math.number(unit, valuelessUnit)\n   *\n   * Examples:\n   *\n   *    math.number(2)                         // returns number 2\n   *    math.number('7.2')                     // returns number 7.2\n   *    math.number(true)                      // returns number 1\n   *    math.number([true, false, true, true]) // returns [1, 0, 1, 1]\n   *    math.number(math.unit('52cm'), 'm')    // returns 0.52\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, string, unit\n   *\n   * @param {string | number | BigNumber | Fraction | boolean | Array | Matrix | Unit | null} [value]  Value to be converted\n   * @param {Unit | string} [valuelessUnit] A valueless unit, used to convert a unit to a number\n   * @return {number | Array | Matrix} The created number\n   */\n  var number = typed('number', {\n    '': function _() {\n      return 0;\n    },\n    number: function number(x) {\n      return x;\n    },\n    string: function string(x) {\n      if (x === 'NaN') return NaN;\n      var num = Number(x);\n\n      if (isNaN(num)) {\n        throw new SyntaxError('String \"' + x + '\" is no valid number');\n      }\n\n      return num;\n    },\n    BigNumber: function BigNumber(x) {\n      return x.toNumber();\n    },\n    Fraction: function Fraction(x) {\n      return x.valueOf();\n    },\n    Unit: function Unit(x) {\n      throw new Error('Second argument with valueless unit expected');\n    },\n    \"null\": function _null(x) {\n      return 0;\n    },\n    'Unit, string | Unit': function UnitStringUnit(unit, valuelessUnit) {\n      return unit.toNumber(valuelessUnit);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  }); // reviver function to parse a JSON object like:\n  //\n  //     {\"mathjs\":\"number\",\"value\":\"2.3\"}\n  //\n  // into a number 2.3\n\n  number.fromJSON = function (json) {\n    return parseFloat(json.value);\n  };\n\n  return number;\n});","import { factory } from '../../../utils/factory';\nimport { deepMap } from '../../../utils/collection';\nvar name = 'bignumber';\nvar dependencies = ['typed', 'BigNumber'];\nexport var createBignumber = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      BigNumber = _ref.BigNumber;\n\n  /**\n   * Create a BigNumber, which can store numbers with arbitrary precision.\n   * When a matrix is provided, all elements will be converted to BigNumber.\n   *\n   * Syntax:\n   *\n   *    math.bignumber(x)\n   *\n   * Examples:\n   *\n   *    0.1 + 0.2                                  // returns number 0.30000000000000004\n   *    math.bignumber(0.1) + math.bignumber(0.2)  // returns BigNumber 0.3\n   *\n   *\n   *    7.2e500                                    // returns number Infinity\n   *    math.bignumber('7.2e500')                  // returns BigNumber 7.2e500\n   *\n   * See also:\n   *\n   *    boolean, complex, index, matrix, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix | boolean | null} [value]  Value for the big number,\n   *                                                    0 by default.\n   * @returns {BigNumber} The created bignumber\n   */\n  return typed('bignumber', {\n    '': function _() {\n      return new BigNumber(0);\n    },\n    number: function number(x) {\n      // convert to string to prevent errors in case of >15 digits\n      return new BigNumber(x + '');\n    },\n    string: function string(x) {\n      return new BigNumber(x);\n    },\n    BigNumber: function BigNumber(x) {\n      // we assume a BigNumber is immutable\n      return x;\n    },\n    Fraction: function Fraction(x) {\n      return new BigNumber(x.n).div(x.d).times(x.s);\n    },\n    \"null\": function _null(x) {\n      return new BigNumber(0);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","import { factory } from '../../../utils/factory';\nimport { deepMap } from '../../../utils/collection';\nvar name = 'fraction';\nvar dependencies = ['typed', 'Fraction'];\nexport var createFraction = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      Fraction = _ref.Fraction;\n\n  /**\n   * Create a fraction convert a value to a fraction.\n   *\n   * Syntax:\n   *     math.fraction(numerator, denominator)\n   *     math.fraction({n: numerator, d: denominator})\n   *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries\n   *                                                   into fractions\n   *\n   * Examples:\n   *\n   *     math.fraction(1, 3)\n   *     math.fraction('2/3')\n   *     math.fraction({n: 2, d: 3})\n   *     math.fraction([0.2, 0.25, 1.25])\n   *\n   * See also:\n   *\n   *    bignumber, number, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]\n   *            Arguments specifying the numerator and denominator of\n   *            the fraction\n   * @return {Fraction | Array | Matrix} Returns a fraction\n   */\n  return typed('fraction', {\n    number: function number(x) {\n      if (!isFinite(x) || isNaN(x)) {\n        throw new Error(x + ' cannot be represented as a fraction');\n      }\n\n      return new Fraction(x);\n    },\n    string: function string(x) {\n      return new Fraction(x);\n    },\n    'number, number': function numberNumber(numerator, denominator) {\n      return new Fraction(numerator, denominator);\n    },\n    \"null\": function _null(x) {\n      return new Fraction(0);\n    },\n    BigNumber: function BigNumber(x) {\n      return new Fraction(x.toString());\n    },\n    Fraction: function Fraction(x) {\n      return x; // fractions are immutable\n    },\n    Object: function Object(x) {\n      return new Fraction(x);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","import { factory } from '../../../utils/factory';\nvar name = 'matrix';\nvar dependencies = ['typed', 'Matrix', 'DenseMatrix', 'SparseMatrix'];\nexport var createMatrix = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      Matrix = _ref.Matrix,\n      DenseMatrix = _ref.DenseMatrix,\n      SparseMatrix = _ref.SparseMatrix;\n\n  /**\n   * Create a Matrix. The function creates a new `math.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   * Supported storage formats are 'dense' and 'sparse'.\n   *\n   * Syntax:\n   *\n   *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n   *\n   * Examples:\n   *\n   *    let m = math.matrix([[1, 2], [3, 4]])\n   *    m.size()                        // Array [2, 2]\n   *    m.resize([3, 2], 5)\n   *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, sparse\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format\n   *\n   * @return {Matrix} The created matrix\n   */\n  return typed(name, {\n    '': function _() {\n      return _create([]);\n    },\n    string: function string(format) {\n      return _create([], format);\n    },\n    'string, string': function stringString(format, datatype) {\n      return _create([], format, datatype);\n    },\n    Array: function Array(data) {\n      return _create(data);\n    },\n    Matrix: function Matrix(data) {\n      return _create(data, data.storage());\n    },\n    'Array | Matrix, string': _create,\n    'Array | Matrix, string, string': _create\n  });\n  /**\n   * Create a new Matrix with given storage format\n   * @param {Array} data\n   * @param {string} [format]\n   * @param {string} [datatype]\n   * @returns {Matrix} Returns a new Matrix\n   * @private\n   */\n\n  function _create(data, format, datatype) {\n    // get storage format constructor\n    if (format === 'dense' || format === 'default' || format === undefined) {\n      return new DenseMatrix(data, datatype);\n    }\n\n    if (format === 'sparse') {\n      return new SparseMatrix(data, datatype);\n    }\n\n    throw new TypeError('Unknown matrix type ' + JSON.stringify(format) + '.');\n  }\n});","import { factory } from '../../utils/factory';\nimport { deepMap } from '../../utils/collection';\nimport { unaryMinusNumber } from '../../plain/number';\nvar name = 'unaryMinus';\nvar dependencies = ['typed'];\nexport var createUnaryMinus = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Inverse the sign of a value, apply a unary minus operation.\n   *\n   * For matrices, the function is evaluated element wise. Boolean values and\n   * strings will be converted to a number. For complex numbers, both real and\n   * complex value are inverted.\n   *\n   * Syntax:\n   *\n   *    math.unaryMinus(x)\n   *\n   * Examples:\n   *\n   *    math.unaryMinus(3.5)      // returns -3.5\n   *    math.unaryMinus(-4.2)     // returns 4.2\n   *\n   * See also:\n   *\n   *    add, subtract, unaryPlus\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Number to be inverted.\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Returns the value with inverted sign.\n   */\n  return typed(name, {\n    number: unaryMinusNumber,\n    Complex: function Complex(x) {\n      return x.neg();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.neg();\n    },\n    Fraction: function Fraction(x) {\n      return x.neg();\n    },\n    Unit: function Unit(x) {\n      var res = x.clone();\n      res.value = this(x.value);\n      return res;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since unaryMinus(0) = 0\n      return deepMap(x, this, true);\n    } // TODO: add support for string\n\n  });\n});","import { factory } from '../../utils/factory';\nimport { deepMap } from '../../utils/collection';\nimport { absNumber } from '../../plain/number';\nvar name = 'abs';\nvar dependencies = ['typed'];\nexport var createAbs = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Calculate the absolute value of a number. For matrices, the function is\n   * evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.abs(x)\n   *\n   * Examples:\n   *\n   *    math.abs(3.5)                // returns number 3.5\n   *    math.abs(-4.2)               // returns number 4.2\n   *\n   *    math.abs([3, -5, -1, 0, 2])  // returns Array [3, 5, 1, 0, 2]\n   *\n   * See also:\n   *\n   *    sign\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x\n   *            A number or matrix for which to get the absolute value\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit}\n   *            Absolute value of `x`\n   */\n  return typed(name, {\n    number: absNumber,\n    Complex: function Complex(x) {\n      return x.abs();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.abs();\n    },\n    Fraction: function Fraction(x) {\n      return x.abs();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since abs(0) = 0\n      return deepMap(x, this, true);\n    },\n    Unit: function Unit(x) {\n      return x.abs();\n    }\n  });\n});","import { factory } from '../../utils/factory';\nimport { addNumber } from '../../plain/number';\nvar name = 'addScalar';\nvar dependencies = ['typed'];\nexport var createAddScalar = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Add two scalar values, `x + y`.\n   * This function is meant for internal use: it is used by the public function\n   * `add`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to add\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Sum of `x` and `y`\n   * @private\n   */\n  return typed(name, {\n    'number, number': addNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.add(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.plus(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.add(y);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (x.value === null || x.value === undefined) throw new Error('Parameter x contains a unit with undefined value');\n      if (y.value === null || y.value === undefined) throw new Error('Parameter y contains a unit with undefined value');\n      if (!x.equalBase(y)) throw new Error('Units do not match');\n      var res = x.clone();\n      res.value = this(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    }\n  });\n});","import { factory } from '../../../utils/factory';\nimport { DimensionError } from '../../../error/DimensionError';\nvar name = 'algorithm01';\nvar dependencies = ['typed'];\nexport var createAlgorithm01 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          â  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = â¤\n   *          â  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // process data types\n\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined; // callback function\n\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback; // vars\n\n    var i, j; // result (DenseMatrix)\n\n    var cdata = []; // initialize c\n\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    } // workspace\n\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns in b\n\n    for (j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]; // update workspace\n\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // mark i as updated\n\n        w[i] = mark;\n      } // loop rows\n\n\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i];\n        } else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j];\n        }\n      }\n    } // return dense matrix\n\n\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory';\nvar name = 'algorithm10';\nvar dependencies = ['typed', 'DenseMatrix'];\nexport var createAlgorithm10 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      DenseMatrix = _ref.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          â  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = â¤\n   *          â  b          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm10(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cdata = []; // workspaces\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k]; // update workspace\n\n        x[r] = avalues[k];\n        w[r] = mark;\n      } // loop rows\n\n\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        } // check sparse matrix has a value @ i,j\n\n\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = b;\n        }\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory';\nimport { DimensionError } from '../../../error/DimensionError';\nvar name = 'algorithm13';\nvar dependencies = ['typed'];\nexport var createAlgorithm13 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, Bij..z)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Matrix}   b                 The DenseMatrix instance (B)\n   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658\n   */\n  return function algorithm13(a, b, callback) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b arrays\n\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype; // c arrays\n\n    var csize = []; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // validate each one of the dimension sizes\n\n\n    for (var s = 0; s < asize.length; s++) {\n      // must match\n      if (asize[s] !== bsize[s]) {\n        throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n      } // update dimension in c\n\n\n      csize[s] = asize[s];\n    } // datatype\n\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // populate cdata, iterate through dimensions\n\n\n    var cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : []; // c matrix\n\n    return a.createDenseMatrix({\n      data: cdata,\n      size: csize,\n      datatype: dt\n    });\n  }; // recursive function\n\n  function _iterate(f, level, s, n, av, bv) {\n    // initialize array for this level\n    var cv = []; // check we reach the last level\n\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = f(av[i], bv[i]);\n      }\n    } else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j]);\n      }\n    }\n\n    return cv;\n  }\n});","import { factory } from '../../../utils/factory';\nimport { clone } from '../../../utils/object';\nvar name = 'algorithm14';\nvar dependencies = ['typed'];\nexport var createAlgorithm14 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, b)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij..z,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042\n   */\n  return function algorithm14(a, b, callback, inverse) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // datatype\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // populate cdata, iterate through dimensions\n\n\n    var cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : []; // c matrix\n\n    return a.createDenseMatrix({\n      data: cdata,\n      size: clone(asize),\n      datatype: dt\n    });\n  }; // recursive function\n\n  function _iterate(f, level, s, n, av, bv, inverse) {\n    // initialize array for this level\n    var cv = []; // check we reach the last level\n\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv);\n      }\n    } else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse);\n      }\n    }\n\n    return cv;\n  }\n});","import { factory } from '../../../utils/factory';\nvar name = 'algorithm11';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createAlgorithm11 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      equalScalar = _ref.equalScalar;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          â  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = â¤\n   *          â  0          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm11(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // initialize ptr\n      cptr[j] = cindex.length; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = aindex[k]; // invoke callback\n\n        var v = inverse ? cf(b, avalues[k]) : cf(avalues[k], b); // check value is zero\n\n        if (!eq(v, zero)) {\n          // push index & value\n          cindex.push(i);\n          cvalues.push(v);\n        }\n      }\n    } // update ptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return s.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory';\nimport { DimensionError } from '../../../error/DimensionError';\nvar name = 'algorithm03';\nvar dependencies = ['typed'];\nexport var createAlgorithm03 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Iterates over SparseMatrix items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked M*N times.\n   *\n   *\n   *          â  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = â¤\n   *          â  f(Dij, 0)    ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (C)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm03(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (DenseMatrix)\n\n\n    var cdata = []; // initialize dense matrix\n\n    for (var z = 0; z < rows; z++) {\n      // initialize row\n      cdata[z] = [];\n    } // workspace\n\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update workspace\n\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        w[i] = mark;\n      } // process workspace\n\n\n      for (var y = 0; y < rows; y++) {\n        // check we have a calculated value for current row\n        if (w[y] === mark) {\n          // use calculated value\n          cdata[y][j] = x[y];\n        } else {\n          // calculate value\n          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero);\n        }\n      }\n    } // return dense matrix\n\n\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory';\nimport { DimensionError } from '../../../error/DimensionError';\nvar name = 'algorithm05';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createAlgorithm05 = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      equalScalar = _ref.equalScalar;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          â  f(Aij, Bij)  ; A(i,j) !== 0 || B(i,j) !== 0\n   * C(i,j) = â¤\n   *          â  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm05(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // workspaces\n\n    var xa = cvalues ? [] : undefined;\n    var xb = cvalues ? [] : undefined; // marks indicating we have a value in x for a given column\n\n    var wa = [];\n    var wb = []; // vars\n\n    var i, j, k, k1; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // columns mark\n\n      var mark = j + 1; // loop values A(:,j)\n\n      for (k = aptr[j], k1 = aptr[j + 1]; k < k1; k++) {\n        // row\n        i = aindex[k]; // push index\n\n        cindex.push(i); // update workspace\n\n        wa[i] = mark; // check we need to process values\n\n        if (xa) {\n          xa[i] = avalues[k];\n        }\n      } // loop values B(:,j)\n\n\n      for (k = bptr[j], k1 = bptr[j + 1]; k < k1; k++) {\n        // row\n        i = bindex[k]; // check row existed in A\n\n        if (wa[i] !== mark) {\n          // push index\n          cindex.push(i);\n        } // update workspace\n\n\n        wb[i] = mark; // check we need to process values\n\n        if (xb) {\n          xb[i] = bvalues[k];\n        }\n      } // check we need to process values (non pattern matrix)\n\n\n      if (cvalues) {\n        // initialize first index in j\n        k = cptr[j]; // loop index in j\n\n        while (k < cindex.length) {\n          // row\n          i = cindex[k]; // marks\n\n          var wai = wa[i];\n          var wbi = wb[i]; // check Aij or Bij are nonzero\n\n          if (wai === mark || wbi === mark) {\n            // matrix values @ i,j\n            var va = wai === mark ? xa[i] : zero;\n            var vb = wbi === mark ? xb[i] : zero; // Cij\n\n            var vc = cf(va, vb); // check for zero\n\n            if (!eq(vc, zero)) {\n              // push value\n              cvalues.push(vc); // increment pointer\n\n              k++;\n            } else {\n              // remove value @ i, do not increment pointer\n              cindex.splice(k, 1);\n            }\n          }\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../utils/factory';\nimport { multiplyNumber } from '../../plain/number';\nvar name = 'multiplyScalar';\nvar dependencies = ['typed'];\nexport var createMultiplyScalar = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Multiply two scalar values, `x * y`.\n   * This function is meant for internal use: it is used by the public function\n   * `multiply`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Multiplication of `x` and `y`\n   * @private\n   */\n  return typed('multiplyScalar', {\n    'number, number': multiplyNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.mul(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.times(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.mul(y);\n    },\n    'number | Fraction | BigNumber | Complex, Unit': function numberFractionBigNumberComplexUnit(x, y) {\n      var res = y.clone();\n      res.value = res.value === null ? res._normalize(x) : this(res.value, x);\n      return res;\n    },\n    'Unit, number | Fraction | BigNumber | Complex': function UnitNumberFractionBigNumberComplex(x, y) {\n      var res = x.clone();\n      res.value = res.value === null ? res._normalize(y) : this(res.value, y);\n      return res;\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return x.multiply(y);\n    }\n  });\n});","import { factory } from '../../utils/factory';\nimport { isMatrix } from '../../utils/is';\nimport { extend } from '../../utils/object';\nimport { arraySize } from '../../utils/array';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14';\nvar name = 'multiply';\nvar dependencies = ['typed', 'matrix', 'addScalar', 'multiplyScalar', 'equalScalar', 'dot'];\nexport var createMultiply = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      addScalar = _ref.addScalar,\n      multiplyScalar = _ref.multiplyScalar,\n      equalScalar = _ref.equalScalar,\n      dot = _ref.dot;\n  var algorithm11 = createAlgorithm11({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm14 = createAlgorithm14({\n    typed: typed\n  });\n\n  function _validateMatrixDimensions(size1, size2) {\n    // check left operand dimensions\n    switch (size1.length) {\n      case 1:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Vector x Vector\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length');\n            }\n\n            break;\n\n          case 2:\n            // Vector x Matrix\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vector length (' + size1[0] + ') must match Matrix rows (' + size2[0] + ')');\n            }\n\n            break;\n\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n\n        break;\n\n      case 2:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Matrix x Vector\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix columns (' + size1[1] + ') must match Vector length (' + size2[0] + ')');\n            }\n\n            break;\n\n          case 2:\n            // Matrix x Matrix\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix A columns (' + size1[1] + ') must match Matrix B rows (' + size2[0] + ')');\n            }\n\n            break;\n\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n\n        break;\n\n      default:\n        throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix A has ' + size1.length + ' dimensions)');\n    }\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (N)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {number}             Scalar value\n   */\n\n\n  function _multiplyVectorVector(a, b, n) {\n    // check empty vector\n    if (n === 0) {\n      throw new Error('Cannot multiply two empty vectors');\n    }\n\n    return dot(a, b);\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Matrix         (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n\n\n  function _multiplyVectorMatrix(a, b) {\n    // process storage\n    if (b.storage() !== 'dense') {\n      throw new Error('Support for SparseMatrix not implemented');\n    }\n\n    return _multiplyVectorDenseMatrix(a, b);\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Dense Matrix   (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n\n\n  function _multiplyVectorDenseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b dense\n\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype; // rows & columns\n\n    var alength = asize[0];\n    var bcolumns = bsize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var c = []; // loop matrix columns\n\n    for (var j = 0; j < bcolumns; j++) {\n      // sum (do not initialize it with zero)\n      var sum = mf(adata[0], bdata[0][j]); // loop vector\n\n      for (var i = 1; i < alength; i++) {\n        // multiply & accumulate\n        sum = af(sum, mf(adata[i], bdata[i][j]));\n      }\n\n      c[j] = sum;\n    } // return matrix\n\n\n    return a.createDenseMatrix({\n      data: c,\n      size: [bcolumns],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {Matrix}             Dense Vector   (M)\n   */\n\n\n  var _multiplyMatrixVector = typed('_multiplyMatrixVector', {\n    'DenseMatrix, any': _multiplyDenseMatrixVector,\n    'SparseMatrix, any': _multiplySparseMatrixVector\n  });\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Matrix         (NxC)\n   *\n   * @return {Matrix}             Matrix         (MxC)\n   */\n\n\n  var _multiplyMatrixMatrix = typed('_multiplyMatrixMatrix', {\n    'DenseMatrix, DenseMatrix': _multiplyDenseMatrixDenseMatrix,\n    'DenseMatrix, SparseMatrix': _multiplyDenseMatrixSparseMatrix,\n    'SparseMatrix, DenseMatrix': _multiplySparseMatrixDenseMatrix,\n    'SparseMatrix, SparseMatrix': _multiplySparseMatrixSparseMatrix\n  });\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix  (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             Dense Vector (M)\n   */\n\n\n  function _multiplyDenseMatrixVector(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b dense\n\n    var bdata = b._data;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = asize[0];\n    var acolumns = asize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var c = []; // loop matrix a rows\n\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i]; // sum (do not initialize it with zero)\n\n      var sum = mf(row[0], bdata[0]); // loop matrix a columns\n\n      for (var j = 1; j < acolumns; j++) {\n        // multiply & accumulate\n        sum = af(sum, mf(row[j], bdata[j]));\n      }\n\n      c[i] = sum;\n    } // return matrix\n\n\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            DenseMatrix    (NxC)\n   *\n   * @return {Matrix}             DenseMatrix    (MxC)\n   */\n\n\n  function _multiplyDenseMatrixDenseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b dense\n\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = asize[0];\n    var acolumns = asize[1];\n    var bcolumns = bsize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var c = []; // loop matrix a rows\n\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i]; // initialize row array\n\n      c[i] = []; // loop matrix b columns\n\n      for (var j = 0; j < bcolumns; j++) {\n        // sum (avoid initializing sum to zero)\n        var sum = mf(row[0], bdata[0][j]); // loop matrix a columns\n\n        for (var x = 1; x < acolumns; x++) {\n          // multiply & accumulate\n          sum = af(sum, mf(row[x], bdata[x][j]));\n        }\n\n        c[i][j] = sum;\n      }\n    } // return matrix\n\n\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows, bcolumns],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            SparseMatrix   (NxC)\n   *\n   * @return {Matrix}             SparseMatrix   (MxC)\n   */\n\n\n  function _multiplyDenseMatrixSparseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b sparse\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate b matrix\n\n    if (!bvalues) {\n      throw new Error('Cannot multiply Dense Matrix times Pattern only Matrix');\n    } // rows & columns\n\n\n    var arows = asize[0];\n    var bcolumns = bsize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // equalScalar signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt);\n    } // result\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // c matrix\n\n    var c = b.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    }); // loop b columns\n\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length; // indeces in column jb\n\n      var kb0 = bptr[jb];\n      var kb1 = bptr[jb + 1]; // do not process column jb if no data exists\n\n      if (kb1 > kb0) {\n        // last row mark processed\n        var last = 0; // loop a rows\n\n        for (var i = 0; i < arows; i++) {\n          // column mark\n          var mark = i + 1; // C[i, jb]\n\n          var cij = void 0; // values in b column j\n\n          for (var kb = kb0; kb < kb1; kb++) {\n            // row\n            var ib = bindex[kb]; // check value has been initialized\n\n            if (last !== mark) {\n              // first value in column jb\n              cij = mf(adata[i][ib], bvalues[kb]); // update mark\n\n              last = mark;\n            } else {\n              // accumulate value\n              cij = af(cij, mf(adata[i][ib], bvalues[kb]));\n            }\n          } // check column has been processed and value != 0\n\n\n          if (last === mark && !eq(cij, zero)) {\n            // push row & value\n            cindex.push(i);\n            cvalues.push(cij);\n          }\n        }\n      }\n    } // update ptr\n\n\n    cptr[bcolumns] = cindex.length; // return sparse matrix\n\n    return c;\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix    (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             SparseMatrix    (M, 1)\n   */\n\n\n  function _multiplySparseMatrixVector(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype; // validate a matrix\n\n    if (!avalues) {\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    } // b dense\n\n\n    var bdata = b._data;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = a._size[0];\n    var brows = b._size[0]; // result\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // equalScalar signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt);\n    } // workspace\n\n\n    var x = []; // vector with marks indicating a value x[i] exists in a given column\n\n    var w = []; // update ptr\n\n    cptr[0] = 0; // rows in b\n\n    for (var ib = 0; ib < brows; ib++) {\n      // b[ib]\n      var vbi = bdata[ib]; // check b[ib] != 0, avoid loops\n\n      if (!eq(vbi, zero)) {\n        // A values & index in ib column\n        for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n          // a row\n          var ia = aindex[ka]; // check value exists in current j\n\n          if (!w[ia]) {\n            // ia is new entry in j\n            w[ia] = true; // add i to pattern of C\n\n            cindex.push(ia); // x(ia) = A\n\n            x[ia] = mf(vbi, avalues[ka]);\n          } else {\n            // i exists in C already\n            x[ia] = af(x[ia], mf(vbi, avalues[ka]));\n          }\n        }\n      }\n    } // copy values from x to column jb of c\n\n\n    for (var p1 = cindex.length, p = 0; p < p1; p++) {\n      // row\n      var ic = cindex[p]; // copy value\n\n      cvalues[p] = x[ic];\n    } // update ptr\n\n\n    cptr[1] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, 1],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            DenseMatrix       (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n\n\n  function _multiplySparseMatrixDenseMatrix(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype; // validate a matrix\n\n    if (!avalues) {\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    } // b dense\n\n\n    var bdata = b._data;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = a._size[0];\n    var brows = b._size[0];\n    var bcolumns = b._size[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // equalScalar signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt);\n    } // result\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // c matrix\n\n    var c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    }); // workspace\n\n    var x = []; // vector with marks indicating a value x[i] exists in a given column\n\n    var w = []; // loop b columns\n\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length; // mark in workspace for current column\n\n      var mark = jb + 1; // rows in jb\n\n      for (var ib = 0; ib < brows; ib++) {\n        // b[ib, jb]\n        var vbij = bdata[ib][jb]; // check b[ib, jb] != 0, avoid loops\n\n        if (!eq(vbij, zero)) {\n          // A values & index in ib column\n          for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // a row\n            var ia = aindex[ka]; // check value exists in current j\n\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark; // add i to pattern of C\n\n              cindex.push(ia); // x(ia) = A\n\n              x[ia] = mf(vbij, avalues[ka]);\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(vbij, avalues[ka]));\n            }\n          }\n        }\n      } // copy values from x to column jb of c\n\n\n      for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n        // row\n        var ic = cindex[p]; // copy value\n\n        cvalues[p] = x[ic];\n      }\n    } // update ptr\n\n\n    cptr[bcolumns] = cindex.length; // return sparse matrix\n\n    return c;\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            SparseMatrix      (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n\n\n  function _multiplySparseMatrixSparseMatrix(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype; // b sparse\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = a._size[0];\n    var bcolumns = b._size[1]; // flag indicating both matrices (a & b) contain data\n\n    var values = avalues && bvalues; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var cvalues = values ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // c matrix\n\n    var c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    }); // workspace\n\n    var x = values ? [] : undefined; // vector with marks indicating a value x[i] exists in a given column\n\n    var w = []; // variables\n\n    var ka, ka0, ka1, kb, kb0, kb1, ia, ib; // loop b columns\n\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length; // mark in workspace for current column\n\n      var mark = jb + 1; // B values & index in j\n\n      for (kb0 = bptr[jb], kb1 = bptr[jb + 1], kb = kb0; kb < kb1; kb++) {\n        // b row\n        ib = bindex[kb]; // check we need to process values\n\n        if (values) {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka]; // check value exists in current j\n\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark; // add i to pattern of C\n\n              cindex.push(ia); // x(ia) = A\n\n              x[ia] = mf(bvalues[kb], avalues[ka]);\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(bvalues[kb], avalues[ka]));\n            }\n          }\n        } else {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka]; // check value exists in current j\n\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark; // add i to pattern of C\n\n              cindex.push(ia);\n            }\n          }\n        }\n      } // check we need to process matrix values (pattern matrix)\n\n\n      if (values) {\n        // copy values from x to column jb of c\n        for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n          // row\n          var ic = cindex[p]; // copy value\n\n          cvalues[p] = x[ic];\n        }\n      }\n    } // update ptr\n\n\n    cptr[bcolumns] = cindex.length; // return sparse matrix\n\n    return c;\n  }\n  /**\n   * Multiply two or more values, `x * y`.\n   * For matrices, the matrix product is calculated.\n   *\n   * Syntax:\n   *\n   *    math.multiply(x, y)\n   *    math.multiply(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.multiply(4, 5.2)        // returns number 20.8\n   *    math.multiply(2, 3, 4)       // returns number 24\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.multiply(a, b)          // returns Complex 5 + 14i\n   *\n   *    const c = [[1, 2], [4, 3]]\n   *    const d = [[1, 2, 3], [3, -4, 7]]\n   *    math.multiply(c, d)          // returns Array [[7, -6, 17], [13, -4, 33]]\n   *\n   *    const e = math.unit('2.1 km')\n   *    math.multiply(3, e)          // returns Unit 6.3 km\n   *\n   * See also:\n   *\n   *    divide, prod, cross, dot\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Multiplication of `x` and `y`\n   */\n\n\n  return typed(name, extend({\n    // we extend the signatures of multiplyScalar with signatures dealing with matrices\n    'Array, Array': function ArrayArray(x, y) {\n      // check dimensions\n      _validateMatrixDimensions(arraySize(x), arraySize(y)); // use dense matrix implementation\n\n\n      var m = this(matrix(x), matrix(y)); // return array or scalar\n\n      return isMatrix(m) ? m.valueOf() : m;\n    },\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      // dimensions\n      var xsize = x.size();\n      var ysize = y.size(); // check dimensions\n\n      _validateMatrixDimensions(xsize, ysize); // process dimensions\n\n\n      if (xsize.length === 1) {\n        // process y dimensions\n        if (ysize.length === 1) {\n          // Vector * Vector\n          return _multiplyVectorVector(x, y, xsize[0]);\n        } // Vector * Matrix\n\n\n        return _multiplyVectorMatrix(x, y);\n      } // process y dimensions\n\n\n      if (ysize.length === 1) {\n        // Matrix * Vector\n        return _multiplyMatrixVector(x, y);\n      } // Matrix * Matrix\n\n\n      return _multiplyMatrixMatrix(x, y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use Matrix * Matrix implementation\n      return this(x, matrix(y));\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use Matrix * Matrix implementation\n      return this(matrix(x, y.storage()), y);\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, multiplyScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm11(y, x, multiplyScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, multiplyScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();\n    },\n    'any, any': multiplyScalar,\n    'any, any, ...any': function anyAnyAny(x, y, rest) {\n      var result = this(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = this(result, rest[i]);\n      }\n\n      return result;\n    }\n  }, multiplyScalar.signatures));\n});","import { factory } from '../../utils/factory';\nimport { deepMap } from '../../utils/collection';\nvar name = 'sqrt';\nvar dependencies = ['config', 'typed', 'Complex'];\nexport var createSqrt = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var config = _ref.config,\n      typed = _ref.typed,\n      Complex = _ref.Complex;\n\n  /**\n   * Calculate the square root of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sqrt(x)\n   *\n   * Examples:\n   *\n   *    math.sqrt(25)                // returns 5\n   *    math.square(5)               // returns 25\n   *    math.sqrt(-4)                // returns Complex 2i\n   *\n   * See also:\n   *\n   *    square, multiply, cube, cbrt, sqrtm\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix | Unit} x\n   *            Value for which to calculate the square root.\n   * @return {number | BigNumber | Complex | Array | Matrix | Unit}\n   *            Returns the square root of `x`\n   */\n  return typed('sqrt', {\n    number: _sqrtNumber,\n    Complex: function Complex(x) {\n      return x.sqrt();\n    },\n    BigNumber: function BigNumber(x) {\n      if (!x.isNegative() || config.predictable) {\n        return x.sqrt();\n      } else {\n        // negative value -> downgrade to number to do complex value computation\n        return _sqrtNumber(x.toNumber());\n      }\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since sqrt(0) = 0\n      return deepMap(x, this, true);\n    },\n    Unit: function Unit(x) {\n      // Someday will work for complex units when they are implemented\n      return x.pow(0.5);\n    }\n  });\n  /**\n   * Calculate sqrt for a number\n   * @param {number} x\n   * @returns {number | Complex} Returns the square root of x\n   * @private\n   */\n\n  function _sqrtNumber(x) {\n    if (isNaN(x)) {\n      return NaN;\n    } else if (x >= 0 || config.predictable) {\n      return Math.sqrt(x);\n    } else {\n      return new Complex(x, 0).sqrt();\n    }\n  }\n});","import { factory } from '../../utils/factory';\nimport { DimensionError } from '../../error/DimensionError';\nimport { createAlgorithm01 } from '../../type/matrix/utils/algorithm01';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03';\nimport { createAlgorithm05 } from '../../type/matrix/utils/algorithm05';\nimport { createAlgorithm10 } from '../../type/matrix/utils/algorithm10';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14';\nvar name = 'subtract';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'addScalar', 'unaryMinus', 'DenseMatrix'];\nexport var createSubtract = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      addScalar = _ref.addScalar,\n      unaryMinus = _ref.unaryMinus,\n      DenseMatrix = _ref.DenseMatrix;\n  // TODO: split function subtract in two: subtract and subtractScalar\n  var algorithm01 = createAlgorithm01({\n    typed: typed\n  });\n  var algorithm03 = createAlgorithm03({\n    typed: typed\n  });\n  var algorithm05 = createAlgorithm05({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm10 = createAlgorithm10({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed: typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed: typed\n  });\n  /**\n   * Subtract two values, `x - y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.subtract(x, y)\n   *\n   * Examples:\n   *\n   *    math.subtract(5.3, 2)        // returns number 3.3\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.subtract(a, b)          // returns Complex -2 + 2i\n   *\n   *    math.subtract([5, 7, 4], 4)  // returns Array [1, 3, 0]\n   *\n   *    const c = math.unit('2.1 km')\n   *    const d = math.unit('500m')\n   *    math.subtract(c, d)          // returns Unit 1.6 km\n   *\n   * See also:\n   *\n   *    add\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x\n   *            Initial value\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y\n   *            Value to subtract from `x`\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}\n   *            Subtraction of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x - y;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.sub(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.minus(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.sub(y);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (x.value === null) {\n        throw new Error('Parameter x contains a unit with undefined value');\n      }\n\n      if (y.value === null) {\n        throw new Error('Parameter y contains a unit with undefined value');\n      }\n\n      if (!x.equalBase(y)) {\n        throw new Error('Units do not match');\n      }\n\n      var res = x.clone();\n      res.value = this(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm05(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm10(x, unaryMinus(y), addScalar);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm10(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n/**\n * Check whether matrix x and y have the same number of dimensions.\n * Throws a DimensionError when dimensions are not equal\n * @param {Matrix} x\n * @param {Matrix} y\n */\n\nfunction checkEqualDimensions(x, y) {\n  var xsize = x.size();\n  var ysize = y.size();\n\n  if (xsize.length !== ysize.length) {\n    throw new DimensionError(xsize.length, ysize.length);\n  }\n}","import { factory } from '../../utils/factory';\nimport { deepMap } from '../../utils/collection';\nvar name = 'conj';\nvar dependencies = ['typed'];\nexport var createConj = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Compute the complex conjugate of a complex value.\n   * If `x = a+bi`, the complex conjugate of `x` is `a - bi`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.conj(x)\n   *\n   * Examples:\n   *\n   *    math.conj(math.complex('2 + 3i'))  // returns Complex 2 - 3i\n   *    math.conj(math.complex('2 - 3i'))  // returns Complex 2 + 3i\n   *    math.conj(math.complex('-5.2i'))  // returns Complex 5.2i\n   *\n   * See also:\n   *\n   *    re, im, arg, abs\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            A complex number or array with complex numbers\n   * @return {number | BigNumber | Complex | Array | Matrix}\n   *            The complex conjugate of x\n   */\n  return typed(name, {\n    number: function number(x) {\n      return x;\n    },\n    BigNumber: function BigNumber(x) {\n      return x;\n    },\n    Complex: function Complex(x) {\n      return x.conjugate();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, this);\n    }\n  });\n});","import { arraySize, squeeze } from '../../utils/array';\nimport { factory } from '../../utils/factory';\nvar name = 'cross';\nvar dependencies = ['typed', 'matrix', 'subtract', 'multiply'];\nexport var createCross = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      subtract = _ref.subtract,\n      multiply = _ref.multiply;\n\n  /**\n   * Calculate the cross product for two vectors in three dimensional space.\n   * The cross product of `A = [a1, a2, a3]` and `B = [b1, b2, b3]` is defined\n   * as:\n   *\n   *    cross(A, B) = [\n   *      a2 * b3 - a3 * b2,\n   *      a3 * b1 - a1 * b3,\n   *      a1 * b2 - a2 * b1\n   *    ]\n   *\n   * If one of the input vectors has a dimension greater than 1, the output\n   * vector will be a 1x3 (2-dimensional) matrix.\n   *\n   * Syntax:\n   *\n   *    math.cross(x, y)\n   *\n   * Examples:\n   *\n   *    math.cross([1, 1, 0],   [0, 1, 1])       // Returns [1, -1, 1]\n   *    math.cross([3, -3, 1],  [4, 9, 2])       // Returns [-15, -2, 39]\n   *    math.cross([2, 3, 4],   [5, 6, 7])       // Returns [-3, 6, -3]\n   *    math.cross([[1, 2, 3]], [[4], [5], [6]]) // Returns [[-3, 6, -3]]\n   *\n   * See also:\n   *\n   *    dot, multiply\n   *\n   * @param  {Array | Matrix} x   First vector\n   * @param  {Array | Matrix} y   Second vector\n   * @return {Array | Matrix}     Returns the cross product of `x` and `y`\n   */\n  return typed(name, {\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      return matrix(_cross(x.toArray(), y.toArray()));\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return matrix(_cross(x.toArray(), y));\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return matrix(_cross(x, y.toArray()));\n    },\n    'Array, Array': _cross\n  });\n  /**\n   * Calculate the cross product for two arrays\n   * @param {Array} x  First vector\n   * @param {Array} y  Second vector\n   * @returns {Array} Returns the cross product of x and y\n   * @private\n   */\n\n  function _cross(x, y) {\n    var highestDimension = Math.max(arraySize(x).length, arraySize(y).length);\n    x = squeeze(x);\n    y = squeeze(y);\n    var xSize = arraySize(x);\n    var ySize = arraySize(y);\n\n    if (xSize.length !== 1 || ySize.length !== 1 || xSize[0] !== 3 || ySize[0] !== 3) {\n      throw new RangeError('Vectors with length 3 expected ' + '(Size A = [' + xSize.join(', ') + '], B = [' + ySize.join(', ') + '])');\n    }\n\n    var product = [subtract(multiply(x[1], y[2]), multiply(x[2], y[1])), subtract(multiply(x[2], y[0]), multiply(x[0], y[2])), subtract(multiply(x[0], y[1]), multiply(x[1], y[0]))];\n\n    if (highestDimension > 1) {\n      return [product];\n    } else {\n      return product;\n    }\n  }\n});","export function noBignumber() {\n  throw new Error('No \"bignumber\" implementation available');\n}\nexport function noFraction() {\n  throw new Error('No \"fraction\" implementation available');\n}\nexport function noMatrix() {\n  throw new Error('No \"matrix\" implementation available');\n}\nexport function noIndex() {\n  throw new Error('No \"index\" implementation available');\n}\nexport function noSubset() {\n  throw new Error('No \"matrix\" implementation available');\n}","import { arraySize } from '../../utils/array';\nimport { factory } from '../../utils/factory';\nimport { noMatrix } from '../../utils/noop';\nvar name = 'size';\nvar dependencies = ['typed', 'config', '?matrix'];\nexport var createSize = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      matrix = _ref.matrix;\n\n  /**\n   * Calculate the size of a matrix or scalar.\n   *\n   * Syntax:\n   *\n   *     math.size(x)\n   *\n   * Examples:\n   *\n   *     math.size(2.3)                  // returns []\n   *     math.size('hello world')        // returns [11]\n   *\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.size(A)                    // returns [2, 3]\n   *     math.size(math.range(1,6))      // returns [5]\n   *\n   * See also:\n   *\n   *     resize, squeeze, subset\n   *\n   * @param {boolean | number | Complex | Unit | string | Array | Matrix} x  A matrix\n   * @return {Array | Matrix} A vector with size of `x`.\n   */\n  return typed(name, {\n    Matrix: function Matrix(x) {\n      return x.create(x.size());\n    },\n    Array: arraySize,\n    string: function string(x) {\n      return config.matrix === 'Array' ? [x.length] : matrix([x.length]);\n    },\n    'number | Complex | BigNumber | Unit | boolean | null': function numberComplexBigNumberUnitBooleanNull(x) {\n      // scalar\n      return config.matrix === 'Array' ? [] : matrix ? matrix([]) : noMatrix();\n    }\n  });\n});","import { typeOf } from '../../utils/is';\nimport { factory } from '../../utils/factory';\nimport { noBignumber, noFraction } from '../../utils/noop';\nvar name = 'numeric';\nvar dependencies = ['number', '?bignumber', '?fraction'];\nexport var createNumeric = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var _number = _ref.number,\n      bignumber = _ref.bignumber,\n      fraction = _ref.fraction;\n  var validInputTypes = {\n    string: true,\n    number: true,\n    BigNumber: true,\n    Fraction: true\n  }; // Load the conversion functions for each output type\n\n  var validOutputTypes = {\n    number: function number(x) {\n      return _number(x);\n    },\n    BigNumber: bignumber ? function (x) {\n      return bignumber(x);\n    } : noBignumber,\n    Fraction: fraction ? function (x) {\n      return fraction(x);\n    } : noFraction\n  };\n  /**\n   * Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.\n   *\n   * Syntax:\n   *\n   *    math.numeric(x)\n   *\n   * Examples:\n   *\n   *    math.numeric('4')                           // returns number 4\n   *    math.numeric('4', 'number')                 // returns number 4\n   *    math.numeric('4', 'BigNumber')              // returns BigNumber 4\n   *    math.numeric('4', 'Fraction')               // returns Fraction 4\n   *    math.numeric(4, 'Fraction')                 // returns Fraction 4\n   *    math.numeric(math.fraction(2, 5), 'number') // returns number 0.4\n   *\n   * See also:\n   *\n   *    number, fraction, bignumber, string, format\n   *\n   * @param {string | number | BigNumber | Fraction } value\n   *              A numeric value or a string containing a numeric value\n   * @param {string} outputType\n   *              Desired numeric output type.\n   *              Available values: 'number', 'BigNumber', or 'Fraction'\n   * @return {number | BigNumber | Fraction}\n   *              Returns an instance of the numeric in the requested type\n   */\n\n  return function numeric(value, outputType) {\n    var inputType = typeOf(value);\n\n    if (!(inputType in validInputTypes)) {\n      throw new TypeError('Cannot convert ' + value + ' of type \"' + inputType + '\"; valid input types are ' + Object.keys(validInputTypes).join(', '));\n    }\n\n    if (!(outputType in validOutputTypes)) {\n      throw new TypeError('Cannot convert ' + value + ' to type \"' + outputType + '\"; valid output types are ' + Object.keys(validOutputTypes).join(', '));\n    }\n\n    if (outputType === inputType) {\n      return value;\n    } else {\n      return validOutputTypes[outputType](value);\n    }\n  };\n});","import { factory } from '../../utils/factory';\nimport { typeOf } from '../../utils/is';\nvar name = 'divideScalar';\nvar dependencies = ['typed', 'numeric'];\nexport var createDivideScalar = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      numeric = _ref.numeric;\n\n  /**\n   * Divide two scalar values, `x / y`.\n   * This function is meant for internal use: it is used by the public functions\n   * `divide` and `inv`.\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   Numerator\n   * @param  {number | BigNumber | Fraction | Complex} y          Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Quotient, `x / y`\n   * @private\n   */\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x / y;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.div(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.div(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.div(y);\n    },\n    'Unit, number | Fraction | BigNumber': function UnitNumberFractionBigNumber(x, y) {\n      var res = x.clone(); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, typeOf(y));\n      res.value = this(res.value === null ? res._normalize(one) : res.value, y);\n      return res;\n    },\n    'number | Fraction | BigNumber, Unit': function numberFractionBigNumberUnit(x, y) {\n      var res = y.clone();\n      res = res.pow(-1); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, typeOf(x));\n      res.value = this(x, y.value === null ? y._normalize(one) : y.value);\n      return res;\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return x.divide(y);\n    }\n  });\n});","import { factory } from '../../utils/factory';\nimport { isMatrix } from '../../utils/is';\nvar name = 'dot';\nvar dependencies = ['typed', 'addScalar', 'multiplyScalar', 'conj', 'size'];\nexport var createDot = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      addScalar = _ref.addScalar,\n      multiplyScalar = _ref.multiplyScalar,\n      conj = _ref.conj,\n      size = _ref.size;\n\n  /**\n   * Calculate the dot product of two vectors. The dot product of\n   * `A = [a1, a2, ..., an]` and `B = [b1, b2, ..., bn]` is defined as:\n   *\n   *    dot(A, B) = conj(a1) * b1 + conj(a2) * b2 + ... + conj(an) * bn\n   *\n   * Syntax:\n   *\n   *    math.dot(x, y)\n   *\n   * Examples:\n   *\n   *    math.dot([2, 4, 1], [2, 2, 3])       // returns number 15\n   *    math.multiply([2, 4, 1], [2, 2, 3])  // returns number 15\n   *\n   * See also:\n   *\n   *    multiply, cross\n   *\n   * @param  {Array | Matrix} x     First vector\n   * @param  {Array | Matrix} y     Second vector\n   * @return {number}               Returns the dot product of `x` and `y`\n   */\n  return typed(name, {\n    'Array | DenseMatrix, Array | DenseMatrix': _denseDot,\n    'SparseMatrix, SparseMatrix': _sparseDot\n  });\n\n  function _validateDim(x, y) {\n    var xSize = _size(x);\n\n    var ySize = _size(y);\n\n    var xLen, yLen;\n\n    if (xSize.length === 1) {\n      xLen = xSize[0];\n    } else if (xSize.length === 2 && xSize[1] === 1) {\n      xLen = xSize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + xSize.join(', ') + ')');\n    }\n\n    if (ySize.length === 1) {\n      yLen = ySize[0];\n    } else if (ySize.length === 2 && ySize[1] === 1) {\n      yLen = ySize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + ySize.join(', ') + ')');\n    }\n\n    if (xLen !== yLen) throw new RangeError('Vectors must have equal length (' + xLen + ' != ' + yLen + ')');\n    if (xLen === 0) throw new RangeError('Cannot calculate the dot product of empty vectors');\n    return xLen;\n  }\n\n  function _denseDot(a, b) {\n    var N = _validateDim(a, b);\n\n    var adata = isMatrix(a) ? a._data : a;\n    var adt = isMatrix(a) ? a._datatype : undefined;\n    var bdata = isMatrix(b) ? b._data : b;\n    var bdt = isMatrix(b) ? b._datatype : undefined; // are these 2-dimensional column vectors? (as opposed to 1-dimensional vectors)\n\n    var aIsColumn = _size(a).length === 2;\n    var bIsColumn = _size(b).length === 2;\n    var add = addScalar;\n    var mul = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      var dt = adt; // find signatures that matches (dt, dt)\n\n      add = typed.find(addScalar, [dt, dt]);\n      mul = typed.find(multiplyScalar, [dt, dt]);\n    } // both vectors 1-dimensional\n\n\n    if (!aIsColumn && !bIsColumn) {\n      var c = mul(conj(adata[0]), bdata[0]);\n\n      for (var i = 1; i < N; i++) {\n        c = add(c, mul(conj(adata[i]), bdata[i]));\n      }\n\n      return c;\n    } // a is 1-dim, b is column\n\n\n    if (!aIsColumn && bIsColumn) {\n      var _c = mul(conj(adata[0]), bdata[0][0]);\n\n      for (var _i = 1; _i < N; _i++) {\n        _c = add(_c, mul(conj(adata[_i]), bdata[_i][0]));\n      }\n\n      return _c;\n    } // a is column, b is 1-dim\n\n\n    if (aIsColumn && !bIsColumn) {\n      var _c2 = mul(conj(adata[0][0]), bdata[0]);\n\n      for (var _i2 = 1; _i2 < N; _i2++) {\n        _c2 = add(_c2, mul(conj(adata[_i2][0]), bdata[_i2]));\n      }\n\n      return _c2;\n    } // both vectors are column\n\n\n    if (aIsColumn && bIsColumn) {\n      var _c3 = mul(conj(adata[0][0]), bdata[0][0]);\n\n      for (var _i3 = 1; _i3 < N; _i3++) {\n        _c3 = add(_c3, mul(conj(adata[_i3][0]), bdata[_i3][0]));\n      }\n\n      return _c3;\n    }\n  }\n\n  function _sparseDot(x, y) {\n    _validateDim(x, y);\n\n    var xindex = x._index;\n    var xvalues = x._values;\n    var yindex = y._index;\n    var yvalues = y._values; // TODO optimize add & mul using datatype\n\n    var c = 0;\n    var add = addScalar;\n    var mul = multiplyScalar;\n    var i = 0;\n    var j = 0;\n\n    while (i < xindex.length && j < yindex.length) {\n      var I = xindex[i];\n      var J = yindex[j];\n\n      if (I < J) {\n        i++;\n        continue;\n      }\n\n      if (I > J) {\n        j++;\n        continue;\n      }\n\n      if (I === J) {\n        c = add(c, mul(xvalues[i], yvalues[j]));\n        i++;\n        j++;\n      }\n    }\n\n    return c;\n  } // TODO remove this once #1771 is fixed\n\n\n  function _size(x) {\n    return isMatrix(x) ? x.size() : size(x);\n  }\n});","import { isBigNumber } from '../../utils/is';\nimport { factory } from '../../utils/factory';\nvar name = 'distance';\nvar dependencies = ['typed', 'addScalar', 'subtract', 'divideScalar', 'multiplyScalar', 'unaryMinus', 'sqrt', 'abs'];\nexport var createDistance = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      addScalar = _ref.addScalar,\n      subtract = _ref.subtract,\n      multiplyScalar = _ref.multiplyScalar,\n      divideScalar = _ref.divideScalar,\n      unaryMinus = _ref.unaryMinus,\n      sqrt = _ref.sqrt,\n      abs = _ref.abs;\n\n  /**\n    * Calculates:\n    *    The eucledian distance between two points in N-dimensional spaces.\n    *    Distance between point and a line in 2 and 3 dimensional spaces.\n    *    Pairwise distance between a set of 2D or 3D points\n    * NOTE:\n    *    When substituting coefficients of a line(a, b and c), use ax + by + c = 0 instead of ax + by = c\n    *    For parametric equation of a 3D line, x0, y0, z0, a, b, c are from: (xâx0, yây0, zâz0) = t(a, b, c)\n    *\n    * Syntax:\n    *    math.distance([x1, y1], [x2, y2])\n    *-   math.distance({pointOneX: 4, pointOneY: 5}, {pointTwoX: 2, pointTwoY: 7})\n    *    math.distance([x1, y1, z1], [x2, y2, z2])\n    *    math.distance({pointOneX: 4, pointOneY: 5, pointOneZ: 8}, {pointTwoX: 2, pointTwoY: 7, pointTwoZ: 9})\n    *    math.distance([x1, y1, ... , N1], [x2, y2, ... , N2])\n    *    math.distance([[A], [B], [C]...])\n    *    math.distance([x1, y1], [LinePtX1, LinePtY1], [LinePtX2, LinePtY2])\n    *    math.distance({pointX: 1, pointY: 4}, {lineOnePtX: 6, lineOnePtY: 3}, {lineTwoPtX: 2, lineTwoPtY: 8})\n    *    math.distance([x1, y1, z1], [LinePtX1, LinePtY1, LinePtZ1], [LinePtX2, LinePtY2, LinePtZ2])\n    *    math.distance({pointX: 1, pointY: 4, pointZ: 7}, {lineOnePtX: 6, lineOnePtY: 3, lineOnePtZ: 4}, {lineTwoPtX: 2, lineTwoPtY: 8, lineTwoPtZ: 5})\n    *    math.distance([x1, y1], [xCoeffLine, yCoeffLine, constant])\n    *    math.distance({pointX: 10, pointY: 10}, {xCoeffLine: 8, yCoeffLine: 1, constant: 3})\n    *    math.distance([x1, y1, z1], [x0, y0, z0, a-tCoeff, b-tCoeff, c-tCoeff]) point and parametric equation of 3D line\n    *    math.distance([x, y, z], [x0, y0, z0, a, b, c])\n    *    math.distance({pointX: 2, pointY: 5, pointZ: 9}, {x0: 4, y0: 6, z0: 3, a: 4, b: 2, c: 0})\n    *\n    * Examples:\n    *    math.distance([0,0], [4,4])                     // Returns 5.6569\n    *    math.distance(\n    *     {pointOneX: 0, pointOneY: 0},\n    *     {pointTwoX: 10, pointTwoY: 10})                // Returns 14.142135623730951\n    *    math.distance([1, 0, 1], [4, -2, 2])            // Returns 3.74166\n    *    math.distance(\n    *     {pointOneX: 4, pointOneY: 5, pointOneZ: 8},\n    *     {pointTwoX: 2, pointTwoY: 7, pointTwoZ: 9})    // Returns 3\n    *    math.distance([1, 0, 1, 0], [0, -1, 0, -1])     // Returns 2\n    *    math.distance([[1, 2], [1, 2], [1, 3]])         // Returns [0, 1, 1]\n    *    math.distance([[1,2,4], [1,2,6], [8,1,3]])      // Returns [2, 7.14142842854285, 7.681145747868608]\n    *    math.distance([10, 10], [8, 1, 3])              // Returns 11.535230316796387\n    *    math.distance([10, 10], [2, 3], [-8, 0])        // Returns 8.759953130362847\n    *    math.distance(\n    *     {pointX: 1, pointY: 4},\n    *     {lineOnePtX: 6, lineOnePtY: 3},\n    *     {lineTwoPtX: 2, lineTwoPtY: 8})                // Returns 2.720549372624744\n    *    math.distance([2, 3, 1], [1, 1, 2, 5, 0, 1])    // Returns 2.3204774044612857\n    *    math.distance(\n    *     {pointX: 2, pointY: 3, pointZ: 1},\n    *     {x0: 1, y0: 1, z0: 2, a: 5, b: 0, c: 1}        // Returns 2.3204774044612857\n    *\n    * @param {Array | Matrix | Object} x    Co-ordinates of first point\n    * @param {Array | Matrix | Object} y    Co-ordinates of second point\n    * @return {Number | BigNumber} Returns the distance from two/three points\n  */\n  return typed(name, {\n    'Array, Array, Array': function ArrayArrayArray(x, y, z) {\n      // Point to Line 2D (x=Point, y=LinePoint1, z=LinePoint2)\n      if (x.length === 2 && y.length === 2 && z.length === 2) {\n        if (!_2d(x)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_2d(y)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for second argument');\n        }\n\n        if (!_2d(z)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for third argument');\n        }\n\n        var m = divideScalar(subtract(z[1], z[0]), subtract(y[1], y[0]));\n        var xCoeff = multiplyScalar(multiplyScalar(m, m), y[0]);\n        var yCoeff = unaryMinus(multiplyScalar(m, y[0]));\n        var constant = x[1];\n        return _distancePointLine2D(x[0], x[1], xCoeff, yCoeff, constant);\n      } else {\n        throw new TypeError('Invalid Arguments: Try again');\n      }\n    },\n    'Object, Object, Object': function ObjectObjectObject(x, y, z) {\n      if (Object.keys(x).length === 2 && Object.keys(y).length === 2 && Object.keys(z).length === 2) {\n        if (!_2d(x)) {\n          throw new TypeError('Values of pointX and pointY should be numbers or BigNumbers');\n        }\n\n        if (!_2d(y)) {\n          throw new TypeError('Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers');\n        }\n\n        if (!_2d(z)) {\n          throw new TypeError('Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers');\n        }\n\n        if ('pointX' in x && 'pointY' in x && 'lineOnePtX' in y && 'lineOnePtY' in y && 'lineTwoPtX' in z && 'lineTwoPtY' in z) {\n          var m = divideScalar(subtract(z.lineTwoPtY, z.lineTwoPtX), subtract(y.lineOnePtY, y.lineOnePtX));\n          var xCoeff = multiplyScalar(multiplyScalar(m, m), y.lineOnePtX);\n          var yCoeff = unaryMinus(multiplyScalar(m, y.lineOnePtX));\n          var constant = x.pointX;\n          return _distancePointLine2D(x.pointX, x.pointY, xCoeff, yCoeff, constant);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else {\n        throw new TypeError('Invalid Arguments: Try again');\n      }\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // Point to Line 2D (x=[pointX, pointY], y=[x-coeff, y-coeff, const])\n      if (x.length === 2 && y.length === 3) {\n        if (!_2d(x)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_3d(y)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\n        }\n\n        return _distancePointLine2D(x[0], x[1], y[0], y[1], y[2]);\n      } else if (x.length === 3 && y.length === 6) {\n        // Point to Line 3D\n        if (!_3d(x)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_parametricLine(y)) {\n          throw new TypeError('Array with 6 numbers or BigNumbers expected for second argument');\n        }\n\n        return _distancePointLine3D(x[0], x[1], x[2], y[0], y[1], y[2], y[3], y[4], y[5]);\n      } else if (x.length === y.length && x.length > 0) {\n        // Point to Point N-dimensions\n        if (!_containsOnlyNumbers(x)) {\n          throw new TypeError('All values of an array should be numbers or BigNumbers');\n        }\n\n        if (!_containsOnlyNumbers(y)) {\n          throw new TypeError('All values of an array should be numbers or BigNumbers');\n        }\n\n        return _euclideanDistance(x, y);\n      } else {\n        throw new TypeError('Invalid Arguments: Try again');\n      }\n    },\n    'Object, Object': function ObjectObject(x, y) {\n      if (Object.keys(x).length === 2 && Object.keys(y).length === 3) {\n        if (!_2d(x)) {\n          throw new TypeError('Values of pointX and pointY should be numbers or BigNumbers');\n        }\n\n        if (!_3d(y)) {\n          throw new TypeError('Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers');\n        }\n\n        if ('pointX' in x && 'pointY' in x && 'xCoeffLine' in y && 'yCoeffLine' in y && 'constant' in y) {\n          return _distancePointLine2D(x.pointX, x.pointY, y.xCoeffLine, y.yCoeffLine, y.constant);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else if (Object.keys(x).length === 3 && Object.keys(y).length === 6) {\n        // Point to Line 3D\n        if (!_3d(x)) {\n          throw new TypeError('Values of pointX, pointY and pointZ should be numbers or BigNumbers');\n        }\n\n        if (!_parametricLine(y)) {\n          throw new TypeError('Values of x0, y0, z0, a, b and c should be numbers or BigNumbers');\n        }\n\n        if ('pointX' in x && 'pointY' in x && 'x0' in y && 'y0' in y && 'z0' in y && 'a' in y && 'b' in y && 'c' in y) {\n          return _distancePointLine3D(x.pointX, x.pointY, x.pointZ, y.x0, y.y0, y.z0, y.a, y.b, y.c);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else if (Object.keys(x).length === 2 && Object.keys(y).length === 2) {\n        // Point to Point 2D\n        if (!_2d(x)) {\n          throw new TypeError('Values of pointOneX and pointOneY should be numbers or BigNumbers');\n        }\n\n        if (!_2d(y)) {\n          throw new TypeError('Values of pointTwoX and pointTwoY should be numbers or BigNumbers');\n        }\n\n        if ('pointOneX' in x && 'pointOneY' in x && 'pointTwoX' in y && 'pointTwoY' in y) {\n          return _euclideanDistance([x.pointOneX, x.pointOneY], [y.pointTwoX, y.pointTwoY]);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else if (Object.keys(x).length === 3 && Object.keys(y).length === 3) {\n        // Point to Point 3D\n        if (!_3d(x)) {\n          throw new TypeError('Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers');\n        }\n\n        if (!_3d(y)) {\n          throw new TypeError('Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers');\n        }\n\n        if ('pointOneX' in x && 'pointOneY' in x && 'pointOneZ' in x && 'pointTwoX' in y && 'pointTwoY' in y && 'pointTwoZ' in y) {\n          return _euclideanDistance([x.pointOneX, x.pointOneY, x.pointOneZ], [y.pointTwoX, y.pointTwoY, y.pointTwoZ]);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else {\n        throw new TypeError('Invalid Arguments: Try again');\n      }\n    },\n    Array: function Array(arr) {\n      if (!_pairwise(arr)) {\n        throw new TypeError('Incorrect array format entered for pairwise distance calculation');\n      }\n\n      return _distancePairwise(arr);\n    }\n  });\n\n  function _isNumber(a) {\n    // distance supports numbers and bignumbers\n    return typeof a === 'number' || isBigNumber(a);\n  }\n\n  function _2d(a) {\n    // checks if the number of arguments are correct in count and are valid (should be numbers)\n    if (a.constructor !== Array) {\n      a = _objectToArray(a);\n    }\n\n    return _isNumber(a[0]) && _isNumber(a[1]);\n  }\n\n  function _3d(a) {\n    // checks if the number of arguments are correct in count and are valid (should be numbers)\n    if (a.constructor !== Array) {\n      a = _objectToArray(a);\n    }\n\n    return _isNumber(a[0]) && _isNumber(a[1]) && _isNumber(a[2]);\n  }\n\n  function _containsOnlyNumbers(a) {\n    // checks if the number of arguments are correct in count and are valid (should be numbers)\n    if (!Array.isArray(a)) {\n      a = _objectToArray(a);\n    }\n\n    return a.every(_isNumber);\n  }\n\n  function _parametricLine(a) {\n    if (a.constructor !== Array) {\n      a = _objectToArray(a);\n    }\n\n    return _isNumber(a[0]) && _isNumber(a[1]) && _isNumber(a[2]) && _isNumber(a[3]) && _isNumber(a[4]) && _isNumber(a[5]);\n  }\n\n  function _objectToArray(o) {\n    var keys = Object.keys(o);\n    var a = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      a.push(o[keys[i]]);\n    }\n\n    return a;\n  }\n\n  function _pairwise(a) {\n    // checks for valid arguments passed to _distancePairwise(Array)\n    if (a[0].length === 2 && _isNumber(a[0][0]) && _isNumber(a[0][1])) {\n      if (a.some(function (aI) {\n        return aI.length !== 2 || !_isNumber(aI[0]) || !_isNumber(aI[1]);\n      })) {\n        return false;\n      }\n    } else if (a[0].length === 3 && _isNumber(a[0][0]) && _isNumber(a[0][1]) && _isNumber(a[0][2])) {\n      if (a.some(function (aI) {\n        return aI.length !== 3 || !_isNumber(aI[0]) || !_isNumber(aI[1]) || !_isNumber(aI[2]);\n      })) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n\n    return true;\n  }\n\n  function _distancePointLine2D(x, y, a, b, c) {\n    var num = abs(addScalar(addScalar(multiplyScalar(a, x), multiplyScalar(b, y)), c));\n    var den = sqrt(addScalar(multiplyScalar(a, a), multiplyScalar(b, b)));\n    return divideScalar(num, den);\n  }\n\n  function _distancePointLine3D(x, y, z, x0, y0, z0, a, b, c) {\n    var num = [subtract(multiplyScalar(subtract(y0, y), c), multiplyScalar(subtract(z0, z), b)), subtract(multiplyScalar(subtract(z0, z), a), multiplyScalar(subtract(x0, x), c)), subtract(multiplyScalar(subtract(x0, x), b), multiplyScalar(subtract(y0, y), a))];\n    num = sqrt(addScalar(addScalar(multiplyScalar(num[0], num[0]), multiplyScalar(num[1], num[1])), multiplyScalar(num[2], num[2])));\n    var den = sqrt(addScalar(addScalar(multiplyScalar(a, a), multiplyScalar(b, b)), multiplyScalar(c, c)));\n    return divideScalar(num, den);\n  }\n\n  function _euclideanDistance(x, y) {\n    var vectorSize = x.length;\n    var result = 0;\n    var diff = 0;\n\n    for (var i = 0; i < vectorSize; i++) {\n      diff = subtract(x[i], y[i]);\n      result = addScalar(multiplyScalar(diff, diff), result);\n    }\n\n    return sqrt(result);\n  }\n\n  function _distancePairwise(a) {\n    var result = [];\n    var pointA = [];\n    var pointB = [];\n\n    for (var i = 0; i < a.length - 1; i++) {\n      for (var j = i + 1; j < a.length; j++) {\n        if (a[0].length === 2) {\n          pointA = [a[i][0], a[i][1]];\n          pointB = [a[j][0], a[j][1]];\n        } else if (a[0].length === 3) {\n          pointA = [a[i][0], a[i][1], a[i][2]];\n          pointB = [a[j][0], a[j][1], a[j][2]];\n        }\n\n        result.push(_euclideanDistance(pointA, pointB));\n      }\n    }\n\n    return result;\n  }\n});","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { config } from './configReadonly';\nimport { createResultSet, createComplexClass, createRangeClass, createFalse, createNull, createTrue, createBigNumberClass, createMatrixClass, createReplacer, createI, createLN10, createLOG10E, createNaN, createPi, createSQRT1_2 // eslint-disable-line camelcase\n, createTau, createEfimovFactor, createFineStructure, createSackurTetrode, createWeakMixingAngle, createFractionClass, createE, createInfinity, createLOG2E, createVersion, createDenseMatrixClass, createPhi, createTyped, createIsInteger, createIsNumeric, createIsPositive, createIsNaN, createEqualScalar, createNumber, createBoolean, createComplex, createSplitUnit, createUnaryPlus, createApply, createCube, createExpm1, createLog10, createMultiplyScalar, createSign, createSquare, createBitNot, createArg, createIm, createNot, createFilter, createForEach, createMap, createErf, createFormat, createIsPrime, createAcos, createAcot, createAcsc, createAsec, createAsin, createAtan, createAtanh, createCosh, createCoth, createCsch, createSech, createSinh, createTanh, createCombinations, createPickRandom, createRandomInt, createLN2, createClone, createHasNumericValue, createTypeOf, createString, createFraction, createUnaryMinus, createAddScalar, createExp, createLog2, createSqrt, createConj, createGetMatrixDataType, createMode, createPrint, createAcosh, createAcsch, createAsinh, createCos, createCsc, createSin, createCombinationsWithRep, createRandom, createSQRT2, createIsNegative, createSparseMatrixClass, createMatrix, createCbrt, createGcd, createMod, createNthRoot, createXgcd, createBitAnd, createBitXor, createOr, createConcat, createDiag, createIdentity, createOnes, createReshape, createSize, createSubset, createZeros, createTo, createRound, createLeftShift, createRightLogShift, createCompare, createCompareText, createSmaller, createLarger, createUnequal, createImmutableDenseMatrixClass, createFibonacciHeapClass, createSparse, createAcoth, createAtan2, createSec, createAdd, createDot, createComposition, createIsZero, createAbs, createFloor, createMultiply, createDotMultiply, createRe, createFlatten, createResize, createSqueeze, createPow, createDotPow, createRightArithShift, createCompareNatural, createEqualText, createLargerEq, createPartitionSelect, createIndexClass, createAsech, createTan, createSetDifference, createSetIntersect, createSetMultiplicity, createSetSize, createTrace, createQuantileSeq, createGamma, createBignumber, createLcm, createBitOr, createKron, createTranspose, createNumeric, createAnd, createSmallerEq, createSort, createMin, createCot, createSetDistinct, createSetPowerset, createIndex, createSum, createFactorial, createPermutations, createCeil, createSubtract, createCross, createRange, createCtranspose, createDivideScalar, createNthRoots, createLsolve, createEqual, createMax, createSetCartesian, createSetSymDifference, createHypot, createQr, createDistance, createStirlingS2, createCatalan, createFix, createColumn, createRow, createLog, createDotDivide, createDeepEqual, createUnitClass, createCreateUnit, createSetUnion, createSlu, createIntersect, createBellNumbers, createAtomicMass, createBohrMagneton, createBoltzmann, createConductanceQuantum, createDeuteronMass, createElectronMass, createFaraday, createFirstRadiation, createGravitationConstant, createHartreeEnergy, createKlitzing, createMagneticConstant, createMolarMass, createMolarPlanckConstant, createNeutronMass, createPlanckCharge, createPlanckLength, createPlanckTemperature, createProtonMass, createReducedPlanckConstant, createSecondRadiation, createStefanBoltzmann, createVacuumImpedance, createXor, createProd, createUsolve, createUnitFunction, createAvogadro, createClassicalElectronRadius, createElectricConstant, createFermiCoupling, createGravity, createLoschmidt, createMolarMassC12, createNuclearMagneton, createPlanckMass, createQuantumOfCirculation, createSpeedOfLight, createWienDisplacement, createDiff, createSpaClass, createLup, createDet, createBohrRadius, createElementaryCharge, createInverseConductanceQuantum, createMolarVolume, createPlanckTime, createThomsonCrossSection, createLog1p, createLusolve, createInv, createExpm, createDivide, createMedian, createVariance, createKldivergence, createGasConstant, createPlanckConstant, createSetIsSubset, createSqrtm, createMad, createMultinomial, createCoulomb, createRydberg, createMean, createEigs, createMagneticFluxQuantum, createNorm, createStd } from '../factoriesAny';\nexport var ResultSet = /* #__PURE__ */createResultSet({});\nexport var Complex = /* #__PURE__ */createComplexClass({});\nexport var Range = /* #__PURE__ */createRangeClass({});\nexport var _false = /* #__PURE__ */createFalse({});\nexport var _null = /* #__PURE__ */createNull({});\nexport var _true = /* #__PURE__ */createTrue({});\nexport var BigNumber = /* #__PURE__ */createBigNumberClass({\n  config: config\n});\nexport var Matrix = /* #__PURE__ */createMatrixClass({});\nexport var replacer = /* #__PURE__ */createReplacer({});\nexport var i = /* #__PURE__ */createI({\n  Complex: Complex\n});\nexport var LN10 = /* #__PURE__ */createLN10({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var LOG10E = /* #__PURE__ */createLOG10E({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var _NaN = /* #__PURE__ */createNaN({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var pi = /* #__PURE__ */createPi({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var SQRT1_2 = /* #__PURE__ */createSQRT1_2({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var tau = /* #__PURE__ */createTau({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var efimovFactor = /* #__PURE__ */createEfimovFactor({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var fineStructure = /* #__PURE__ */createFineStructure({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var sackurTetrode = /* #__PURE__ */createSackurTetrode({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var weakMixingAngle = /* #__PURE__ */createWeakMixingAngle({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var Fraction = /* #__PURE__ */createFractionClass({});\nexport var e = /* #__PURE__ */createE({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var _Infinity = /* #__PURE__ */createInfinity({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var LOG2E = /* #__PURE__ */createLOG2E({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var version = /* #__PURE__ */createVersion({});\nexport var DenseMatrix = /* #__PURE__ */createDenseMatrixClass({\n  Matrix: Matrix\n});\nexport var phi = /* #__PURE__ */createPhi({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var typed = /* #__PURE__ */createTyped({\n  BigNumber: BigNumber,\n  Complex: Complex,\n  DenseMatrix: DenseMatrix,\n  Fraction: Fraction\n});\nexport var isInteger = /* #__PURE__ */createIsInteger({\n  typed: typed\n});\nexport var isNumeric = /* #__PURE__ */createIsNumeric({\n  typed: typed\n});\nexport var isPositive = /* #__PURE__ */createIsPositive({\n  typed: typed\n});\nexport var isNaN = /* #__PURE__ */createIsNaN({\n  typed: typed\n});\nexport var equalScalar = /* #__PURE__ */createEqualScalar({\n  config: config,\n  typed: typed\n});\nexport var number = /* #__PURE__ */createNumber({\n  typed: typed\n});\n\nvar _boolean = /* #__PURE__ */createBoolean({\n  typed: typed\n});\n\nexport { _boolean as boolean };\nexport var complex = /* #__PURE__ */createComplex({\n  Complex: Complex,\n  typed: typed\n});\nexport var splitUnit = /* #__PURE__ */createSplitUnit({\n  typed: typed\n});\nexport var unaryPlus = /* #__PURE__ */createUnaryPlus({\n  BigNumber: BigNumber,\n  config: config,\n  typed: typed\n});\nexport var apply = /* #__PURE__ */createApply({\n  isInteger: isInteger,\n  typed: typed\n});\nexport var cube = /* #__PURE__ */createCube({\n  typed: typed\n});\nexport var expm1 = /* #__PURE__ */createExpm1({\n  Complex: Complex,\n  typed: typed\n});\nexport var log10 = /* #__PURE__ */createLog10({\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var multiplyScalar = /* #__PURE__ */createMultiplyScalar({\n  typed: typed\n});\nexport var sign = /* #__PURE__ */createSign({\n  BigNumber: BigNumber,\n  Fraction: Fraction,\n  complex: complex,\n  typed: typed\n});\nexport var square = /* #__PURE__ */createSquare({\n  typed: typed\n});\nexport var bitNot = /* #__PURE__ */createBitNot({\n  typed: typed\n});\nexport var arg = /* #__PURE__ */createArg({\n  typed: typed\n});\nexport var im = /* #__PURE__ */createIm({\n  typed: typed\n});\nexport var not = /* #__PURE__ */createNot({\n  typed: typed\n});\nexport var filter = /* #__PURE__ */createFilter({\n  typed: typed\n});\nexport var forEach = /* #__PURE__ */createForEach({\n  typed: typed\n});\nexport var map = /* #__PURE__ */createMap({\n  typed: typed\n});\nexport var erf = /* #__PURE__ */createErf({\n  typed: typed\n});\nexport var format = /* #__PURE__ */createFormat({\n  typed: typed\n});\nexport var isPrime = /* #__PURE__ */createIsPrime({\n  typed: typed\n});\nexport var acos = /* #__PURE__ */createAcos({\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var acot = /* #__PURE__ */createAcot({\n  BigNumber: BigNumber,\n  typed: typed\n});\nexport var acsc = /* #__PURE__ */createAcsc({\n  BigNumber: BigNumber,\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var asec = /* #__PURE__ */createAsec({\n  BigNumber: BigNumber,\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var asin = /* #__PURE__ */createAsin({\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var atan = /* #__PURE__ */createAtan({\n  typed: typed\n});\nexport var atanh = /* #__PURE__ */createAtanh({\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var cosh = /* #__PURE__ */createCosh({\n  typed: typed\n});\nexport var coth = /* #__PURE__ */createCoth({\n  BigNumber: BigNumber,\n  typed: typed\n});\nexport var csch = /* #__PURE__ */createCsch({\n  BigNumber: BigNumber,\n  typed: typed\n});\nexport var sech = /* #__PURE__ */createSech({\n  BigNumber: BigNumber,\n  typed: typed\n});\nexport var sinh = /* #__PURE__ */createSinh({\n  typed: typed\n});\nexport var tanh = /* #__PURE__ */createTanh({\n  typed: typed\n});\nexport var combinations = /* #__PURE__ */createCombinations({\n  typed: typed\n});\nexport var pickRandom = /* #__PURE__ */createPickRandom({\n  config: config,\n  typed: typed\n});\nexport var randomInt = /* #__PURE__ */createRandomInt({\n  config: config,\n  typed: typed\n});\nexport var LN2 = /* #__PURE__ */createLN2({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var clone = /* #__PURE__ */createClone({\n  typed: typed\n});\nexport var hasNumericValue = /* #__PURE__ */createHasNumericValue({\n  isNumeric: isNumeric,\n  typed: typed\n});\nexport var typeOf = /* #__PURE__ */createTypeOf({\n  typed: typed\n});\nexport var string = /* #__PURE__ */createString({\n  typed: typed\n});\nexport var fraction = /* #__PURE__ */createFraction({\n  Fraction: Fraction,\n  typed: typed\n});\nexport var unaryMinus = /* #__PURE__ */createUnaryMinus({\n  typed: typed\n});\nexport var addScalar = /* #__PURE__ */createAddScalar({\n  typed: typed\n});\nexport var exp = /* #__PURE__ */createExp({\n  typed: typed\n});\nexport var log2 = /* #__PURE__ */createLog2({\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var sqrt = /* #__PURE__ */createSqrt({\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var conj = /* #__PURE__ */createConj({\n  typed: typed\n});\nexport var getMatrixDataType = /* #__PURE__ */createGetMatrixDataType({\n  typed: typed\n});\nexport var mode = /* #__PURE__ */createMode({\n  isNaN: isNaN,\n  isNumeric: isNumeric,\n  typed: typed\n});\nexport var print = /* #__PURE__ */createPrint({\n  typed: typed\n});\nexport var acosh = /* #__PURE__ */createAcosh({\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var acsch = /* #__PURE__ */createAcsch({\n  BigNumber: BigNumber,\n  typed: typed\n});\nexport var asinh = /* #__PURE__ */createAsinh({\n  typed: typed\n});\nexport var cos = /* #__PURE__ */createCos({\n  typed: typed\n});\nexport var csc = /* #__PURE__ */createCsc({\n  BigNumber: BigNumber,\n  typed: typed\n});\nexport var sin = /* #__PURE__ */createSin({\n  typed: typed\n});\nexport var combinationsWithRep = /* #__PURE__ */createCombinationsWithRep({\n  typed: typed\n});\nexport var random = /* #__PURE__ */createRandom({\n  config: config,\n  typed: typed\n});\nexport var SQRT2 = /* #__PURE__ */createSQRT2({\n  BigNumber: BigNumber,\n  config: config\n});\nexport var isNegative = /* #__PURE__ */createIsNegative({\n  typed: typed\n});\nexport var SparseMatrix = /* #__PURE__ */createSparseMatrixClass({\n  Matrix: Matrix,\n  equalScalar: equalScalar,\n  typed: typed\n});\nexport var matrix = /* #__PURE__ */createMatrix({\n  DenseMatrix: DenseMatrix,\n  Matrix: Matrix,\n  SparseMatrix: SparseMatrix,\n  typed: typed\n});\nexport var cbrt = /* #__PURE__ */createCbrt({\n  BigNumber: BigNumber,\n  Complex: Complex,\n  Fraction: Fraction,\n  config: config,\n  isNegative: isNegative,\n  matrix: matrix,\n  typed: typed,\n  unaryMinus: unaryMinus\n});\nexport var gcd = /* #__PURE__ */createGcd({\n  BigNumber: BigNumber,\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var mod = /* #__PURE__ */createMod({\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var nthRoot = /* #__PURE__ */createNthRoot({\n  BigNumber: BigNumber,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var xgcd = /* #__PURE__ */createXgcd({\n  BigNumber: BigNumber,\n  config: config,\n  matrix: matrix,\n  typed: typed\n});\nexport var bitAnd = /* #__PURE__ */createBitAnd({\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var bitXor = /* #__PURE__ */createBitXor({\n  DenseMatrix: DenseMatrix,\n  matrix: matrix,\n  typed: typed\n});\nexport var or = /* #__PURE__ */createOr({\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var concat = /* #__PURE__ */createConcat({\n  isInteger: isInteger,\n  matrix: matrix,\n  typed: typed\n});\nexport var diag = /* #__PURE__ */createDiag({\n  DenseMatrix: DenseMatrix,\n  SparseMatrix: SparseMatrix,\n  matrix: matrix,\n  typed: typed\n});\nexport var identity = /* #__PURE__ */createIdentity({\n  BigNumber: BigNumber,\n  DenseMatrix: DenseMatrix,\n  SparseMatrix: SparseMatrix,\n  config: config,\n  matrix: matrix,\n  typed: typed\n});\nexport var ones = /* #__PURE__ */createOnes({\n  BigNumber: BigNumber,\n  config: config,\n  matrix: matrix,\n  typed: typed\n});\nexport var reshape = /* #__PURE__ */createReshape({\n  isInteger: isInteger,\n  matrix: matrix,\n  typed: typed\n});\nexport var size = /* #__PURE__ */createSize({\n  matrix: matrix,\n  config: config,\n  typed: typed\n});\nexport var subset = /* #__PURE__ */createSubset({\n  matrix: matrix,\n  typed: typed\n});\nexport var zeros = /* #__PURE__ */createZeros({\n  BigNumber: BigNumber,\n  config: config,\n  matrix: matrix,\n  typed: typed\n});\nexport var to = /* #__PURE__ */createTo({\n  matrix: matrix,\n  typed: typed\n});\nexport var round = /* #__PURE__ */createRound({\n  BigNumber: BigNumber,\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed,\n  zeros: zeros\n});\nexport var leftShift = /* #__PURE__ */createLeftShift({\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed,\n  zeros: zeros\n});\nexport var rightLogShift = /* #__PURE__ */createRightLogShift({\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed,\n  zeros: zeros\n});\nexport var compare = /* #__PURE__ */createCompare({\n  BigNumber: BigNumber,\n  DenseMatrix: DenseMatrix,\n  Fraction: Fraction,\n  config: config,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var compareText = /* #__PURE__ */createCompareText({\n  matrix: matrix,\n  typed: typed\n});\nexport var smaller = /* #__PURE__ */createSmaller({\n  DenseMatrix: DenseMatrix,\n  config: config,\n  matrix: matrix,\n  typed: typed\n});\nexport var larger = /* #__PURE__ */createLarger({\n  DenseMatrix: DenseMatrix,\n  config: config,\n  matrix: matrix,\n  typed: typed\n});\nexport var unequal = /* #__PURE__ */createUnequal({\n  DenseMatrix: DenseMatrix,\n  config: config,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var ImmutableDenseMatrix = /* #__PURE__ */createImmutableDenseMatrixClass({\n  DenseMatrix: DenseMatrix,\n  smaller: smaller\n});\nexport var FibonacciHeap = /* #__PURE__ */createFibonacciHeapClass({\n  larger: larger,\n  smaller: smaller\n});\nexport var sparse = /* #__PURE__ */createSparse({\n  SparseMatrix: SparseMatrix,\n  typed: typed\n});\nexport var acoth = /* #__PURE__ */createAcoth({\n  BigNumber: BigNumber,\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var atan2 = /* #__PURE__ */createAtan2({\n  BigNumber: BigNumber,\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var sec = /* #__PURE__ */createSec({\n  BigNumber: BigNumber,\n  typed: typed\n});\nexport var add = /* #__PURE__ */createAdd({\n  DenseMatrix: DenseMatrix,\n  SparseMatrix: SparseMatrix,\n  addScalar: addScalar,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var dot = /* #__PURE__ */createDot({\n  addScalar: addScalar,\n  conj: conj,\n  multiplyScalar: multiplyScalar,\n  size: size,\n  typed: typed\n});\nexport var composition = /* #__PURE__ */createComposition({\n  addScalar: addScalar,\n  combinations: combinations,\n  isInteger: isInteger,\n  isNegative: isNegative,\n  isPositive: isPositive,\n  larger: larger,\n  typed: typed\n});\nexport var isZero = /* #__PURE__ */createIsZero({\n  typed: typed\n});\nexport var abs = /* #__PURE__ */createAbs({\n  typed: typed\n});\nexport var floor = /* #__PURE__ */createFloor({\n  config: config,\n  round: round,\n  typed: typed\n});\nexport var multiply = /* #__PURE__ */createMultiply({\n  addScalar: addScalar,\n  dot: dot,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  multiplyScalar: multiplyScalar,\n  typed: typed\n});\nexport var dotMultiply = /* #__PURE__ */createDotMultiply({\n  equalScalar: equalScalar,\n  matrix: matrix,\n  multiplyScalar: multiplyScalar,\n  typed: typed\n});\nexport var re = /* #__PURE__ */createRe({\n  typed: typed\n});\nexport var flatten = /* #__PURE__ */createFlatten({\n  matrix: matrix,\n  typed: typed\n});\nexport var resize = /* #__PURE__ */createResize({\n  config: config,\n  matrix: matrix\n});\nexport var squeeze = /* #__PURE__ */createSqueeze({\n  matrix: matrix,\n  typed: typed\n});\nexport var pow = /* #__PURE__ */createPow({\n  Complex: Complex,\n  config: config,\n  fraction: fraction,\n  identity: identity,\n  matrix: matrix,\n  multiply: multiply,\n  number: number,\n  typed: typed\n});\nexport var dotPow = /* #__PURE__ */createDotPow({\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  pow: pow,\n  typed: typed\n});\nexport var rightArithShift = /* #__PURE__ */createRightArithShift({\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed,\n  zeros: zeros\n});\nexport var compareNatural = /* #__PURE__ */createCompareNatural({\n  compare: compare,\n  typed: typed\n});\nexport var equalText = /* #__PURE__ */createEqualText({\n  compareText: compareText,\n  isZero: isZero,\n  typed: typed\n});\nexport var largerEq = /* #__PURE__ */createLargerEq({\n  DenseMatrix: DenseMatrix,\n  config: config,\n  matrix: matrix,\n  typed: typed\n});\nexport var partitionSelect = /* #__PURE__ */createPartitionSelect({\n  compare: compare,\n  isNaN: isNaN,\n  isNumeric: isNumeric,\n  typed: typed\n});\nexport var Index = /* #__PURE__ */createIndexClass({\n  ImmutableDenseMatrix: ImmutableDenseMatrix\n});\nexport var asech = /* #__PURE__ */createAsech({\n  BigNumber: BigNumber,\n  Complex: Complex,\n  config: config,\n  typed: typed\n});\nexport var tan = /* #__PURE__ */createTan({\n  typed: typed\n});\nexport var setDifference = /* #__PURE__ */createSetDifference({\n  DenseMatrix: DenseMatrix,\n  Index: Index,\n  compareNatural: compareNatural,\n  size: size,\n  subset: subset,\n  typed: typed\n});\nexport var setIntersect = /* #__PURE__ */createSetIntersect({\n  DenseMatrix: DenseMatrix,\n  Index: Index,\n  compareNatural: compareNatural,\n  size: size,\n  subset: subset,\n  typed: typed\n});\nexport var setMultiplicity = /* #__PURE__ */createSetMultiplicity({\n  Index: Index,\n  compareNatural: compareNatural,\n  size: size,\n  subset: subset,\n  typed: typed\n});\nexport var setSize = /* #__PURE__ */createSetSize({\n  compareNatural: compareNatural,\n  typed: typed\n});\nexport var trace = /* #__PURE__ */createTrace({\n  add: add,\n  matrix: matrix,\n  typed: typed\n});\nexport var quantileSeq = /* #__PURE__ */createQuantileSeq({\n  add: add,\n  compare: compare,\n  multiply: multiply,\n  partitionSelect: partitionSelect,\n  typed: typed\n});\nexport var gamma = /* #__PURE__ */createGamma({\n  BigNumber: BigNumber,\n  Complex: Complex,\n  config: config,\n  multiplyScalar: multiplyScalar,\n  pow: pow,\n  typed: typed\n});\nexport var bignumber = /* #__PURE__ */createBignumber({\n  BigNumber: BigNumber,\n  typed: typed\n});\nexport var lcm = /* #__PURE__ */createLcm({\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var bitOr = /* #__PURE__ */createBitOr({\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var kron = /* #__PURE__ */createKron({\n  matrix: matrix,\n  multiplyScalar: multiplyScalar,\n  typed: typed\n});\nexport var transpose = /* #__PURE__ */createTranspose({\n  matrix: matrix,\n  typed: typed\n});\nexport var numeric = /* #__PURE__ */createNumeric({\n  bignumber: bignumber,\n  fraction: fraction,\n  number: number\n});\nexport var and = /* #__PURE__ */createAnd({\n  equalScalar: equalScalar,\n  matrix: matrix,\n  not: not,\n  typed: typed,\n  zeros: zeros\n});\nexport var smallerEq = /* #__PURE__ */createSmallerEq({\n  DenseMatrix: DenseMatrix,\n  config: config,\n  matrix: matrix,\n  typed: typed\n});\nexport var sort = /* #__PURE__ */createSort({\n  compare: compare,\n  compareNatural: compareNatural,\n  matrix: matrix,\n  typed: typed\n});\nexport var min = /* #__PURE__ */createMin({\n  config: config,\n  numeric: numeric,\n  smaller: smaller,\n  typed: typed\n});\nexport var cot = /* #__PURE__ */createCot({\n  BigNumber: BigNumber,\n  typed: typed\n});\nexport var setDistinct = /* #__PURE__ */createSetDistinct({\n  DenseMatrix: DenseMatrix,\n  Index: Index,\n  compareNatural: compareNatural,\n  size: size,\n  subset: subset,\n  typed: typed\n});\nexport var setPowerset = /* #__PURE__ */createSetPowerset({\n  Index: Index,\n  compareNatural: compareNatural,\n  size: size,\n  subset: subset,\n  typed: typed\n});\nexport var index = /* #__PURE__ */createIndex({\n  Index: Index,\n  typed: typed\n});\nexport var sum = /* #__PURE__ */createSum({\n  add: add,\n  config: config,\n  numeric: numeric,\n  typed: typed\n});\nexport var factorial = /* #__PURE__ */createFactorial({\n  gamma: gamma,\n  typed: typed\n});\nexport var permutations = /* #__PURE__ */createPermutations({\n  factorial: factorial,\n  typed: typed\n});\nexport var ceil = /* #__PURE__ */createCeil({\n  config: config,\n  round: round,\n  typed: typed\n});\nexport var subtract = /* #__PURE__ */createSubtract({\n  DenseMatrix: DenseMatrix,\n  addScalar: addScalar,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed,\n  unaryMinus: unaryMinus\n});\nexport var cross = /* #__PURE__ */createCross({\n  matrix: matrix,\n  multiply: multiply,\n  subtract: subtract,\n  typed: typed\n});\nexport var range = /* #__PURE__ */createRange({\n  bignumber: bignumber,\n  matrix: matrix,\n  config: config,\n  larger: larger,\n  largerEq: largerEq,\n  smaller: smaller,\n  smallerEq: smallerEq,\n  typed: typed\n});\nexport var ctranspose = /* #__PURE__ */createCtranspose({\n  conj: conj,\n  transpose: transpose,\n  typed: typed\n});\nexport var divideScalar = /* #__PURE__ */createDivideScalar({\n  numeric: numeric,\n  typed: typed\n});\nexport var nthRoots = /* #__PURE__ */createNthRoots({\n  Complex: Complex,\n  config: config,\n  divideScalar: divideScalar,\n  typed: typed\n});\nexport var lsolve = /* #__PURE__ */createLsolve({\n  DenseMatrix: DenseMatrix,\n  divideScalar: divideScalar,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  multiplyScalar: multiplyScalar,\n  subtract: subtract,\n  typed: typed\n});\nexport var equal = /* #__PURE__ */createEqual({\n  DenseMatrix: DenseMatrix,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var max = /* #__PURE__ */createMax({\n  config: config,\n  larger: larger,\n  numeric: numeric,\n  typed: typed\n});\nexport var setCartesian = /* #__PURE__ */createSetCartesian({\n  DenseMatrix: DenseMatrix,\n  Index: Index,\n  compareNatural: compareNatural,\n  size: size,\n  subset: subset,\n  typed: typed\n});\nexport var setSymDifference = /* #__PURE__ */createSetSymDifference({\n  Index: Index,\n  concat: concat,\n  setDifference: setDifference,\n  size: size,\n  subset: subset,\n  typed: typed\n});\nexport var hypot = /* #__PURE__ */createHypot({\n  abs: abs,\n  addScalar: addScalar,\n  divideScalar: divideScalar,\n  isPositive: isPositive,\n  multiplyScalar: multiplyScalar,\n  smaller: smaller,\n  sqrt: sqrt,\n  typed: typed\n});\nexport var qr = /* #__PURE__ */createQr({\n  addScalar: addScalar,\n  complex: complex,\n  conj: conj,\n  divideScalar: divideScalar,\n  equal: equal,\n  identity: identity,\n  isZero: isZero,\n  matrix: matrix,\n  multiplyScalar: multiplyScalar,\n  sign: sign,\n  sqrt: sqrt,\n  subtract: subtract,\n  typed: typed,\n  unaryMinus: unaryMinus,\n  zeros: zeros\n});\nexport var distance = /* #__PURE__ */createDistance({\n  abs: abs,\n  addScalar: addScalar,\n  divideScalar: divideScalar,\n  multiplyScalar: multiplyScalar,\n  sqrt: sqrt,\n  subtract: subtract,\n  typed: typed,\n  unaryMinus: unaryMinus\n});\nexport var stirlingS2 = /* #__PURE__ */createStirlingS2({\n  addScalar: addScalar,\n  combinations: combinations,\n  divideScalar: divideScalar,\n  factorial: factorial,\n  isInteger: isInteger,\n  isNegative: isNegative,\n  larger: larger,\n  multiplyScalar: multiplyScalar,\n  pow: pow,\n  subtract: subtract,\n  typed: typed\n});\nexport var catalan = /* #__PURE__ */createCatalan({\n  addScalar: addScalar,\n  combinations: combinations,\n  divideScalar: divideScalar,\n  isInteger: isInteger,\n  isNegative: isNegative,\n  multiplyScalar: multiplyScalar,\n  typed: typed\n});\nexport var fix = /* #__PURE__ */createFix({\n  Complex: Complex,\n  ceil: ceil,\n  floor: floor,\n  typed: typed\n});\nexport var column = /* #__PURE__ */createColumn({\n  Index: Index,\n  matrix: matrix,\n  range: range,\n  typed: typed\n});\nexport var row = /* #__PURE__ */createRow({\n  Index: Index,\n  matrix: matrix,\n  range: range,\n  typed: typed\n});\nexport var log = /* #__PURE__ */createLog({\n  Complex: Complex,\n  config: config,\n  divideScalar: divideScalar,\n  typed: typed\n});\nexport var dotDivide = /* #__PURE__ */createDotDivide({\n  DenseMatrix: DenseMatrix,\n  divideScalar: divideScalar,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  typed: typed\n});\nexport var deepEqual = /* #__PURE__ */createDeepEqual({\n  equal: equal,\n  typed: typed\n});\nexport var Unit = /* #__PURE__ */createUnitClass({\n  BigNumber: BigNumber,\n  Complex: Complex,\n  Fraction: Fraction,\n  abs: abs,\n  addScalar: addScalar,\n  config: config,\n  divideScalar: divideScalar,\n  equal: equal,\n  fix: fix,\n  format: format,\n  isNumeric: isNumeric,\n  multiplyScalar: multiplyScalar,\n  number: number,\n  pow: pow,\n  round: round,\n  subtract: subtract\n});\nexport var createUnit = /* #__PURE__ */createCreateUnit({\n  Unit: Unit,\n  typed: typed\n});\nexport var setUnion = /* #__PURE__ */createSetUnion({\n  Index: Index,\n  concat: concat,\n  setIntersect: setIntersect,\n  setSymDifference: setSymDifference,\n  size: size,\n  subset: subset,\n  typed: typed\n});\nexport var slu = /* #__PURE__ */createSlu({\n  SparseMatrix: SparseMatrix,\n  abs: abs,\n  add: add,\n  divideScalar: divideScalar,\n  larger: larger,\n  largerEq: largerEq,\n  multiply: multiply,\n  subtract: subtract,\n  transpose: transpose,\n  typed: typed\n});\nexport var intersect = /* #__PURE__ */createIntersect({\n  abs: abs,\n  add: add,\n  addScalar: addScalar,\n  config: config,\n  divideScalar: divideScalar,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  multiply: multiply,\n  multiplyScalar: multiplyScalar,\n  smaller: smaller,\n  subtract: subtract,\n  typed: typed\n});\nexport var bellNumbers = /* #__PURE__ */createBellNumbers({\n  addScalar: addScalar,\n  isInteger: isInteger,\n  isNegative: isNegative,\n  stirlingS2: stirlingS2,\n  typed: typed\n});\nexport var atomicMass = /* #__PURE__ */createAtomicMass({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var bohrMagneton = /* #__PURE__ */createBohrMagneton({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var boltzmann = /* #__PURE__ */createBoltzmann({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var conductanceQuantum = /* #__PURE__ */createConductanceQuantum({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var deuteronMass = /* #__PURE__ */createDeuteronMass({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var electronMass = /* #__PURE__ */createElectronMass({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var faraday = /* #__PURE__ */createFaraday({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var firstRadiation = /* #__PURE__ */createFirstRadiation({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var gravitationConstant = /* #__PURE__ */createGravitationConstant({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var hartreeEnergy = /* #__PURE__ */createHartreeEnergy({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var klitzing = /* #__PURE__ */createKlitzing({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var magneticConstant = /* #__PURE__ */createMagneticConstant({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var molarMass = /* #__PURE__ */createMolarMass({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var molarPlanckConstant = /* #__PURE__ */createMolarPlanckConstant({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var neutronMass = /* #__PURE__ */createNeutronMass({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var planckCharge = /* #__PURE__ */createPlanckCharge({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var planckLength = /* #__PURE__ */createPlanckLength({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var planckTemperature = /* #__PURE__ */createPlanckTemperature({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var protonMass = /* #__PURE__ */createProtonMass({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var reducedPlanckConstant = /* #__PURE__ */createReducedPlanckConstant({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var secondRadiation = /* #__PURE__ */createSecondRadiation({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var stefanBoltzmann = /* #__PURE__ */createStefanBoltzmann({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var vacuumImpedance = /* #__PURE__ */createVacuumImpedance({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var xor = /* #__PURE__ */createXor({\n  DenseMatrix: DenseMatrix,\n  matrix: matrix,\n  typed: typed\n});\nexport var prod = /* #__PURE__ */createProd({\n  config: config,\n  multiplyScalar: multiplyScalar,\n  numeric: numeric,\n  typed: typed\n});\nexport var usolve = /* #__PURE__ */createUsolve({\n  DenseMatrix: DenseMatrix,\n  divideScalar: divideScalar,\n  equalScalar: equalScalar,\n  matrix: matrix,\n  multiplyScalar: multiplyScalar,\n  subtract: subtract,\n  typed: typed\n});\nexport var unit = /* #__PURE__ */createUnitFunction({\n  Unit: Unit,\n  typed: typed\n});\nexport var avogadro = /* #__PURE__ */createAvogadro({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var classicalElectronRadius = /* #__PURE__ */createClassicalElectronRadius({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var electricConstant = /* #__PURE__ */createElectricConstant({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var fermiCoupling = /* #__PURE__ */createFermiCoupling({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var gravity = /* #__PURE__ */createGravity({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var loschmidt = /* #__PURE__ */createLoschmidt({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var molarMassC12 = /* #__PURE__ */createMolarMassC12({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var nuclearMagneton = /* #__PURE__ */createNuclearMagneton({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var planckMass = /* #__PURE__ */createPlanckMass({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var quantumOfCirculation = /* #__PURE__ */createQuantumOfCirculation({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var speedOfLight = /* #__PURE__ */createSpeedOfLight({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var wienDisplacement = /* #__PURE__ */createWienDisplacement({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var diff = /* #__PURE__ */createDiff({\n  matrix: matrix,\n  number: number,\n  subtract: subtract,\n  typed: typed\n});\nexport var Spa = /* #__PURE__ */createSpaClass({\n  FibonacciHeap: FibonacciHeap,\n  addScalar: addScalar,\n  equalScalar: equalScalar\n});\nexport var lup = /* #__PURE__ */createLup({\n  DenseMatrix: DenseMatrix,\n  Spa: Spa,\n  SparseMatrix: SparseMatrix,\n  abs: abs,\n  addScalar: addScalar,\n  divideScalar: divideScalar,\n  equalScalar: equalScalar,\n  larger: larger,\n  matrix: matrix,\n  multiplyScalar: multiplyScalar,\n  subtract: subtract,\n  typed: typed,\n  unaryMinus: unaryMinus\n});\nexport var det = /* #__PURE__ */createDet({\n  lup: lup,\n  matrix: matrix,\n  multiply: multiply,\n  subtract: subtract,\n  typed: typed,\n  unaryMinus: unaryMinus\n});\nexport var bohrRadius = /* #__PURE__ */createBohrRadius({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var elementaryCharge = /* #__PURE__ */createElementaryCharge({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var inverseConductanceQuantum = /* #__PURE__ */createInverseConductanceQuantum({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var molarVolume = /* #__PURE__ */createMolarVolume({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var planckTime = /* #__PURE__ */createPlanckTime({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var thomsonCrossSection = /* #__PURE__ */createThomsonCrossSection({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var log1p = /* #__PURE__ */createLog1p({\n  Complex: Complex,\n  config: config,\n  divideScalar: divideScalar,\n  log: log,\n  typed: typed\n});\nexport var lusolve = /* #__PURE__ */createLusolve({\n  DenseMatrix: DenseMatrix,\n  lsolve: lsolve,\n  lup: lup,\n  matrix: matrix,\n  slu: slu,\n  typed: typed,\n  usolve: usolve\n});\nexport var inv = /* #__PURE__ */createInv({\n  abs: abs,\n  addScalar: addScalar,\n  det: det,\n  divideScalar: divideScalar,\n  identity: identity,\n  matrix: matrix,\n  multiply: multiply,\n  typed: typed,\n  unaryMinus: unaryMinus\n});\nexport var expm = /* #__PURE__ */createExpm({\n  abs: abs,\n  add: add,\n  identity: identity,\n  inv: inv,\n  multiply: multiply,\n  typed: typed\n});\nexport var divide = /* #__PURE__ */createDivide({\n  divideScalar: divideScalar,\n  equalScalar: equalScalar,\n  inv: inv,\n  matrix: matrix,\n  multiply: multiply,\n  typed: typed\n});\nexport var median = /* #__PURE__ */createMedian({\n  add: add,\n  compare: compare,\n  divide: divide,\n  partitionSelect: partitionSelect,\n  typed: typed\n});\nexport var variance = /* #__PURE__ */createVariance({\n  add: add,\n  apply: apply,\n  divide: divide,\n  isNaN: isNaN,\n  multiply: multiply,\n  subtract: subtract,\n  typed: typed\n});\nexport var kldivergence = /* #__PURE__ */createKldivergence({\n  divide: divide,\n  dotDivide: dotDivide,\n  isNumeric: isNumeric,\n  log: log,\n  matrix: matrix,\n  multiply: multiply,\n  sum: sum,\n  typed: typed\n});\nexport var gasConstant = /* #__PURE__ */createGasConstant({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var planckConstant = /* #__PURE__ */createPlanckConstant({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var setIsSubset = /* #__PURE__ */createSetIsSubset({\n  Index: Index,\n  compareNatural: compareNatural,\n  size: size,\n  subset: subset,\n  typed: typed\n});\nexport var sqrtm = /* #__PURE__ */createSqrtm({\n  abs: abs,\n  add: add,\n  identity: identity,\n  inv: inv,\n  max: max,\n  multiply: multiply,\n  size: size,\n  sqrt: sqrt,\n  subtract: subtract,\n  typed: typed\n});\nexport var mad = /* #__PURE__ */createMad({\n  abs: abs,\n  map: map,\n  median: median,\n  subtract: subtract,\n  typed: typed\n});\nexport var multinomial = /* #__PURE__ */createMultinomial({\n  add: add,\n  divide: divide,\n  factorial: factorial,\n  isInteger: isInteger,\n  isPositive: isPositive,\n  multiply: multiply,\n  typed: typed\n});\nexport var coulomb = /* #__PURE__ */createCoulomb({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var rydberg = /* #__PURE__ */createRydberg({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var mean = /* #__PURE__ */createMean({\n  add: add,\n  divide: divide,\n  typed: typed\n});\nexport var eigs = /* #__PURE__ */createEigs({\n  abs: abs,\n  add: add,\n  addScalar: addScalar,\n  atan: atan,\n  bignumber: bignumber,\n  config: config,\n  cos: cos,\n  equal: equal,\n  inv: inv,\n  matrix: matrix,\n  multiply: multiply,\n  multiplyScalar: multiplyScalar,\n  sin: sin,\n  subtract: subtract,\n  typed: typed\n});\nexport var magneticFluxQuantum = /* #__PURE__ */createMagneticFluxQuantum({\n  BigNumber: BigNumber,\n  Unit: Unit,\n  config: config\n});\nexport var norm = /* #__PURE__ */createNorm({\n  abs: abs,\n  add: add,\n  conj: conj,\n  ctranspose: ctranspose,\n  eigs: eigs,\n  equalScalar: equalScalar,\n  larger: larger,\n  matrix: matrix,\n  multiply: multiply,\n  pow: pow,\n  smaller: smaller,\n  sqrt: sqrt,\n  typed: typed\n});\nexport var std = /* #__PURE__ */createStd({\n  sqrt: sqrt,\n  typed: typed,\n  variance: variance\n});","export const atomicMasses = {\n  X: 1.0,\n  H: 1.008,\n  He: 4.002602,\n  Li: 6.94,\n  Be: 9.0121831,\n  B: 10.81,\n  C: 12.011,\n  N: 14.007,\n  O: 15.999,\n  F: 18.998403163,\n  Ne: 20.1797,\n  Na: 22.98976928,\n  Mg: 24.305,\n  Al: 26.9815385,\n  Si: 28.085,\n  P: 30.973761998,\n  S: 32.06,\n  Cl: 35.45,\n  Ar: 39.948,\n  K: 39.0983,\n  Ca: 40.078,\n  Sc: 44.955908,\n  Ti: 47.867,\n  V: 50.9415,\n  Cr: 51.9961,\n  Mn: 54.938044,\n  Fe: 55.845,\n  Co: 58.933194,\n  Ni: 58.6934,\n  Cu: 63.546,\n  Zn: 65.38,\n  Ga: 69.723,\n  Ge: 72.63,\n  As: 74.921595,\n  Se: 78.971,\n  Br: 79.904,\n  Kr: 83.798,\n  Rb: 85.4678,\n  Sr: 87.62,\n  Y: 88.90584,\n  Zr: 91.224,\n  Nb: 92.90637,\n  Mo: 95.95,\n  Tc: 97.90721,\n  Ru: 101.07,\n  Rh: 102.9055,\n  Pd: 106.42,\n  Ag: 107.8682,\n  Cd: 112.414,\n  In: 114.818,\n  Sn: 118.71,\n  Sb: 121.76,\n  Te: 127.6,\n  I: 126.90447,\n  Xe: 131.293,\n  Cs: 132.90545196,\n  Ba: 137.327,\n  La: 138.90547,\n  Ce: 140.116,\n  Pr: 140.90766,\n  Nd: 144.242,\n  Pm: 144.91276,\n  Sm: 150.36,\n  Eu: 151.964,\n  Gd: 157.25,\n  Tb: 158.92535,\n  Dy: 162.5,\n  Ho: 164.93033,\n  Er: 167.259,\n  Tm: 168.93422,\n  Yb: 173.054,\n  Lu: 174.9668,\n  Hf: 178.49,\n  Ta: 180.94788,\n  W: 183.84,\n  Re: 186.207,\n  Os: 190.23,\n  Ir: 192.217,\n  Pt: 195.084,\n  Au: 196.966569,\n  Hg: 200.592,\n  Tl: 204.38,\n  Pb: 207.2,\n  Bi: 208.9804,\n  Po: 208.98243,\n  At: 209.98715,\n  Rn: 222.01758,\n  Fr: 223.01974,\n  Ra: 226.02541,\n  Ac: 227.02775,\n  Th: 232.0377,\n  Pa: 231.03588,\n  U: 238.02891,\n  Np: 237.04817,\n  Pu: 244.06421,\n  Am: 243.06138,\n  Cm: 247.07035,\n  Bk: 247.07031,\n  Cf: 251.07959,\n  Es: 252.083,\n  Fm: 257.09511,\n  Md: 258.09843,\n  No: 259.101,\n  Lr: 262.11,\n  Rf: 267.122,\n  Db: 268.126,\n  Sg: 271.134,\n  Bh: 270.133,\n  Hs: 269.1338,\n  Mt: 278.156,\n  Ds: 281.165,\n  Rg: 281.166,\n  Cn: 285.177,\n  Nh: 286.182,\n  Fl: 289.19,\n  Mc: 289.194,\n  Lv: 293.204,\n  Ts: 293.208,\n  Og: 294.214,\n};\n","export const uffRadii = {\n  H: 1.286,\n  He: 1.052,\n  Li: 1.092,\n  Be: 1.223,\n  B: 1.819,\n  C: 1.715,\n  N: 1.63,\n  O: 1.559,\n  F: 1.498,\n  Ne: 1.445,\n  Na: 1.329,\n  Mg: 1.346,\n  Al: 2.004,\n  Si: 1.913,\n  P: 1.847,\n  S: 1.797,\n  Cl: 1.758,\n  Ar: 1.723,\n  K: 1.698,\n  Ca: 1.514,\n  Sc: 1.468,\n  Ti: 1.414,\n  V: 1.4,\n  Cr: 1.347,\n  Mn: 1.319,\n  Fe: 1.297,\n  Co: 1.279,\n  Ni: 1.262,\n  Cu: 1.557,\n  Zn: 1.231,\n  Ga: 1.952,\n  Ge: 1.907,\n  As: 1.884,\n  Se: 1.873,\n  Br: 1.866,\n  Kr: 1.845,\n  Rb: 1.833,\n  Sr: 1.622,\n  Y: 1.49,\n  Zr: 1.392,\n  Nb: 1.41,\n  Mo: 1.36,\n  Tc: 1.335,\n  Ru: 1.32,\n  Rh: 1.305,\n  Pd: 1.291,\n  Ag: 1.402,\n  Cd: 1.269,\n  In: 1.988,\n  Sn: 1.956,\n  Sb: 1.969,\n  Te: 1.991,\n  I: 2.005,\n  Xe: 1.962,\n  Cs: 2.012,\n  Ba: 1.649,\n  La: 1.569,\n  Ce: 1.584,\n  Pr: 1.606,\n  Nd: 1.592,\n  Pm: 1.58,\n  Sm: 1.568,\n  Eu: 1.556,\n  Gd: 1.5,\n  Tb: 1.537,\n  Dy: 1.527,\n  Ho: 1.519,\n  Er: 1.511,\n  Tm: 1.503,\n  Yb: 1.494,\n  Lu: 1.621,\n  Hf: 1.399,\n  Ta: 1.412,\n  W: 1.367,\n  Re: 1.316,\n  Os: 1.39,\n  Ir: 1.265,\n  Pt: 1.227,\n  Au: 1.467,\n  Hg: 1.205,\n  Tl: 1.936,\n  Pb: 1.914,\n  Bi: 1.947,\n  Po: 2.098,\n  At: 2.116,\n  Rn: 2.123,\n  Fr: 2.183,\n  Ra: 1.638,\n  Ac: 1.549,\n  Th: 1.513,\n  Pa: 1.525,\n  U: 1.512,\n  Np: 1.525,\n  Pu: 1.525,\n  Am: 1.506,\n  Cm: 1.482,\n  Bk: 1.487,\n  Cf: 1.476,\n  Es: 1.47,\n  Fm: 1.464,\n  Md: 1.458,\n  No: 1.447,\n  Lr: 1.441,\n};\n","export const covalentRadii = {\n  H: 0.31,\n  He: 0.28,\n  Li: 1.28,\n  Be: 0.96,\n  B: 0.84,\n  C: 0.76,\n  N: 0.71,\n  O: 0.66,\n  F: 0.57,\n  Ne: 0.58,\n  Na: 1.66,\n  Mg: 1.41,\n  Al: 1.21,\n  Si: 1.11,\n  P: 1.07,\n  S: 1.05,\n  Cl: 1.02,\n  Ar: 1.06,\n  K: 2.03,\n  Ca: 1.76,\n  Sc: 1.7,\n  Ti: 1.6,\n  V: 1.53,\n  Cr: 1.39,\n  Mn: 1.39,\n  Fe: 1.32,\n  Co: 1.26,\n  Ni: 1.24,\n  Cu: 1.32,\n  Zn: 1.22,\n  Ga: 1.22,\n  Ge: 1.2,\n  As: 1.19,\n  Se: 1.2,\n  Br: 1.2,\n  Kr: 1.16,\n  Rb: 2.2,\n  Sr: 1.95,\n  Y: 1.9,\n  Zr: 1.75,\n  Nb: 1.64,\n  Mo: 1.54,\n  Tc: 1.47,\n  Ru: 1.46,\n  Rh: 1.42,\n  Pd: 1.39,\n  Ag: 1.45,\n  Cd: 1.44,\n  In: 1.42,\n  Sn: 1.39,\n  Sb: 1.39,\n  Te: 1.38,\n  I: 1.39,\n  Xe: 1.4,\n  Cs: 2.44,\n  Ba: 2.15,\n  La: 2.07,\n  Ce: 2.04,\n  Pr: 2.03,\n  Nd: 2.01,\n  Pm: 1.99,\n  Sm: 1.98,\n  Eu: 1.98,\n  Gd: 1.96,\n  Tb: 1.94,\n  Dy: 1.92,\n  Ho: 1.92,\n  Er: 1.89,\n  Tm: 1.9,\n  Yb: 1.87,\n  Lu: 1.87,\n  Hf: 1.75,\n  Ta: 1.7,\n  W: 1.62,\n  Re: 1.51,\n  Os: 1.44,\n  Ir: 1.41,\n  Pt: 1.36,\n  Au: 1.36,\n  Hg: 1.32,\n  Tl: 1.45,\n  Pb: 1.46,\n  Bi: 1.48,\n  Po: 1.4,\n  At: 1.5,\n  Rn: 1.5,\n  Fr: 2.6,\n  Ra: 2.21,\n  Ac: 2.15,\n  Th: 2.06,\n  Pa: 2.0,\n  U: 1.96,\n  Np: 1.9,\n  Pu: 1.87,\n  Am: 1.8,\n  Cm: 1.69,\n};\n","import { distance } from 'mathjs';\n\nimport { covalentRadii } from './data/covalentRadii';\n\nfunction handleOverlap(r1, r2) {\n  let r = Math.min(r1, r2);\n  return (4 / 3) * Math.PI * r ** 3;\n}\nexport function overlap(r1, r2, d) {\n  if (d > 0.0001) {\n    return (\n      (Math.PI *\n        (d ** 4 -\n          6 * d ** 2 * (r1 ** 2 + r2 ** 2) +\n          8 * d * (r1 ** 3 + r2 ** 3) -\n          3 * (r1 ** 2 - r2 ** 2) ** 2)) /\n      (12 * d)\n    );\n  } else {\n    return handleOverlap(r1, r2);\n  }\n}\n\nexport function pbcDistance(pointA, pointB, cellvectors) {\n  let measuredDistance = distance(pointA, pointB);\n  for (let i = 0; i++; i < 3) {\n    for (let j = 0; j++; j < 3) {\n      for (let k = 0; k++; k < 3) {\n        let newDistance =\n          pointA -\n          pointB +\n          (i - 2) * cellvectors[0] +\n          (j - 2) * cellvectors[1] +\n          (k - 2) * cellvectors[2];\n        if (newDistance < measuredDistance) {\n          measuredDistance = newDistance;\n        }\n      }\n    }\n  }\n  return measuredDistance;\n}\n\nfunction doOverlap(r1, r2, d, threshold = 0.001) {\n  return d + threshold < r1 + r2;\n}\n\nexport function areBound(atomA, atomB, d) {\n  return doOverlap(covalentRadii[atomA], covalentRadii[atomB], d);\n}\n","import { uffRadii } from '../data/uffRadii';\nimport { pbcDistance, areBound, overlap } from '../utils';\n\nexport function computeOverlapVolume(coordinates, atoms, cellvectors) {\n  let overlapVolume = 0;\n  let d = 0;\n  for (let i = 0; i < coordinates.length - 1; i++) {\n    for (let j = i + 1; j < coordinates.length; j++) {\n      d = pbcDistance(coordinates[i], coordinates[j], cellvectors);\n      if (areBound(atoms[i], atoms[j], d)) {\n        overlapVolume += overlap(uffRadii[atoms[i]], uffRadii[atoms[j]], d);\n      }\n    }\n  }\n  return overlapVolume;\n}\n","import { readFileSync } from 'fs';\n\nimport { Atoms } from 'crystcif-parse';\nimport { dot, cross } from 'mathjs';\n\nimport { atomicMasses } from './data/atomicMasses';\nimport { uffRadii } from './data/uffRadii';\nimport { computeOverlapVolume } from './osa/osa';\n\nconst radiiDict = uffRadii;\nconst massDict = atomicMasses;\n\nexport class PoreMat {\n  constructor(cifFile) {\n    const cifText = readFileSync(cifFile, 'utf8').toString();\n    const cif = Atoms.readCif(cifText);\n    const atoms = cif[Object.keys(cif)[0]];\n    this.cell = atoms.get_cell();\n\n    this.volume = dot(cross(this.cell[0], this.cell[1]), this.cell[2]);\n\n    this.symbols = atoms.get_chemical_symbols();\n\n    let elementCounts = {};\n    this.symbols.forEach(\n      (number) => (elementCounts[number] = (elementCounts[number] || 0) + 1),\n    );\n    this.elementCounts = elementCounts;\n    this.positions = atoms.get_positions();\n\n    this.radii = {};\n    this.symbolSet = new Set(this.symbols);\n\n    this.symbolSet.forEach((symbol) => {\n      this.radii[symbol] = radiiDict[symbol];\n    });\n\n    let mass = 0;\n    for (let [symbol, count] of Object.entries(elementCounts)) {\n      mass += massDict[symbol] * count;\n    }\n    this.mass = mass; // g/mol\n    mass = mass * 1.66053907 * 10 ** -24; // g\n    this.density = mass / this.volume;\n  }\n}\n\nObject.defineProperty(PoreMat.prototype, 'atomsVolume', {\n  get: function () {\n    let occupiedVolume = 0;\n    for (let [symbol, count] of Object.entries(this.elementCounts)) {\n      occupiedVolume += (4 / 3) * Math.PI * this.radii[symbol] ** 3 * count;\n    }\n    return occupiedVolume; // A^3\n  },\n});\n\nObject.defineProperty(PoreMat.prototype, 'overlapVolume', {\n  // This is the atomsVolume - overlapVolume\n  get: function () {\n    return computeOverlapVolume(this.positions, this.symbols, this.cell); // A^3\n  },\n});\n\nObject.defineProperty(PoreMat.prototype, 'occupiedVolume', {\n  // This is the atomsVolume - overlapVolume\n  get: function () {\n    return this.atomsVolume - this.overlapVolume; // A^3\n  },\n});\n\nObject.defineProperty(PoreMat.prototype, 'voidVolume', {\n  get: function () {\n    return this.volume - this.occupiedVolume; // A^3\n  },\n});\n\nObject.defineProperty(PoreMat.prototype, 'porosity', {\n  get: function () {\n    return this.voidVolume / this.volume; // unitless\n  },\n});\n"],"names":["sp","ht","ordinary_char","module","nonblank_char","textlead_char","anyprint_char","comments","tok_comments","whitespace","semicolontext","squotestring","dquotestring","uquotestring","chrstring","unsigned_int","integer","exponent","float","number","numeric","tag","value","loop_kw","loop_header","loop_body","tname","start","end","flags","restr","exports","RegExp","CifValue","type","prec","num","text","tokenize","cif","all_re","tokens","tokenRegex","tokenized","cifsl","slice","length","m_type","m","match","push","lastIndex","w","exec","index","prototype","get_value","undefined","this","parseValue","tok","val","strval","trim","strnum","parseInt","parseFloat","parseDataBlocks","ciftokens","tagre","data_headers","i","name","data_blocks","dh","db","parseDataItems","blocktokens","data_items","vtypes","btokens","btok","shift","valtok","includes","header","ltok","body","unshift","tagn","loopn","di","j","ciftext","cifdict","block","items","global","version","bench","f","interval","t1","n","Date","_myIndexOf","k","myIndexOf","Array","indexOf","Function","precision","largeArray","prettyPrint","x","fmtnum","isNaN","isFinite","scale","Math","floor","log","normalized","pow","basic","toPrecision","toString","ret","foo","join","a","b","c","d","flag","hasOwnProperty","parseDate","parse","replace","Error","parseCSV","t","split","pat","patnum","count","baz","bar","substr","test","toCSV","A","row","s","dim","getURL","url","client","XMLHttpRequest","open","send","imageURL","img","crc32Array","from","to","table","crc","s1","s2","adler32","crc32","h","stream","round","y","z","q","r","key","charAt","base64","_dim","mapreduce","init","mapreduce2","setup","same","rep","v","dotMMsmall","p","woo","i0","_getCol","dotMMbig","xj","gc","VV","dotVV","dotMV","dotVM","i1","dot","mulVS","mulSV","diag","Ai","getDiag","min","identity","pointwise","params","fun","avec","thevec","haveret","substring","apply","pointwise2","_biforeach","_biforeach2","_foreach","_foreach2","ops2","add","sub","mul","div","mod","and","or","eq","neq","lt","gt","leq","geq","band","bor","bxor","lshift","rshift","rrshift","opseq","addeq","subeq","muleq","diveq","modeq","lshifteq","rshifteq","rrshifteq","bandeq","boreq","bxoreq","mathfuns","mathfuns2","ops1","neg","not","bnot","clone","mapreducers","any","all","sum","prod","norm2Squared","norminf","norm1","sup","inf","o","code","codeeq","call","truncVV","truncVS","truncSV","trunc","inv","Aj","Ii","Ij","abs","I","v0","det","alpha","temp","k1","transpose","A0","A1","Bj","negtranspose","_random","rnd","random","norm2","sqrt","linspace","max","getBlock","setBlock","B","getRange","J","Bi","AI","blockMatrix","X","M","N","Xij","Z","ZI","l","Xijk","tensor","xi","T","Tbinop","rr","rc","cr","cc","reciprocal","transjugate","Tunop","exp","conj","sin","cos","Aix","Aiy","Ajx","Ajy","Rix","Riy","Rjx","Rjy","d1","ax","ay","bx","by","Rx","Ry","Ax","Ay","get","ik","set","vx","vy","getRows","ry","rx","setRows","getRow","setRow","eig","house","toUpperHessenberg","me","C","Ci","Qi","Q","H","epsilon","QRFrancis","maxiter","tr","Hloc","Hi","iter","QH1","QH2","concat","Q0","p1","disc","n1","n2","QH","QB","R","E","Rk","Rj","lambda","ccsSparse","counts","Av","ccsFull","j0","j1","ccsDim","ccsTSolve","bj","dfs","ccsDFS","Pinv","km","k11","ccsLPSolve","Bv","ccsLUP1","threshold","e","L","U","Li","Lj","Lv","Ui","Uj","Uv","sol","P","ccsDFS0","ccsLPSolve0","ccsLUP0","ccsLUP","ccsGetBlock","jq","q0","q1","ccsDot","sA","sB","Cj","Cv","ccsLUPSolve","LUP","Xi","Xj","Xv","ccsbinop","eval","ccsScatter","Ri","Rv","Aii","ptr","ccsGather","sdim","sclone","sdiag","sidentity","stranspose","sLUP","tol","sdotMM","BTk","accum","reti","BT","sdotMV","sdotVM","sdotVV","sdot","sscatter","V","Vij","sgather","gather","pop","cLU","left","Infinity","right","cLUsolve","lu","cgrid","shape","cdelsq","g","dir","cdotMV","Spline","yl","yr","kl","kr","_at","x1","at","x0","mid","diff","dx","dy","zl","zr","pl","pr","roots","sqr","ai","bi","ci","ri","k0","y0","y1","D","stops","z0","z1","zm","t0","tm","side","spline","kn","fftpow2","xe","ye","xo","yo","si","_ifftpow2","ifftpow2","convpow2","axi","bxi","ayi","byi","fft","log2","ceil","cx","cy","Y","ifft","gradient","f0","f1","f2","t2","d2","it","uncmin","maxit","callback","options","grad","df0","step","g0","g1","Hy","ys","nstep","H1","Hinv","ten","isfinite","msg","solution","invHessian","iterations","message","Dopri","ymid","events","xh","yh","xs","dopri","event","k2","k3","k4","k5","k6","k7","er","erinf","e0","e1","ev","A3","A4","A5","A6","bm","yi","xl","xr","en","ei","sl","sr","LU","fast","absAjk","Akk","Ak","Pk","LUsolve","Pi","LUi","tmp","solve","echelonize","__solveLP","unbounded","svd","dotcc","a1","Ag","_solveLP","c0","b0","NaN","solveLP","Aeq","beq","Aeq2","A2","b4","c1","c2","c4","S","x2","MPStoLP","MPS","String","state","states","rows","sign","rl","vars","nv","err","w0","seedrandom","pool","math","width","chunks","significance","overflow","startdenom","ARC4","u","keylen","lowbits","flatten","obj","depth","result","prop","typ","mixkey","seed","smear","charCodeAt","fromCharCode","use_entropy","arc4","arguments","getTime","window","base0to1","base1to0","qpgen2","dmat","dvec","fddmat","crval","amat","bvec","fdamat","meq","iact","nact","work","ierr","l1","info","it1","iwzv","iwrv","iwrm","iwsv","iwuv","nvl","iwnbv","tt","gs","nu","t1inf","t2min","vsmall","tmpa","tmpb","go","lda","jm1","dpofa","kb","dposl","kp1","dpori","fn_goto_50","fn_goto_55","fn_goto_797","fn_goto_798","fn_goto_799","solveQP","Dmat","Amat","factorized","unconstrained_solution","tolerance","pythag","iteration","test_convergence","itmax","Compound","constructor","element_list","elements","elementsList","element","quantity","remove","splice","clear","getMass","mass","getPercentages","self","map","el","percentage","toHTML","html","PeriodicTable","atomicNumber","filterElements","group","results","period","filter","Object","keys","Utility","str","list","matches","fragment","getElement","deepClone","JSON","stringify","cross","v1","v2","unit","reduce","mod1","_deg2rad","PI","degToRad","deg","radToDeg","rad","includesAll","arr","elems","ans","parseSymOp","symopstr","xyz","symre","rotm","trns","res","search","interpretHallSymbol","hsym","symdata","rotms","trnss","mndtable","require$$0","parseCif","require$$1","cellToCellpar","cell","radians","lengths","nm","angles","ll","angle","acos","utils","cellparToCell","cellpar","ab_normal","a_direction","ad","angs","cosa","sina","va","vb","vc","Atoms","positions","scaled","tolerant","symbols","numbers","is_num","getAtomic","symbol","_arrays","_N","_pbc","_inv_cell","_cell","check_pos","set_array","_extract_tags","cblock","tags","extracted","basetype","baselen","_atom_types","atype_tags","typevals","atypes","sym","_atom_sites","asite_tags","sitevals","asites","_cellpars","cell_tags","cellpars","some","_symops","symopvals","_space_group_symop_operation_xyz","_symmetry_equiv_pos_as_xyz","hallsymbol","_space_group_name_Hall","_symmetry_space_group_name_Hall","symops","symmetry","get_array","get_chemical_symbols","get_atomic_numbers","get_cell","get_inv_cell","get_pbc","get_positions","get_scaled_positions","pos","readCif","structs","bname","sname","pbc","labels","type_symbol","label","Cartn_x","Cartn_y","Cartn_z","fract_x","fract_y","fract_z","fpos","allfpos","allsyms","alllabs","p0","allp","rot","fill","DEFAULT_CONFIG","matrix","predictable","randomSeed","_typeof","Symbol","iterator","isNumber","isBigNumber","isComplex","getPrototypeOf","isFraction","isUnit","isString","isArray","isMatrix","isCollection","isDenseMatrix","isSparseMatrix","isRange","isIndex","isBoolean","isResultSet","isHelp","isFunction","isDate","isRegExp","isObject","isNull","isUndefined","isAccessorNode","isNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","typeOf","valueOf","TypeError","mapObject","object","extend","deepStrictEqual","len","property","pickShallow","properties","copy","MATRIX_OPTIONS","NUMBER_OPTIONS","_extends","assign","target","source","config","freeze","ok","notOk","undef","create","_types","anyType","_ignore","_conversions","typed","types","conversions","ignore","findTypeByName","typeName","entry","findInArray","hint","toLowerCase","findTypeIndex","findTypeName","find","fn","signature","signatures","convert","conversion","stringifyParams","param","typeNames","getTypeName","restParam","parseParam","notEmpty","notIgnore","matchingConversions","filterConversions","exactTypes","typeIndex","conversionIndex","convertibleTypes","parseSignature","array","parsedParam","SyntaxError","isInvalidParam","hasRestParam","last","hasConversions","compileTest","test0","test1","tests","compileTests","varIndex","initial","lastTest","testRestParam","args","getParamAtIndex","getExpectedTypeNames","excludeConversions","isExactType","mergeExpectedParams","uniq","flatMap","createError","expected","_name","matchingSignatures","nextMatchingDefs","actualType","data","category","actual","maxLength","expectedLength","getLowestTypeIndex","getLowestConversionIndex","compareParams","param1","param2","compareSignatures","signature1","signature2","forEach","compileArgsPreprocessing","fnConvert","compiledConversions","compileArgConversion","fnPreprocess","offset","conversion0","conversion1","arg","createSignaturesMap","signaturesMap","splitParams","ignoreConversionTypes","_splitParams","typeGroups","filteredTypes","typeGroup","hasConflictingParams","ii","hasOverlap","len1","len2","restParam1","restParam2","createTypedFunction","parsedSignatures","notNull","parsedSignature","conflictingSignature","sort","ok0","ok1","ok2","ok3","ok4","ok5","allOk","test00","test10","test20","test30","test40","test50","test01","test11","test21","test31","test41","test51","fns","fn0","fn1","fn2","fn3","fn4","fn5","len0","len3","len4","len5","iStart","iEnd","generic","arg0","arg1","defineProperty","contains","item","array1","array2","entries","getName","extractSignatures","validateUnique","_signature","_fn","addType","beforeObjectTest","addConversion","factory","isInteger","format","notation","toFixed","toExponential","toEngineering","digits","splitNumber","coefficients","zeros","rounded","roundDigits","newExp","missingZeros","expDiff","decimalIdx","decimals","decimalVal","splitValue","pp","first","lowerExp","upperExp","DBL_EPSILON","Number","EPSILON","nearlyEqual","isZero","toSignificantDigits","valueWithoutExp","valueStr","formatNumber","formatBigNumber","looksLikeFraction","fraction","formatArray","syntax","DimensionError","relation","stack","IndexError","arraySize","_validate","size","dimNext","child","validate","validateIndex","resize","defaultValue","_resize","elem","oldLen","newLen","minLen","reshape","sizes","newArray","flatArray","product","prev","curr","totalSize","sizeIndex","_reshape","tmpArray2","tmpArray","squeeze","dims","_squeeze","next","unsqueeze","outer","_unsqueeze","flat","getArrayDataType","itemType","dependencies","meta","assertAndCreate","scope","deps","stripOptionalNotation","assertDependencies","isFactory","dependency","isOptionalDependency","every","missingDependencies","RangeError","isDimensionError","isIndexError","_createTyped2","typedFunction","createTyped","_ref","BigNumber","Complex","DenseMatrix","Fraction","throwNoBignumber","throwNoComplex","toNumber","throwNoFraction","throwNoMatrix","globalScope","Decimal","inexact","noConflict","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","DEFAULTS","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","mathfloor","mathpow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","PI_PRECISION","digitsToString","ws","indexOfLastWord","getZeroString","checkInt32","checkRoundingDigits","rm","repeating","rd","convertBase","baseIn","baseOut","arrL","strL","reverse","absoluteValue","finalise","comparedTo","cmp","xdL","ydL","xd","yd","cosine","Ctor","sd","tinyPow","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","cubeRoot","cbrt","t3","t3plusx","divide","decimalPlaces","dp","dividedBy","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","isInt","isNegative","isPositive","isPos","lessThan","lessThanOrEqualTo","logarithm","base","isBase10","denominator","naturalLogarithm","getLn10","xLTy","getBase10Exponent","naturalExponential","negated","carry","getPrecision","sine","sin2_x","squareRoot","tangent","tan","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFraction","maxD","d0","n0","toHexadecimal","toHex","toNearest","toOctal","toPower","yn","intPow","toSD","truncated","toJSON","multiplyInteger","compare","aL","bL","subtract","logBase","more","prodL","qd","rem","remL","rem0","xL","yd0","yL","yz","isTruncated","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","ltgt","guard","numerator","parseDecimal","parseOther","divisor","isFloat","isHyperbolic","pi","atan2","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","isDecimalInstance","log10","Uint32Array","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","for","toStringTag","createBigNumberClass","on","mathjs","fromJSON","json","isClass","root","parser_exit","logHypot","_a","_b","loh","re","im","expm1","limit","xx","cosm1","noIM","oneMinus","onePlus","places","createComplexClass","toPolar","phi","strRe","strIm","fromPolar","hasBase","errorConstructor","IntermediateInheritor","DivisionByZero","InvalidParameter","throwInvalidParam","p2","gcd","eps","cont","rec","excludeWhole","whole","dec","cycLen","cycleLen","cycOff","rem1","rem2","modpow","cycleStart","createFractionClass","createMatrixClass","Matrix","storage","datatype","subset","replacement","skipZeros","toArray","createDenseMatrixClass","_data","_size","_datatype","preprocess","_get","isScalar","_getSubmatrix","range","dimension","_set","submatrix","sSize","iSize","_fit","_setSubmatrix","dataIndex","subIndex","newSize","changed","createDenseMatrix","getDataType","indexI","sizeArray","recurse","diagonal","kSuper","kSub","columns","_value","ms","swapRows","_swapRows","vi","deepMap","absNumber","addNumber","multiplyNumber","unaryMinusNumber","complexEquals","createEqualScalar","bigNearlyEqual","equalBase","createEqualScalarNumber","_ref2","createSparseMatrixClass","equalScalar","SparseMatrix","_values","_index","_ptr","_createFromArray","_createFromMatrix","values","zero","_getsubset","idx","kk","mvalues","mindex","mptr","pv","_setsubset","_getValueIndex","top","bottom","_insert","ins","_toArray","createSparseMatrix","density","_remove","colIndex","rowIndex","_i","r1","_i2","_i3","_j","minRow","maxRow","minColumn","maxColumn","invoke","_k","_i5","_map","_k2","_i7","_forEachRow","kx","ky","createNumber","string","Unit","valuelessUnit","createBignumber","createFraction","createMatrix","_create","createUnaryMinus","createAbs","createAddScalar","fixPrefix","createAlgorithm01","denseMatrix","sparseMatrix","inverse","adata","asize","adt","bvalues","bindex","bptr","bsize","bdt","dt","cf","cdata","mark","createAlgorithm10","avalues","aindex","aptr","createAlgorithm13","bdata","csize","_iterate","level","av","bv","cv","createAlgorithm14","createAlgorithm11","cvalues","cindex","cptr","createAlgorithm03","createAlgorithm05","xa","xb","wa","wb","wai","wbi","createMultiplyScalar","_normalize","multiply","createMultiply","addScalar","multiplyScalar","algorithm11","algorithm14","_validateMatrixDimensions","size1","size2","_multiplyVectorMatrix","alength","bcolumns","af","mf","_multiplyVectorDenseMatrix","_multiplyMatrixVector","arows","acolumns","brows","ib","vbi","ka0","ka1","ka","ia","ic","_multiplyMatrixMatrix","jb","kb0","kb1","cij","vbij","xsize","ysize","_multiplyVectorVector","rest","createSqrt","_sqrtNumber","createSubtract","unaryMinus","algorithm01","algorithm03","algorithm05","algorithm10","algorithm13","checkEqualDimensions","createConj","conjugate","createCross","_cross","highestDimension","xSize","ySize","noBignumber","noFraction","noMatrix","createSize","createNumeric","_number","bignumber","validInputTypes","validOutputTypes","outputType","inputType","createDivideScalar","createDot","_validateDim","aIsColumn","bIsColumn","_c","_c2","_c3","xindex","xvalues","yindex","yvalues","xLen","yLen","createDistance","divideScalar","_2d","xCoeff","yCoeff","constant","_distancePointLine2D","lineTwoPtY","lineTwoPtX","lineOnePtY","lineOnePtX","pointX","pointY","_3d","_parametricLine","_distancePointLine3D","_containsOnlyNumbers","_euclideanDistance","xCoeffLine","yCoeffLine","pointZ","pointOneX","pointOneY","pointTwoX","pointTwoY","pointOneZ","pointTwoZ","_isNumber","aI","_pairwise","pointA","pointB","_distancePairwise","_objectToArray","den","vectorSize","distance","atomicMasses","He","Be","O","F","Ne","Na","Mg","Al","Si","Cl","Ar","K","Ca","Sc","Ti","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Cd","In","Sn","Sb","Te","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Po","At","Rn","Fr","Ra","Ac","Th","Pa","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fl","Mc","Ts","Og","uffRadii","covalentRadii","handleOverlap","r2","overlap","pbcDistance","cellvectors","measuredDistance","newDistance","doOverlap","areBound","atomA","atomB","computeOverlapVolume","coordinates","atoms","overlapVolume","radiiDict","massDict","PoreMat","cifFile","cifText","readFileSync","volume","elementCounts","radii","symbolSet","Set","occupiedVolume","atomsVolume","voidVolume"],"mappings":"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0B,KAAM,SACN6E,KAAMqvB,UACL,CACDl0B,KAAM,QACN6E,KAAMqxB,SACL,CACDl2B,KAAM,QACN6E,KAAMsvB,SACL,CACDn0B,KAAM,SACN6E,KAAMuvB,UACL,CACDp0B,KAAM,cACN6E,KAAMyvB,eACL,CACDt0B,KAAM,eACN6E,KAAM0vB,gBACL,CACDv0B,KAAM,QACN6E,KAAM2vB,SACL,CACDx0B,KAAM,QACN6E,KAAM4vB,SACL,CACDz0B,KAAM,UACN6E,KAAM6vB,WACL,CACD10B,KAAM,YACN6E,KAAM8vB,aACL,CACD30B,KAAM,OACN6E,KAAM+vB,QACL,CACD50B,KAAM,WACN6E,KAAMgwB,YACL,CACD70B,KAAM,OACN6E,KAAMiwB,QACL,CACD90B,KAAM,SACN6E,KAAMkwB,UACL,CACD/0B,KAAM,OACN6E,KAAMowB,QACL,CACDj1B,KAAM,YACN6E,KAAMqwB,aACL,CACDl1B,KAAM,eACN6E,KAAMswB,gBACL,CACDn1B,KAAM,YACN6E,KAAMwwB,aACL,CACDr1B,KAAM,iBACN6E,KAAMywB,kBACL,CACDt1B,KAAM,YACN6E,KAAM0wB,aACL,CACDv1B,KAAM,kBACN6E,KAAM2wB,mBACL,CACDx1B,KAAM,eACN6E,KAAM4wB,gBACL,CACDz1B,KAAM,eACN6E,KAAM8wB,gBACL,CACD31B,KAAM,yBACN6E,KAAM6wB,0BACL,CACD11B,KAAM,YACN6E,KAAM+wB,aACL,CACD51B,KAAM,OACN6E,KAAMuwB,QACL,CACDp1B,KAAM,aACN6E,KAAMgxB,cACL,CACD71B,KAAM,eACN6E,KAAMixB,gBACL,CACD91B,KAAM,kBACN6E,KAAMkxB,mBACL,CACD/1B,KAAM,YACN6E,KAAMmxB,aACL,CACDh2B,KAAM,aACN6E,KAAMoxB,cACL,CACDj2B,KAAM,SACN6E,KAAMmwB,WAGR+C,EAAME,YAAc,CAAC,CACnBryB,KAAM,SACNC,GAAI,YACJkzB,QAAS,SAAiBr2B,MACnBklC,GACHI,iBAAiBtlC,GAIfw/B,OAAOx/B,GAAK,SACR,IAAI2zB,UAAU,uFAA8F3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"}